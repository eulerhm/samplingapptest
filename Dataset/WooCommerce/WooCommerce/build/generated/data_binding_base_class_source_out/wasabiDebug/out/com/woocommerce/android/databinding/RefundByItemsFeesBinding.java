// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RefundByItemsFeesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final View issueRefundDividerBelowFees;

  @NonNull
  public final View issueRefundDividerBelowFeesTaxes;

  @NonNull
  public final RecyclerView issueRefundFeeLines;

  @NonNull
  public final LinearLayout issueRefundFeesRefundSection;

  @NonNull
  public final MaterialTextView issueRefundFeesSubtotal;

  @NonNull
  public final LinearLayout issueRefundFeesSubtotalSection;

  @NonNull
  public final MaterialTextView issueRefundFeesTax;

  @NonNull
  public final LinearLayout issueRefundFeesTaxesSection;

  @NonNull
  public final MaterialTextView issueRefundFeesTotal;

  @NonNull
  public final MaterialTextView issueRefundLblFeesRefundTotal;

  @NonNull
  public final MaterialTextView issueRefundLblFeesSubtotal;

  @NonNull
  public final MaterialTextView issueRefundLblFeesTax;

  private RefundByItemsFeesBinding(@NonNull LinearLayout rootView,
      @NonNull View issueRefundDividerBelowFees, @NonNull View issueRefundDividerBelowFeesTaxes,
      @NonNull RecyclerView issueRefundFeeLines, @NonNull LinearLayout issueRefundFeesRefundSection,
      @NonNull MaterialTextView issueRefundFeesSubtotal,
      @NonNull LinearLayout issueRefundFeesSubtotalSection,
      @NonNull MaterialTextView issueRefundFeesTax,
      @NonNull LinearLayout issueRefundFeesTaxesSection,
      @NonNull MaterialTextView issueRefundFeesTotal,
      @NonNull MaterialTextView issueRefundLblFeesRefundTotal,
      @NonNull MaterialTextView issueRefundLblFeesSubtotal,
      @NonNull MaterialTextView issueRefundLblFeesTax) {
    this.rootView = rootView;
    this.issueRefundDividerBelowFees = issueRefundDividerBelowFees;
    this.issueRefundDividerBelowFeesTaxes = issueRefundDividerBelowFeesTaxes;
    this.issueRefundFeeLines = issueRefundFeeLines;
    this.issueRefundFeesRefundSection = issueRefundFeesRefundSection;
    this.issueRefundFeesSubtotal = issueRefundFeesSubtotal;
    this.issueRefundFeesSubtotalSection = issueRefundFeesSubtotalSection;
    this.issueRefundFeesTax = issueRefundFeesTax;
    this.issueRefundFeesTaxesSection = issueRefundFeesTaxesSection;
    this.issueRefundFeesTotal = issueRefundFeesTotal;
    this.issueRefundLblFeesRefundTotal = issueRefundLblFeesRefundTotal;
    this.issueRefundLblFeesSubtotal = issueRefundLblFeesSubtotal;
    this.issueRefundLblFeesTax = issueRefundLblFeesTax;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RefundByItemsFeesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RefundByItemsFeesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.refund_by_items_fees, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RefundByItemsFeesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.issueRefund_dividerBelowFees;
      View issueRefundDividerBelowFees = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundDividerBelowFees == null) {
        break missingId;
      }

      id = R.id.issueRefund_dividerBelowFeesTaxes;
      View issueRefundDividerBelowFeesTaxes = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundDividerBelowFeesTaxes == null) {
        break missingId;
      }

      id = R.id.issueRefund_feeLines;
      RecyclerView issueRefundFeeLines = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundFeeLines == null) {
        break missingId;
      }

      id = R.id.issueRefund_feesRefundSection;
      LinearLayout issueRefundFeesRefundSection = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundFeesRefundSection == null) {
        break missingId;
      }

      id = R.id.issueRefund_feesSubtotal;
      MaterialTextView issueRefundFeesSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundFeesSubtotal == null) {
        break missingId;
      }

      id = R.id.issueRefund_feesSubtotalSection;
      LinearLayout issueRefundFeesSubtotalSection = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundFeesSubtotalSection == null) {
        break missingId;
      }

      id = R.id.issueRefund_feesTax;
      MaterialTextView issueRefundFeesTax = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundFeesTax == null) {
        break missingId;
      }

      id = R.id.issueRefund_feesTaxesSection;
      LinearLayout issueRefundFeesTaxesSection = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundFeesTaxesSection == null) {
        break missingId;
      }

      id = R.id.issueRefund_feesTotal;
      MaterialTextView issueRefundFeesTotal = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundFeesTotal == null) {
        break missingId;
      }

      id = R.id.issueRefund_lblFeesRefundTotal;
      MaterialTextView issueRefundLblFeesRefundTotal = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundLblFeesRefundTotal == null) {
        break missingId;
      }

      id = R.id.issueRefund_lblFeesSubtotal;
      MaterialTextView issueRefundLblFeesSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundLblFeesSubtotal == null) {
        break missingId;
      }

      id = R.id.issueRefund_lblFeesTax;
      MaterialTextView issueRefundLblFeesTax = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundLblFeesTax == null) {
        break missingId;
      }

      return new RefundByItemsFeesBinding((LinearLayout) rootView, issueRefundDividerBelowFees,
          issueRefundDividerBelowFeesTaxes, issueRefundFeeLines, issueRefundFeesRefundSection,
          issueRefundFeesSubtotal, issueRefundFeesSubtotalSection, issueRefundFeesTax,
          issueRefundFeesTaxesSection, issueRefundFeesTotal, issueRefundLblFeesRefundTotal,
          issueRefundLblFeesSubtotal, issueRefundLblFeesTax);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
