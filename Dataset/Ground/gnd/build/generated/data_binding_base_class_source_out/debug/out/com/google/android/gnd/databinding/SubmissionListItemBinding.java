// Generated by data binding compiler. Do not edit!
package com.google.android.gnd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.gnd.R;
import com.google.android.gnd.ui.home.featuredetails.SubmissionListItemViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class SubmissionListItemBinding extends ViewDataBinding {
  @NonNull
  public final TableRow fieldLabelRow;

  @NonNull
  public final TableRow fieldValueRow;

  @NonNull
  public final TextView lastModifiedDate;

  @NonNull
  public final TextView lastModifiedTime;

  @NonNull
  public final TextView separatorDot1;

  @NonNull
  public final TextView separatorDot2;

  @NonNull
  public final ImageButton submissionDetailsBtn;

  @NonNull
  public final View submissionItemDivider;

  @NonNull
  public final TextView userName;

  @Bindable
  protected SubmissionListItemViewModel mViewModel;

  protected SubmissionListItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TableRow fieldLabelRow, TableRow fieldValueRow, TextView lastModifiedDate,
      TextView lastModifiedTime, TextView separatorDot1, TextView separatorDot2,
      ImageButton submissionDetailsBtn, View submissionItemDivider, TextView userName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.fieldLabelRow = fieldLabelRow;
    this.fieldValueRow = fieldValueRow;
    this.lastModifiedDate = lastModifiedDate;
    this.lastModifiedTime = lastModifiedTime;
    this.separatorDot1 = separatorDot1;
    this.separatorDot2 = separatorDot2;
    this.submissionDetailsBtn = submissionDetailsBtn;
    this.submissionItemDivider = submissionItemDivider;
    this.userName = userName;
  }

  public abstract void setViewModel(@Nullable SubmissionListItemViewModel viewModel);

  @Nullable
  public SubmissionListItemViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static SubmissionListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.submission_list_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SubmissionListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SubmissionListItemBinding>inflateInternal(inflater, R.layout.submission_list_item, root, attachToRoot, component);
  }

  @NonNull
  public static SubmissionListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.submission_list_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SubmissionListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SubmissionListItemBinding>inflateInternal(inflater, R.layout.submission_list_item, null, false, component);
  }

  public static SubmissionListItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SubmissionListItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (SubmissionListItemBinding)bind(component, view, R.layout.submission_list_item);
  }
}
