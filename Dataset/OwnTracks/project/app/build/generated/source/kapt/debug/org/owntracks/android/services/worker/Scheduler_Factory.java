// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.services.worker;

import android.content.Context;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.owntracks.android.support.Preferences;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Scheduler_Factory implements Factory<Scheduler> {
  private final Provider<Context> contextProvider;

  private final Provider<Preferences> preferencesProvider;

  public Scheduler_Factory(Provider<Context> contextProvider,
      Provider<Preferences> preferencesProvider) {
    this.contextProvider = contextProvider;
    this.preferencesProvider = preferencesProvider;
  }

  @Override
  public Scheduler get() {
    Scheduler instance = newInstance(contextProvider.get());
    Scheduler_MembersInjector.injectPreferences(instance, preferencesProvider.get());
    return instance;
  }

  public static Scheduler_Factory create(Provider<Context> contextProvider,
      Provider<Preferences> preferencesProvider) {
    return new Scheduler_Factory(contextProvider, preferencesProvider);
  }

  public static Scheduler newInstance(Context context) {
    return new Scheduler(context);
  }
}
