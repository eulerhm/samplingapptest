// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.publicize.ConnectButton;
import org.wordpress.android.ui.reader.views.ReaderRecyclerView;
import org.wordpress.android.widgets.WPTextView;

public final class PublicizeDetailFragmentBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ConnectButton buttonConnect;

  @NonNull
  public final LinearLayout connectionsContainer;

  @NonNull
  public final NestedScrollView publicizeDetailsNestedScrollView;

  @NonNull
  public final ReaderRecyclerView recyclerView;

  @NonNull
  public final LinearLayout serviceContainer;

  @NonNull
  public final WPTextView textDescription;

  @NonNull
  public final WPTextView textService;

  private PublicizeDetailFragmentBinding(@NonNull NestedScrollView rootView,
      @NonNull ConnectButton buttonConnect, @NonNull LinearLayout connectionsContainer,
      @NonNull NestedScrollView publicizeDetailsNestedScrollView,
      @NonNull ReaderRecyclerView recyclerView, @NonNull LinearLayout serviceContainer,
      @NonNull WPTextView textDescription, @NonNull WPTextView textService) {
    this.rootView = rootView;
    this.buttonConnect = buttonConnect;
    this.connectionsContainer = connectionsContainer;
    this.publicizeDetailsNestedScrollView = publicizeDetailsNestedScrollView;
    this.recyclerView = recyclerView;
    this.serviceContainer = serviceContainer;
    this.textDescription = textDescription;
    this.textService = textService;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static PublicizeDetailFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PublicizeDetailFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.publicize_detail_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PublicizeDetailFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_connect;
      ConnectButton buttonConnect = ViewBindings.findChildViewById(rootView, id);
      if (buttonConnect == null) {
        break missingId;
      }

      id = R.id.connections_container;
      LinearLayout connectionsContainer = ViewBindings.findChildViewById(rootView, id);
      if (connectionsContainer == null) {
        break missingId;
      }

      NestedScrollView publicizeDetailsNestedScrollView = (NestedScrollView) rootView;

      id = R.id.recycler_view;
      ReaderRecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.service_container;
      LinearLayout serviceContainer = ViewBindings.findChildViewById(rootView, id);
      if (serviceContainer == null) {
        break missingId;
      }

      id = R.id.text_description;
      WPTextView textDescription = ViewBindings.findChildViewById(rootView, id);
      if (textDescription == null) {
        break missingId;
      }

      id = R.id.text_service;
      WPTextView textService = ViewBindings.findChildViewById(rootView, id);
      if (textService == null) {
        break missingId;
      }

      return new PublicizeDetailFragmentBinding((NestedScrollView) rootView, buttonConnect,
          connectionsContainer, publicizeDetailsNestedScrollView, recyclerView, serviceContainer,
          textDescription, textService);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
