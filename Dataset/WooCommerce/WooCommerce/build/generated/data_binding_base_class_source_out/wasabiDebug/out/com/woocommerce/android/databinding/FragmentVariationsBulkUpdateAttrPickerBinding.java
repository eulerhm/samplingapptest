// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVariationsBulkUpdateAttrPickerBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final View bottomSpacer;

  @NonNull
  public final LinearLayoutCompat collapsedStateHeader;

  @NonNull
  public final MaterialToolbar fullscreenStateToolbar;

  @NonNull
  public final AppCompatTextView priceSubtitle;

  @NonNull
  public final AppCompatTextView priceTitle;

  @NonNull
  public final LinearLayoutCompat regularPrice;

  @NonNull
  public final LinearLayoutCompat salePrice;

  @NonNull
  public final AppCompatTextView salePriceSubtitle;

  @NonNull
  public final AppCompatTextView salePriceTitle;

  @NonNull
  public final AppCompatTextView subtitle;

  @NonNull
  public final AppCompatTextView title;

  private FragmentVariationsBulkUpdateAttrPickerBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull View bottomSpacer, @NonNull LinearLayoutCompat collapsedStateHeader,
      @NonNull MaterialToolbar fullscreenStateToolbar, @NonNull AppCompatTextView priceSubtitle,
      @NonNull AppCompatTextView priceTitle, @NonNull LinearLayoutCompat regularPrice,
      @NonNull LinearLayoutCompat salePrice, @NonNull AppCompatTextView salePriceSubtitle,
      @NonNull AppCompatTextView salePriceTitle, @NonNull AppCompatTextView subtitle,
      @NonNull AppCompatTextView title) {
    this.rootView = rootView;
    this.bottomSpacer = bottomSpacer;
    this.collapsedStateHeader = collapsedStateHeader;
    this.fullscreenStateToolbar = fullscreenStateToolbar;
    this.priceSubtitle = priceSubtitle;
    this.priceTitle = priceTitle;
    this.regularPrice = regularPrice;
    this.salePrice = salePrice;
    this.salePriceSubtitle = salePriceSubtitle;
    this.salePriceTitle = salePriceTitle;
    this.subtitle = subtitle;
    this.title = title;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVariationsBulkUpdateAttrPickerBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVariationsBulkUpdateAttrPickerBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_variations_bulk_update_attr_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVariationsBulkUpdateAttrPickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_spacer;
      View bottomSpacer = ViewBindings.findChildViewById(rootView, id);
      if (bottomSpacer == null) {
        break missingId;
      }

      id = R.id.collapsed_state_header;
      LinearLayoutCompat collapsedStateHeader = ViewBindings.findChildViewById(rootView, id);
      if (collapsedStateHeader == null) {
        break missingId;
      }

      id = R.id.fullscreen_state_toolbar;
      MaterialToolbar fullscreenStateToolbar = ViewBindings.findChildViewById(rootView, id);
      if (fullscreenStateToolbar == null) {
        break missingId;
      }

      id = R.id.price_subtitle;
      AppCompatTextView priceSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (priceSubtitle == null) {
        break missingId;
      }

      id = R.id.price_title;
      AppCompatTextView priceTitle = ViewBindings.findChildViewById(rootView, id);
      if (priceTitle == null) {
        break missingId;
      }

      id = R.id.regular_price;
      LinearLayoutCompat regularPrice = ViewBindings.findChildViewById(rootView, id);
      if (regularPrice == null) {
        break missingId;
      }

      id = R.id.sale_price;
      LinearLayoutCompat salePrice = ViewBindings.findChildViewById(rootView, id);
      if (salePrice == null) {
        break missingId;
      }

      id = R.id.sale_price_subtitle;
      AppCompatTextView salePriceSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (salePriceSubtitle == null) {
        break missingId;
      }

      id = R.id.sale_price_title;
      AppCompatTextView salePriceTitle = ViewBindings.findChildViewById(rootView, id);
      if (salePriceTitle == null) {
        break missingId;
      }

      id = R.id.subtitle;
      AppCompatTextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.title;
      AppCompatTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new FragmentVariationsBulkUpdateAttrPickerBinding((LinearLayoutCompat) rootView,
          bottomSpacer, collapsedStateHeader, fullscreenStateToolbar, priceSubtitle, priceTitle,
          regularPrice, salePrice, salePriceSubtitle, salePriceTitle, subtitle, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
