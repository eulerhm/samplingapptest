// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInfoScreenBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialTextView infoHeading;

  @NonNull
  public final ImageView infoImage;

  @NonNull
  public final MaterialButton infoLink;

  @NonNull
  public final MaterialTextView infoMessage;

  private FragmentInfoScreenBinding(@NonNull ScrollView rootView,
      @NonNull MaterialTextView infoHeading, @NonNull ImageView infoImage,
      @NonNull MaterialButton infoLink, @NonNull MaterialTextView infoMessage) {
    this.rootView = rootView;
    this.infoHeading = infoHeading;
    this.infoImage = infoImage;
    this.infoLink = infoLink;
    this.infoMessage = infoMessage;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInfoScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInfoScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_info_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInfoScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.info_heading;
      MaterialTextView infoHeading = ViewBindings.findChildViewById(rootView, id);
      if (infoHeading == null) {
        break missingId;
      }

      id = R.id.info_image;
      ImageView infoImage = ViewBindings.findChildViewById(rootView, id);
      if (infoImage == null) {
        break missingId;
      }

      id = R.id.info_link;
      MaterialButton infoLink = ViewBindings.findChildViewById(rootView, id);
      if (infoLink == null) {
        break missingId;
      }

      id = R.id.info_message;
      MaterialTextView infoMessage = ViewBindings.findChildViewById(rootView, id);
      if (infoMessage == null) {
        break missingId;
      }

      return new FragmentInfoScreenBinding((ScrollView) rootView, infoHeading, infoImage, infoLink,
          infoMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
