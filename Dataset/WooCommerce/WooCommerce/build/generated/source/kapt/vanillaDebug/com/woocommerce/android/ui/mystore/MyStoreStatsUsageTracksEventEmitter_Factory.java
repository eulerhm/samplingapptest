// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.mystore;

import com.woocommerce.android.analytics.AnalyticsTrackerWrapper;
import com.woocommerce.android.tools.SelectedSite;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineScope;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyStoreStatsUsageTracksEventEmitter_Factory implements Factory<MyStoreStatsUsageTracksEventEmitter> {
  private final Provider<AnalyticsTrackerWrapper> analyticsTrackerWrapperProvider;

  private final Provider<CoroutineScope> appCoroutineScopeProvider;

  private final Provider<SelectedSite> selectedSiteProvider;

  public MyStoreStatsUsageTracksEventEmitter_Factory(
      Provider<AnalyticsTrackerWrapper> analyticsTrackerWrapperProvider,
      Provider<CoroutineScope> appCoroutineScopeProvider,
      Provider<SelectedSite> selectedSiteProvider) {
    this.analyticsTrackerWrapperProvider = analyticsTrackerWrapperProvider;
    this.appCoroutineScopeProvider = appCoroutineScopeProvider;
    this.selectedSiteProvider = selectedSiteProvider;
  }

  @Override
  public MyStoreStatsUsageTracksEventEmitter get() {
    return newInstance(analyticsTrackerWrapperProvider.get(), appCoroutineScopeProvider.get(), selectedSiteProvider.get());
  }

  public static MyStoreStatsUsageTracksEventEmitter_Factory create(
      Provider<AnalyticsTrackerWrapper> analyticsTrackerWrapperProvider,
      Provider<CoroutineScope> appCoroutineScopeProvider,
      Provider<SelectedSite> selectedSiteProvider) {
    return new MyStoreStatsUsageTracksEventEmitter_Factory(analyticsTrackerWrapperProvider, appCoroutineScopeProvider, selectedSiteProvider);
  }

  public static MyStoreStatsUsageTracksEventEmitter newInstance(
      AnalyticsTrackerWrapper analyticsTrackerWrapper, CoroutineScope appCoroutineScope,
      SelectedSite selectedSite) {
    return new MyStoreStatsUsageTracksEventEmitter(analyticsTrackerWrapper, appCoroutineScope, selectedSite);
  }
}
