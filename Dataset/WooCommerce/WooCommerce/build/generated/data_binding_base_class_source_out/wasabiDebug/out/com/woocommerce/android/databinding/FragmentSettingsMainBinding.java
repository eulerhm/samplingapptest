// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.ui.prefs.WCSettingsButton;
import com.woocommerce.android.ui.prefs.WCSettingsOptionValueView;
import com.woocommerce.android.ui.prefs.WCSettingsToggleOptionView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final WCSettingsButton btnOptionLogout;

  @NonNull
  public final LinearLayout containerNotifsNew;

  @NonNull
  public final LinearLayout containerNotifsOld;

  @NonNull
  public final ImageView imageHeart;

  @NonNull
  public final WCSettingsOptionValueView optionAbout;

  @NonNull
  public final WCSettingsOptionValueView optionBetaFeatures;

  @NonNull
  public final WCSettingsOptionValueView optionCardReaderPayments;

  @NonNull
  public final WCSettingsOptionValueView optionHelpAndSupport;

  @NonNull
  public final WCSettingsToggleOptionView optionImageOptimization;

  @NonNull
  public final WCSettingsOptionValueView optionInstallJetpack;

  @NonNull
  public final WCSettingsOptionValueView optionLicenses;

  @NonNull
  public final WCSettingsOptionValueView optionNotifications;

  @NonNull
  public final WCSettingsToggleOptionView optionNotifsOrders;

  @NonNull
  public final WCSettingsToggleOptionView optionNotifsReviews;

  @NonNull
  public final WCSettingsToggleOptionView optionNotifsTone;

  @NonNull
  public final WCSettingsOptionValueView optionPrivacy;

  @NonNull
  public final WCSettingsOptionValueView optionSendFeedback;

  @NonNull
  public final WCSettingsOptionValueView optionTheme;

  @NonNull
  public final WCSettingsOptionValueView optionWhatsNew;

  @NonNull
  public final MaterialTextView settingsHiring;

  @NonNull
  public final LinearLayout storeSettingsContainer;

  private FragmentSettingsMainBinding(@NonNull ScrollView rootView,
      @NonNull WCSettingsButton btnOptionLogout, @NonNull LinearLayout containerNotifsNew,
      @NonNull LinearLayout containerNotifsOld, @NonNull ImageView imageHeart,
      @NonNull WCSettingsOptionValueView optionAbout,
      @NonNull WCSettingsOptionValueView optionBetaFeatures,
      @NonNull WCSettingsOptionValueView optionCardReaderPayments,
      @NonNull WCSettingsOptionValueView optionHelpAndSupport,
      @NonNull WCSettingsToggleOptionView optionImageOptimization,
      @NonNull WCSettingsOptionValueView optionInstallJetpack,
      @NonNull WCSettingsOptionValueView optionLicenses,
      @NonNull WCSettingsOptionValueView optionNotifications,
      @NonNull WCSettingsToggleOptionView optionNotifsOrders,
      @NonNull WCSettingsToggleOptionView optionNotifsReviews,
      @NonNull WCSettingsToggleOptionView optionNotifsTone,
      @NonNull WCSettingsOptionValueView optionPrivacy,
      @NonNull WCSettingsOptionValueView optionSendFeedback,
      @NonNull WCSettingsOptionValueView optionTheme,
      @NonNull WCSettingsOptionValueView optionWhatsNew, @NonNull MaterialTextView settingsHiring,
      @NonNull LinearLayout storeSettingsContainer) {
    this.rootView = rootView;
    this.btnOptionLogout = btnOptionLogout;
    this.containerNotifsNew = containerNotifsNew;
    this.containerNotifsOld = containerNotifsOld;
    this.imageHeart = imageHeart;
    this.optionAbout = optionAbout;
    this.optionBetaFeatures = optionBetaFeatures;
    this.optionCardReaderPayments = optionCardReaderPayments;
    this.optionHelpAndSupport = optionHelpAndSupport;
    this.optionImageOptimization = optionImageOptimization;
    this.optionInstallJetpack = optionInstallJetpack;
    this.optionLicenses = optionLicenses;
    this.optionNotifications = optionNotifications;
    this.optionNotifsOrders = optionNotifsOrders;
    this.optionNotifsReviews = optionNotifsReviews;
    this.optionNotifsTone = optionNotifsTone;
    this.optionPrivacy = optionPrivacy;
    this.optionSendFeedback = optionSendFeedback;
    this.optionTheme = optionTheme;
    this.optionWhatsNew = optionWhatsNew;
    this.settingsHiring = settingsHiring;
    this.storeSettingsContainer = storeSettingsContainer;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_option_logout;
      WCSettingsButton btnOptionLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnOptionLogout == null) {
        break missingId;
      }

      id = R.id.container_notifs_new;
      LinearLayout containerNotifsNew = ViewBindings.findChildViewById(rootView, id);
      if (containerNotifsNew == null) {
        break missingId;
      }

      id = R.id.container_notifs_old;
      LinearLayout containerNotifsOld = ViewBindings.findChildViewById(rootView, id);
      if (containerNotifsOld == null) {
        break missingId;
      }

      id = R.id.imageHeart;
      ImageView imageHeart = ViewBindings.findChildViewById(rootView, id);
      if (imageHeart == null) {
        break missingId;
      }

      id = R.id.option_about;
      WCSettingsOptionValueView optionAbout = ViewBindings.findChildViewById(rootView, id);
      if (optionAbout == null) {
        break missingId;
      }

      id = R.id.option_beta_features;
      WCSettingsOptionValueView optionBetaFeatures = ViewBindings.findChildViewById(rootView, id);
      if (optionBetaFeatures == null) {
        break missingId;
      }

      id = R.id.option_card_reader_payments;
      WCSettingsOptionValueView optionCardReaderPayments = ViewBindings.findChildViewById(rootView, id);
      if (optionCardReaderPayments == null) {
        break missingId;
      }

      id = R.id.option_help_and_support;
      WCSettingsOptionValueView optionHelpAndSupport = ViewBindings.findChildViewById(rootView, id);
      if (optionHelpAndSupport == null) {
        break missingId;
      }

      id = R.id.option_image_optimization;
      WCSettingsToggleOptionView optionImageOptimization = ViewBindings.findChildViewById(rootView, id);
      if (optionImageOptimization == null) {
        break missingId;
      }

      id = R.id.option_install_jetpack;
      WCSettingsOptionValueView optionInstallJetpack = ViewBindings.findChildViewById(rootView, id);
      if (optionInstallJetpack == null) {
        break missingId;
      }

      id = R.id.option_licenses;
      WCSettingsOptionValueView optionLicenses = ViewBindings.findChildViewById(rootView, id);
      if (optionLicenses == null) {
        break missingId;
      }

      id = R.id.option_notifications;
      WCSettingsOptionValueView optionNotifications = ViewBindings.findChildViewById(rootView, id);
      if (optionNotifications == null) {
        break missingId;
      }

      id = R.id.option_notifs_orders;
      WCSettingsToggleOptionView optionNotifsOrders = ViewBindings.findChildViewById(rootView, id);
      if (optionNotifsOrders == null) {
        break missingId;
      }

      id = R.id.option_notifs_reviews;
      WCSettingsToggleOptionView optionNotifsReviews = ViewBindings.findChildViewById(rootView, id);
      if (optionNotifsReviews == null) {
        break missingId;
      }

      id = R.id.option_notifs_tone;
      WCSettingsToggleOptionView optionNotifsTone = ViewBindings.findChildViewById(rootView, id);
      if (optionNotifsTone == null) {
        break missingId;
      }

      id = R.id.option_privacy;
      WCSettingsOptionValueView optionPrivacy = ViewBindings.findChildViewById(rootView, id);
      if (optionPrivacy == null) {
        break missingId;
      }

      id = R.id.option_send_feedback;
      WCSettingsOptionValueView optionSendFeedback = ViewBindings.findChildViewById(rootView, id);
      if (optionSendFeedback == null) {
        break missingId;
      }

      id = R.id.option_theme;
      WCSettingsOptionValueView optionTheme = ViewBindings.findChildViewById(rootView, id);
      if (optionTheme == null) {
        break missingId;
      }

      id = R.id.option_whats_new;
      WCSettingsOptionValueView optionWhatsNew = ViewBindings.findChildViewById(rootView, id);
      if (optionWhatsNew == null) {
        break missingId;
      }

      id = R.id.settingsHiring;
      MaterialTextView settingsHiring = ViewBindings.findChildViewById(rootView, id);
      if (settingsHiring == null) {
        break missingId;
      }

      id = R.id.store_settings_container;
      LinearLayout storeSettingsContainer = ViewBindings.findChildViewById(rootView, id);
      if (storeSettingsContainer == null) {
        break missingId;
      }

      return new FragmentSettingsMainBinding((ScrollView) rootView, btnOptionLogout,
          containerNotifsNew, containerNotifsOld, imageHeart, optionAbout, optionBetaFeatures,
          optionCardReaderPayments, optionHelpAndSupport, optionImageOptimization,
          optionInstallJetpack, optionLicenses, optionNotifications, optionNotifsOrders,
          optionNotifsReviews, optionNotifsTone, optionPrivacy, optionSendFeedback, optionTheme,
          optionWhatsNew, settingsHiring, storeSettingsContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
