// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.ui.offlinebasemap;

import com.google.android.gnd.repository.OfflineAreaRepository;
import com.google.android.gnd.ui.common.Navigator;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OfflineAreasViewModel_Factory implements Factory<OfflineAreasViewModel> {
  private final Provider<Navigator> navigatorProvider;

  private final Provider<OfflineAreaRepository> offlineAreaRepositoryProvider;

  public OfflineAreasViewModel_Factory(Provider<Navigator> navigatorProvider,
      Provider<OfflineAreaRepository> offlineAreaRepositoryProvider) {
    this.navigatorProvider = navigatorProvider;
    this.offlineAreaRepositoryProvider = offlineAreaRepositoryProvider;
  }

  @Override
  public OfflineAreasViewModel get() {
    return newInstance(navigatorProvider.get(), offlineAreaRepositoryProvider.get());
  }

  public static OfflineAreasViewModel_Factory create(Provider<Navigator> navigatorProvider,
      Provider<OfflineAreaRepository> offlineAreaRepositoryProvider) {
    return new OfflineAreasViewModel_Factory(navigatorProvider, offlineAreaRepositoryProvider);
  }

  public static OfflineAreasViewModel newInstance(Navigator navigator,
      OfflineAreaRepository offlineAreaRepository) {
    return new OfflineAreasViewModel(navigator, offlineAreaRepository);
  }
}
