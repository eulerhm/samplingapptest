// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class DomainPurchaseCardBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialTextView purchaseDomainCaption;

  @NonNull
  public final MaterialCardView purchaseDomainCard;

  @NonNull
  public final ImageView purchaseDomainImage;

  @NonNull
  public final MaterialTextView purchaseDomainTitle;

  @NonNull
  public final MaterialButton searchDomainsButton;

  private DomainPurchaseCardBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialTextView purchaseDomainCaption, @NonNull MaterialCardView purchaseDomainCard,
      @NonNull ImageView purchaseDomainImage, @NonNull MaterialTextView purchaseDomainTitle,
      @NonNull MaterialButton searchDomainsButton) {
    this.rootView = rootView;
    this.purchaseDomainCaption = purchaseDomainCaption;
    this.purchaseDomainCard = purchaseDomainCard;
    this.purchaseDomainImage = purchaseDomainImage;
    this.purchaseDomainTitle = purchaseDomainTitle;
    this.searchDomainsButton = searchDomainsButton;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DomainPurchaseCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DomainPurchaseCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.domain_purchase_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DomainPurchaseCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.purchase_domain_caption;
      MaterialTextView purchaseDomainCaption = ViewBindings.findChildViewById(rootView, id);
      if (purchaseDomainCaption == null) {
        break missingId;
      }

      MaterialCardView purchaseDomainCard = (MaterialCardView) rootView;

      id = R.id.purchase_domain_image;
      ImageView purchaseDomainImage = ViewBindings.findChildViewById(rootView, id);
      if (purchaseDomainImage == null) {
        break missingId;
      }

      id = R.id.purchase_domain_title;
      MaterialTextView purchaseDomainTitle = ViewBindings.findChildViewById(rootView, id);
      if (purchaseDomainTitle == null) {
        break missingId;
      }

      id = R.id.search_domains_button;
      MaterialButton searchDomainsButton = ViewBindings.findChildViewById(rootView, id);
      if (searchDomainsButton == null) {
        break missingId;
      }

      return new DomainPurchaseCardBinding((MaterialCardView) rootView, purchaseDomainCaption,
          purchaseDomainCard, purchaseDomainImage, purchaseDomainTitle, searchDomainsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
