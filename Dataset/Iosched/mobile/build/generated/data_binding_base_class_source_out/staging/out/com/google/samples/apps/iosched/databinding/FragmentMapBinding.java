// Generated by data binding compiler. Do not edit!
package com.google.samples.apps.iosched.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.gms.maps.MapView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.samples.apps.iosched.R;
import com.google.samples.apps.iosched.ui.map.MapViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentMapBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout bottomSheet;

  @NonNull
  public final View clickable;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final NestedScrollView descriptionScrollview;

  @NonNull
  public final ImageView expandIcon;

  @NonNull
  public final Guideline guidePeekHeight;

  @NonNull
  public final MapView map;

  @NonNull
  public final ConstraintLayout mapContainer;

  @NonNull
  public final FloatingActionButton mapModeFab;

  @NonNull
  public final TextView markerDescription;

  @NonNull
  public final ImageView markerIcon;

  @NonNull
  public final TextView markerSubtitle;

  @NonNull
  public final TextView markerTitle;

  @NonNull
  public final View sheetHeaderShadow;

  @NonNull
  public final View statusBar;

  @NonNull
  public final Toolbar toolbar;

  @Bindable
  protected MapViewModel mViewModel;

  protected FragmentMapBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout bottomSheet, View clickable, CoordinatorLayout coordinatorLayout,
      NestedScrollView descriptionScrollview, ImageView expandIcon, Guideline guidePeekHeight,
      MapView map, ConstraintLayout mapContainer, FloatingActionButton mapModeFab,
      TextView markerDescription, ImageView markerIcon, TextView markerSubtitle,
      TextView markerTitle, View sheetHeaderShadow, View statusBar, Toolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.bottomSheet = bottomSheet;
    this.clickable = clickable;
    this.coordinatorLayout = coordinatorLayout;
    this.descriptionScrollview = descriptionScrollview;
    this.expandIcon = expandIcon;
    this.guidePeekHeight = guidePeekHeight;
    this.map = map;
    this.mapContainer = mapContainer;
    this.mapModeFab = mapModeFab;
    this.markerDescription = markerDescription;
    this.markerIcon = markerIcon;
    this.markerSubtitle = markerSubtitle;
    this.markerTitle = markerTitle;
    this.sheetHeaderShadow = sheetHeaderShadow;
    this.statusBar = statusBar;
    this.toolbar = toolbar;
  }

  public abstract void setViewModel(@Nullable MapViewModel viewModel);

  @Nullable
  public MapViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_map, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentMapBinding>inflateInternal(inflater, R.layout.fragment_map, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_map, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentMapBinding>inflateInternal(inflater, R.layout.fragment_map, null, false, component);
  }

  public static FragmentMapBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentMapBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentMapBinding)bind(component, view, R.layout.fragment_map);
  }
}
