// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.ui.products.FeatureWIPNoticeCard;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOrderedAddonBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final MaterialTextView addonsEditNotice;

  @NonNull
  public final RecyclerView addonsList;

  @NonNull
  public final FeatureWIPNoticeCard addonsWipCard;

  @NonNull
  public final LinearLayout contentContainer;

  @NonNull
  public final LinearLayout mainView;

  private FragmentOrderedAddonBinding(@NonNull NestedScrollView rootView,
      @NonNull MaterialTextView addonsEditNotice, @NonNull RecyclerView addonsList,
      @NonNull FeatureWIPNoticeCard addonsWipCard, @NonNull LinearLayout contentContainer,
      @NonNull LinearLayout mainView) {
    this.rootView = rootView;
    this.addonsEditNotice = addonsEditNotice;
    this.addonsList = addonsList;
    this.addonsWipCard = addonsWipCard;
    this.contentContainer = contentContainer;
    this.mainView = mainView;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOrderedAddonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOrderedAddonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_ordered_addon, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOrderedAddonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addons_edit_notice;
      MaterialTextView addonsEditNotice = ViewBindings.findChildViewById(rootView, id);
      if (addonsEditNotice == null) {
        break missingId;
      }

      id = R.id.addons_list;
      RecyclerView addonsList = ViewBindings.findChildViewById(rootView, id);
      if (addonsList == null) {
        break missingId;
      }

      id = R.id.addons_wip_card;
      FeatureWIPNoticeCard addonsWipCard = ViewBindings.findChildViewById(rootView, id);
      if (addonsWipCard == null) {
        break missingId;
      }

      id = R.id.content_container;
      LinearLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.main_view;
      LinearLayout mainView = ViewBindings.findChildViewById(rootView, id);
      if (mainView == null) {
        break missingId;
      }

      return new FragmentOrderedAddonBinding((NestedScrollView) rootView, addonsEditNotice,
          addonsList, addonsWipCard, contentContainer, mainView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
