// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardReaderConnectDialogBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final MaterialTextView headerLabel;

  @NonNull
  public final MaterialTextView hintLabel;

  @NonNull
  public final ImageView illustration;

  @NonNull
  public final RecyclerView multipleCardReadersFoundRv;

  @NonNull
  public final MaterialButton primaryActionBtn;

  @NonNull
  public final MaterialButton secondaryActionBtn;

  private CardReaderConnectDialogBinding(@NonNull FrameLayout rootView,
      @NonNull MaterialTextView headerLabel, @NonNull MaterialTextView hintLabel,
      @NonNull ImageView illustration, @NonNull RecyclerView multipleCardReadersFoundRv,
      @NonNull MaterialButton primaryActionBtn, @NonNull MaterialButton secondaryActionBtn) {
    this.rootView = rootView;
    this.headerLabel = headerLabel;
    this.hintLabel = hintLabel;
    this.illustration = illustration;
    this.multipleCardReadersFoundRv = multipleCardReadersFoundRv;
    this.primaryActionBtn = primaryActionBtn;
    this.secondaryActionBtn = secondaryActionBtn;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CardReaderConnectDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardReaderConnectDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_reader_connect_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardReaderConnectDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.header_label;
      MaterialTextView headerLabel = ViewBindings.findChildViewById(rootView, id);
      if (headerLabel == null) {
        break missingId;
      }

      id = R.id.hint_label;
      MaterialTextView hintLabel = ViewBindings.findChildViewById(rootView, id);
      if (hintLabel == null) {
        break missingId;
      }

      id = R.id.illustration;
      ImageView illustration = ViewBindings.findChildViewById(rootView, id);
      if (illustration == null) {
        break missingId;
      }

      id = R.id.multiple_card_readers_found_rv;
      RecyclerView multipleCardReadersFoundRv = ViewBindings.findChildViewById(rootView, id);
      if (multipleCardReadersFoundRv == null) {
        break missingId;
      }

      id = R.id.primary_action_btn;
      MaterialButton primaryActionBtn = ViewBindings.findChildViewById(rootView, id);
      if (primaryActionBtn == null) {
        break missingId;
      }

      id = R.id.secondary_action_btn;
      MaterialButton secondaryActionBtn = ViewBindings.findChildViewById(rootView, id);
      if (secondaryActionBtn == null) {
        break missingId;
      }

      return new CardReaderConnectDialogBinding((FrameLayout) rootView, headerLabel, hintLabel,
          illustration, multipleCardReadersFoundRv, primaryActionBtn, secondaryActionBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
