// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.reader.views.ReaderPostDetailHeaderView;
import org.wordpress.android.ui.reader.views.ReaderSimplePostContainerView;
import org.wordpress.android.util.widgets.CustomSwipeRefreshLayout;
import org.wordpress.android.widgets.WPScrollView;
import org.wordpress.android.widgets.WPTextView;

public final class ReaderFragmentPostDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppbarWithCollapsingToolbarLayoutBinding appbarWithCollapsingToolbarLayout;

  @NonNull
  public final ReaderPostCommentsSnippetBinding commentsSnippet;

  @NonNull
  public final LinearLayout containerRelatedPosts;

  @NonNull
  public final View footerSpacer;

  @NonNull
  public final ReaderPostDetailHeaderView headerView;

  @NonNull
  public final FrameLayout layoutCustomViewContainer;

  @NonNull
  public final RelativeLayout layoutPostDetailContainer;

  @NonNull
  public final ReaderIncludePostDetailFooterBinding layoutPostDetailFooter;

  @NonNull
  public final WPTextView nuxSignInButton;

  @NonNull
  public final ProgressBar progressLoading;

  @NonNull
  public final ReaderSimplePostContainerView relatedPostsViewGlobal;

  @NonNull
  public final ReaderSimplePostContainerView relatedPostsViewLocal;

  @NonNull
  public final WPScrollView scrollViewReader;

  @NonNull
  public final CustomSwipeRefreshLayout swipeToRefresh;

  @NonNull
  public final WPTextView textError;

  private ReaderFragmentPostDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppbarWithCollapsingToolbarLayoutBinding appbarWithCollapsingToolbarLayout,
      @NonNull ReaderPostCommentsSnippetBinding commentsSnippet,
      @NonNull LinearLayout containerRelatedPosts, @NonNull View footerSpacer,
      @NonNull ReaderPostDetailHeaderView headerView,
      @NonNull FrameLayout layoutCustomViewContainer,
      @NonNull RelativeLayout layoutPostDetailContainer,
      @NonNull ReaderIncludePostDetailFooterBinding layoutPostDetailFooter,
      @NonNull WPTextView nuxSignInButton, @NonNull ProgressBar progressLoading,
      @NonNull ReaderSimplePostContainerView relatedPostsViewGlobal,
      @NonNull ReaderSimplePostContainerView relatedPostsViewLocal,
      @NonNull WPScrollView scrollViewReader, @NonNull CustomSwipeRefreshLayout swipeToRefresh,
      @NonNull WPTextView textError) {
    this.rootView = rootView;
    this.appbarWithCollapsingToolbarLayout = appbarWithCollapsingToolbarLayout;
    this.commentsSnippet = commentsSnippet;
    this.containerRelatedPosts = containerRelatedPosts;
    this.footerSpacer = footerSpacer;
    this.headerView = headerView;
    this.layoutCustomViewContainer = layoutCustomViewContainer;
    this.layoutPostDetailContainer = layoutPostDetailContainer;
    this.layoutPostDetailFooter = layoutPostDetailFooter;
    this.nuxSignInButton = nuxSignInButton;
    this.progressLoading = progressLoading;
    this.relatedPostsViewGlobal = relatedPostsViewGlobal;
    this.relatedPostsViewLocal = relatedPostsViewLocal;
    this.scrollViewReader = scrollViewReader;
    this.swipeToRefresh = swipeToRefresh;
    this.textError = textError;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReaderFragmentPostDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReaderFragmentPostDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reader_fragment_post_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReaderFragmentPostDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar_with_collapsing_toolbar_layout;
      View appbarWithCollapsingToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appbarWithCollapsingToolbarLayout == null) {
        break missingId;
      }
      AppbarWithCollapsingToolbarLayoutBinding binding_appbarWithCollapsingToolbarLayout = AppbarWithCollapsingToolbarLayoutBinding.bind(appbarWithCollapsingToolbarLayout);

      id = R.id.comments_snippet;
      View commentsSnippet = ViewBindings.findChildViewById(rootView, id);
      if (commentsSnippet == null) {
        break missingId;
      }
      ReaderPostCommentsSnippetBinding binding_commentsSnippet = ReaderPostCommentsSnippetBinding.bind(commentsSnippet);

      id = R.id.container_related_posts;
      LinearLayout containerRelatedPosts = ViewBindings.findChildViewById(rootView, id);
      if (containerRelatedPosts == null) {
        break missingId;
      }

      id = R.id.footer_spacer;
      View footerSpacer = ViewBindings.findChildViewById(rootView, id);
      if (footerSpacer == null) {
        break missingId;
      }

      id = R.id.header_view;
      ReaderPostDetailHeaderView headerView = ViewBindings.findChildViewById(rootView, id);
      if (headerView == null) {
        break missingId;
      }

      id = R.id.layout_custom_view_container;
      FrameLayout layoutCustomViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (layoutCustomViewContainer == null) {
        break missingId;
      }

      id = R.id.layout_post_detail_container;
      RelativeLayout layoutPostDetailContainer = ViewBindings.findChildViewById(rootView, id);
      if (layoutPostDetailContainer == null) {
        break missingId;
      }

      id = R.id.layout_post_detail_footer;
      View layoutPostDetailFooter = ViewBindings.findChildViewById(rootView, id);
      if (layoutPostDetailFooter == null) {
        break missingId;
      }
      ReaderIncludePostDetailFooterBinding binding_layoutPostDetailFooter = ReaderIncludePostDetailFooterBinding.bind(layoutPostDetailFooter);

      id = R.id.nux_sign_in_button;
      WPTextView nuxSignInButton = ViewBindings.findChildViewById(rootView, id);
      if (nuxSignInButton == null) {
        break missingId;
      }

      id = R.id.progress_loading;
      ProgressBar progressLoading = ViewBindings.findChildViewById(rootView, id);
      if (progressLoading == null) {
        break missingId;
      }

      id = R.id.related_posts_view_global;
      ReaderSimplePostContainerView relatedPostsViewGlobal = ViewBindings.findChildViewById(rootView, id);
      if (relatedPostsViewGlobal == null) {
        break missingId;
      }

      id = R.id.related_posts_view_local;
      ReaderSimplePostContainerView relatedPostsViewLocal = ViewBindings.findChildViewById(rootView, id);
      if (relatedPostsViewLocal == null) {
        break missingId;
      }

      id = R.id.scroll_view_reader;
      WPScrollView scrollViewReader = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewReader == null) {
        break missingId;
      }

      id = R.id.swipe_to_refresh;
      CustomSwipeRefreshLayout swipeToRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeToRefresh == null) {
        break missingId;
      }

      id = R.id.text_error;
      WPTextView textError = ViewBindings.findChildViewById(rootView, id);
      if (textError == null) {
        break missingId;
      }

      return new ReaderFragmentPostDetailBinding((CoordinatorLayout) rootView,
          binding_appbarWithCollapsingToolbarLayout, binding_commentsSnippet, containerRelatedPosts,
          footerSpacer, headerView, layoutCustomViewContainer, layoutPostDetailContainer,
          binding_layoutPostDetailFooter, nuxSignInButton, progressLoading, relatedPostsViewGlobal,
          relatedPostsViewLocal, scrollViewReader, swipeToRefresh, textError);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
