// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class FeatureAnnouncementDialogFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton closeFeatureAnnouncementButton;

  @NonNull
  public final MaterialCardView closeFeatureAnnouncementButtonContainer;

  @NonNull
  public final MaterialTextView featureAnnouncementDialogLabel;

  @NonNull
  public final MaterialTextView featureAnnouncementVersionLabel;

  @NonNull
  public final RecyclerView featureList;

  @NonNull
  public final FrameLayout featureListProgressContainer;

  private FeatureAnnouncementDialogFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton closeFeatureAnnouncementButton,
      @NonNull MaterialCardView closeFeatureAnnouncementButtonContainer,
      @NonNull MaterialTextView featureAnnouncementDialogLabel,
      @NonNull MaterialTextView featureAnnouncementVersionLabel, @NonNull RecyclerView featureList,
      @NonNull FrameLayout featureListProgressContainer) {
    this.rootView = rootView;
    this.closeFeatureAnnouncementButton = closeFeatureAnnouncementButton;
    this.closeFeatureAnnouncementButtonContainer = closeFeatureAnnouncementButtonContainer;
    this.featureAnnouncementDialogLabel = featureAnnouncementDialogLabel;
    this.featureAnnouncementVersionLabel = featureAnnouncementVersionLabel;
    this.featureList = featureList;
    this.featureListProgressContainer = featureListProgressContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FeatureAnnouncementDialogFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FeatureAnnouncementDialogFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.feature_announcement_dialog_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FeatureAnnouncementDialogFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close_feature_announcement_button;
      MaterialButton closeFeatureAnnouncementButton = ViewBindings.findChildViewById(rootView, id);
      if (closeFeatureAnnouncementButton == null) {
        break missingId;
      }

      id = R.id.close_feature_announcement_button_container;
      MaterialCardView closeFeatureAnnouncementButtonContainer = ViewBindings.findChildViewById(rootView, id);
      if (closeFeatureAnnouncementButtonContainer == null) {
        break missingId;
      }

      id = R.id.feature_announcement_dialog_label;
      MaterialTextView featureAnnouncementDialogLabel = ViewBindings.findChildViewById(rootView, id);
      if (featureAnnouncementDialogLabel == null) {
        break missingId;
      }

      id = R.id.feature_announcement_version_label;
      MaterialTextView featureAnnouncementVersionLabel = ViewBindings.findChildViewById(rootView, id);
      if (featureAnnouncementVersionLabel == null) {
        break missingId;
      }

      id = R.id.feature_list;
      RecyclerView featureList = ViewBindings.findChildViewById(rootView, id);
      if (featureList == null) {
        break missingId;
      }

      id = R.id.feature_list_progress_container;
      FrameLayout featureListProgressContainer = ViewBindings.findChildViewById(rootView, id);
      if (featureListProgressContainer == null) {
        break missingId;
      }

      return new FeatureAnnouncementDialogFragmentBinding((ConstraintLayout) rootView,
          closeFeatureAnnouncementButton, closeFeatureAnnouncementButtonContainer,
          featureAnnouncementDialogLabel, featureAnnouncementVersionLabel, featureList,
          featureListProgressContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
