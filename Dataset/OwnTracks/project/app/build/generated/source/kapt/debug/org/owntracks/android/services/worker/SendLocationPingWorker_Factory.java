// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.services.worker;

import android.content.Context;
import androidx.work.WorkerParameters;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.owntracks.android.services.LocationProcessor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SendLocationPingWorker_Factory implements Factory<SendLocationPingWorker> {
  private final Provider<Context> contextProvider;

  private final Provider<WorkerParameters> workerParamsProvider;

  private final Provider<LocationProcessor> locationProcessorProvider;

  public SendLocationPingWorker_Factory(Provider<Context> contextProvider,
      Provider<WorkerParameters> workerParamsProvider,
      Provider<LocationProcessor> locationProcessorProvider) {
    this.contextProvider = contextProvider;
    this.workerParamsProvider = workerParamsProvider;
    this.locationProcessorProvider = locationProcessorProvider;
  }

  @Override
  public SendLocationPingWorker get() {
    return newInstance(contextProvider.get(), workerParamsProvider.get(), locationProcessorProvider.get());
  }

  public static SendLocationPingWorker_Factory create(Provider<Context> contextProvider,
      Provider<WorkerParameters> workerParamsProvider,
      Provider<LocationProcessor> locationProcessorProvider) {
    return new SendLocationPingWorker_Factory(contextProvider, workerParamsProvider, locationProcessorProvider);
  }

  public static SendLocationPingWorker newInstance(Context context, WorkerParameters workerParams,
      LocationProcessor locationProcessor) {
    return new SendLocationPingWorker(context, workerParams, locationProcessor);
  }
}
