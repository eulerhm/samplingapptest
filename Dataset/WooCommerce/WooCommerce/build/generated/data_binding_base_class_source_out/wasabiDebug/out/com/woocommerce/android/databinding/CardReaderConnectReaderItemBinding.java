// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardReaderConnectReaderItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout readersFoundContainer;

  @NonNull
  public final TextView readersFoundReaderConnectButton;

  @NonNull
  public final TextView readersFoundReaderId;

  @NonNull
  public final TextView readersFoundReaderType;

  private CardReaderConnectReaderItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout readersFoundContainer,
      @NonNull TextView readersFoundReaderConnectButton, @NonNull TextView readersFoundReaderId,
      @NonNull TextView readersFoundReaderType) {
    this.rootView = rootView;
    this.readersFoundContainer = readersFoundContainer;
    this.readersFoundReaderConnectButton = readersFoundReaderConnectButton;
    this.readersFoundReaderId = readersFoundReaderId;
    this.readersFoundReaderType = readersFoundReaderType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CardReaderConnectReaderItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardReaderConnectReaderItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_reader_connect_reader_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardReaderConnectReaderItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout readersFoundContainer = (ConstraintLayout) rootView;

      id = R.id.readers_found_reader_connect_button;
      TextView readersFoundReaderConnectButton = ViewBindings.findChildViewById(rootView, id);
      if (readersFoundReaderConnectButton == null) {
        break missingId;
      }

      id = R.id.readers_found_reader_id;
      TextView readersFoundReaderId = ViewBindings.findChildViewById(rootView, id);
      if (readersFoundReaderId == null) {
        break missingId;
      }

      id = R.id.readers_found_reader_type;
      TextView readersFoundReaderType = ViewBindings.findChildViewById(rootView, id);
      if (readersFoundReaderType == null) {
        break missingId;
      }

      return new CardReaderConnectReaderItemBinding((ConstraintLayout) rootView,
          readersFoundContainer, readersFoundReaderConnectButton, readersFoundReaderId,
          readersFoundReaderType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
