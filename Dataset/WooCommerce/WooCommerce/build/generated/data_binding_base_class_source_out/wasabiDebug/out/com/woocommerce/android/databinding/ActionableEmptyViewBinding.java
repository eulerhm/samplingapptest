// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActionableEmptyViewBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton emptyViewButton;

  @NonNull
  public final ImageView emptyViewImage;

  @NonNull
  public final MaterialTextView emptyViewText;

  private ActionableEmptyViewBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton emptyViewButton, @NonNull ImageView emptyViewImage,
      @NonNull MaterialTextView emptyViewText) {
    this.rootView = rootView;
    this.emptyViewButton = emptyViewButton;
    this.emptyViewImage = emptyViewImage;
    this.emptyViewText = emptyViewText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActionableEmptyViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActionableEmptyViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.actionable_empty_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActionableEmptyViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.empty_view_button;
      MaterialButton emptyViewButton = ViewBindings.findChildViewById(rootView, id);
      if (emptyViewButton == null) {
        break missingId;
      }

      id = R.id.empty_view_image;
      ImageView emptyViewImage = ViewBindings.findChildViewById(rootView, id);
      if (emptyViewImage == null) {
        break missingId;
      }

      id = R.id.empty_view_text;
      MaterialTextView emptyViewText = ViewBindings.findChildViewById(rootView, id);
      if (emptyViewText == null) {
        break missingId;
      }

      return new ActionableEmptyViewBinding((ScrollView) rootView, emptyViewButton, emptyViewImage,
          emptyViewText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
