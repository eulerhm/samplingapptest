// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.WPTextView;

public final class CommentListItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView avatar;

  @NonNull
  public final WPTextView comment;

  @NonNull
  public final FrameLayout frameAvatar;

  @NonNull
  public final ImageView imageCheckmark;

  @NonNull
  public final RelativeLayout layoutContainer;

  @NonNull
  public final View statusIndicator;

  @NonNull
  public final RelativeLayout statusIndicatorContainer;

  @NonNull
  public final WPTextView title;

  private CommentListItemBinding(@NonNull RelativeLayout rootView, @NonNull ImageView avatar,
      @NonNull WPTextView comment, @NonNull FrameLayout frameAvatar,
      @NonNull ImageView imageCheckmark, @NonNull RelativeLayout layoutContainer,
      @NonNull View statusIndicator, @NonNull RelativeLayout statusIndicatorContainer,
      @NonNull WPTextView title) {
    this.rootView = rootView;
    this.avatar = avatar;
    this.comment = comment;
    this.frameAvatar = frameAvatar;
    this.imageCheckmark = imageCheckmark;
    this.layoutContainer = layoutContainer;
    this.statusIndicator = statusIndicator;
    this.statusIndicatorContainer = statusIndicatorContainer;
    this.title = title;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CommentListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CommentListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.comment_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CommentListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatar;
      ImageView avatar = ViewBindings.findChildViewById(rootView, id);
      if (avatar == null) {
        break missingId;
      }

      id = R.id.comment;
      WPTextView comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.frame_avatar;
      FrameLayout frameAvatar = ViewBindings.findChildViewById(rootView, id);
      if (frameAvatar == null) {
        break missingId;
      }

      id = R.id.image_checkmark;
      ImageView imageCheckmark = ViewBindings.findChildViewById(rootView, id);
      if (imageCheckmark == null) {
        break missingId;
      }

      id = R.id.layout_container;
      RelativeLayout layoutContainer = ViewBindings.findChildViewById(rootView, id);
      if (layoutContainer == null) {
        break missingId;
      }

      id = R.id.status_indicator;
      View statusIndicator = ViewBindings.findChildViewById(rootView, id);
      if (statusIndicator == null) {
        break missingId;
      }

      id = R.id.status_indicator_container;
      RelativeLayout statusIndicatorContainer = ViewBindings.findChildViewById(rootView, id);
      if (statusIndicatorContainer == null) {
        break missingId;
      }

      id = R.id.title;
      WPTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new CommentListItemBinding((RelativeLayout) rootView, avatar, comment, frameAvatar,
          imageCheckmark, layoutContainer, statusIndicator, statusIndicatorContainer, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
