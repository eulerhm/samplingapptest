// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class BloggingPromptCardCompactBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialTextView answerButton;

  @NonNull
  public final MaterialTextView answeredButton;

  @NonNull
  public final LinearLayout attributionContainer;

  @NonNull
  public final MaterialTextView cardTitle;

  @NonNull
  public final LinearLayout cardTitleContainer;

  @NonNull
  public final MaterialTextView promptContent;

  @NonNull
  public final LinearLayout promptHelpButtonContainer;

  @NonNull
  public final ImageView titleIcon;

  private BloggingPromptCardCompactBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialTextView answerButton, @NonNull MaterialTextView answeredButton,
      @NonNull LinearLayout attributionContainer, @NonNull MaterialTextView cardTitle,
      @NonNull LinearLayout cardTitleContainer, @NonNull MaterialTextView promptContent,
      @NonNull LinearLayout promptHelpButtonContainer, @NonNull ImageView titleIcon) {
    this.rootView = rootView;
    this.answerButton = answerButton;
    this.answeredButton = answeredButton;
    this.attributionContainer = attributionContainer;
    this.cardTitle = cardTitle;
    this.cardTitleContainer = cardTitleContainer;
    this.promptContent = promptContent;
    this.promptHelpButtonContainer = promptHelpButtonContainer;
    this.titleIcon = titleIcon;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BloggingPromptCardCompactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BloggingPromptCardCompactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.blogging_prompt_card_compact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BloggingPromptCardCompactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answer_button;
      MaterialTextView answerButton = ViewBindings.findChildViewById(rootView, id);
      if (answerButton == null) {
        break missingId;
      }

      id = R.id.answered_button;
      MaterialTextView answeredButton = ViewBindings.findChildViewById(rootView, id);
      if (answeredButton == null) {
        break missingId;
      }

      id = R.id.attribution_container;
      LinearLayout attributionContainer = ViewBindings.findChildViewById(rootView, id);
      if (attributionContainer == null) {
        break missingId;
      }

      id = R.id.card_title;
      MaterialTextView cardTitle = ViewBindings.findChildViewById(rootView, id);
      if (cardTitle == null) {
        break missingId;
      }

      id = R.id.card_title_container;
      LinearLayout cardTitleContainer = ViewBindings.findChildViewById(rootView, id);
      if (cardTitleContainer == null) {
        break missingId;
      }

      id = R.id.prompt_content;
      MaterialTextView promptContent = ViewBindings.findChildViewById(rootView, id);
      if (promptContent == null) {
        break missingId;
      }

      id = R.id.prompt_help_button_container;
      LinearLayout promptHelpButtonContainer = ViewBindings.findChildViewById(rootView, id);
      if (promptHelpButtonContainer == null) {
        break missingId;
      }

      id = R.id.title_icon;
      ImageView titleIcon = ViewBindings.findChildViewById(rootView, id);
      if (titleIcon == null) {
        break missingId;
      }

      return new BloggingPromptCardCompactBinding((LinearLayout) rootView, answerButton,
          answeredButton, attributionContainer, cardTitle, cardTitleContainer, promptContent,
          promptHelpButtonContainer, titleIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
