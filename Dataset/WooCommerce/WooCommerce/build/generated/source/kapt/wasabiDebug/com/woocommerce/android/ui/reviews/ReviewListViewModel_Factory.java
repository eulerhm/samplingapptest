// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.reviews;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.push.UnseenReviewsCountHandler;
import com.woocommerce.android.tools.NetworkStatus;
import com.woocommerce.android.ui.reviews.domain.MarkAllReviewsAsSeen;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.Dispatcher;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ReviewListViewModel_Factory implements Factory<ReviewListViewModel> {
  private final Provider<SavedStateHandle> savedStateProvider;

  private final Provider<NetworkStatus> networkStatusProvider;

  private final Provider<Dispatcher> dispatcherProvider;

  private final Provider<ReviewListRepository> reviewRepositoryProvider;

  private final Provider<MarkAllReviewsAsSeen> markAllReviewsAsSeenProvider;

  private final Provider<UnseenReviewsCountHandler> unseenReviewsCountHandlerProvider;

  private final Provider<ReviewModerationHandler> reviewModerationHandlerProvider;

  public ReviewListViewModel_Factory(Provider<SavedStateHandle> savedStateProvider,
      Provider<NetworkStatus> networkStatusProvider, Provider<Dispatcher> dispatcherProvider,
      Provider<ReviewListRepository> reviewRepositoryProvider,
      Provider<MarkAllReviewsAsSeen> markAllReviewsAsSeenProvider,
      Provider<UnseenReviewsCountHandler> unseenReviewsCountHandlerProvider,
      Provider<ReviewModerationHandler> reviewModerationHandlerProvider) {
    this.savedStateProvider = savedStateProvider;
    this.networkStatusProvider = networkStatusProvider;
    this.dispatcherProvider = dispatcherProvider;
    this.reviewRepositoryProvider = reviewRepositoryProvider;
    this.markAllReviewsAsSeenProvider = markAllReviewsAsSeenProvider;
    this.unseenReviewsCountHandlerProvider = unseenReviewsCountHandlerProvider;
    this.reviewModerationHandlerProvider = reviewModerationHandlerProvider;
  }

  @Override
  public ReviewListViewModel get() {
    return newInstance(savedStateProvider.get(), networkStatusProvider.get(), dispatcherProvider.get(), reviewRepositoryProvider.get(), markAllReviewsAsSeenProvider.get(), unseenReviewsCountHandlerProvider.get(), reviewModerationHandlerProvider.get());
  }

  public static ReviewListViewModel_Factory create(Provider<SavedStateHandle> savedStateProvider,
      Provider<NetworkStatus> networkStatusProvider, Provider<Dispatcher> dispatcherProvider,
      Provider<ReviewListRepository> reviewRepositoryProvider,
      Provider<MarkAllReviewsAsSeen> markAllReviewsAsSeenProvider,
      Provider<UnseenReviewsCountHandler> unseenReviewsCountHandlerProvider,
      Provider<ReviewModerationHandler> reviewModerationHandlerProvider) {
    return new ReviewListViewModel_Factory(savedStateProvider, networkStatusProvider, dispatcherProvider, reviewRepositoryProvider, markAllReviewsAsSeenProvider, unseenReviewsCountHandlerProvider, reviewModerationHandlerProvider);
  }

  public static ReviewListViewModel newInstance(SavedStateHandle savedState,
      NetworkStatus networkStatus, Dispatcher dispatcher, ReviewListRepository reviewRepository,
      MarkAllReviewsAsSeen markAllReviewsAsSeen,
      UnseenReviewsCountHandler unseenReviewsCountHandler,
      ReviewModerationHandler reviewModerationHandler) {
    return new ReviewListViewModel(savedState, networkStatus, dispatcher, reviewRepository, markAllReviewsAsSeen, unseenReviewsCountHandler, reviewModerationHandler);
  }
}
