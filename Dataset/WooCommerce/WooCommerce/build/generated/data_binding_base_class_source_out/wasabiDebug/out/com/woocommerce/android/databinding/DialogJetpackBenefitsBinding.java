// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogJetpackBenefitsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageView analyticsIcon;

  @NonNull
  public final AppCompatTextView analyticsSubtitle;

  @NonNull
  public final AppCompatTextView analyticsTitle;

  @NonNull
  public final Guideline benefitsGuidelineEnd;

  @NonNull
  public final Guideline benefitsGuidelineStart;

  @NonNull
  public final MaterialButton dismissButton;

  @NonNull
  public final MaterialButton installJetpackButton;

  @NonNull
  public final AppCompatImageView pushNotificationsIcon;

  @NonNull
  public final AppCompatTextView pushNotificationsSubtitle;

  @NonNull
  public final AppCompatTextView pushNotificationsTitle;

  @NonNull
  public final AppCompatTextView subtitle;

  @NonNull
  public final AppCompatTextView title;

  @NonNull
  public final AppCompatImageView userProfilesIcon;

  @NonNull
  public final AppCompatTextView userProfilesSubtitle;

  @NonNull
  public final AppCompatTextView userProfilesTitle;

  private DialogJetpackBenefitsBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatImageView analyticsIcon, @NonNull AppCompatTextView analyticsSubtitle,
      @NonNull AppCompatTextView analyticsTitle, @NonNull Guideline benefitsGuidelineEnd,
      @NonNull Guideline benefitsGuidelineStart, @NonNull MaterialButton dismissButton,
      @NonNull MaterialButton installJetpackButton,
      @NonNull AppCompatImageView pushNotificationsIcon,
      @NonNull AppCompatTextView pushNotificationsSubtitle,
      @NonNull AppCompatTextView pushNotificationsTitle, @NonNull AppCompatTextView subtitle,
      @NonNull AppCompatTextView title, @NonNull AppCompatImageView userProfilesIcon,
      @NonNull AppCompatTextView userProfilesSubtitle,
      @NonNull AppCompatTextView userProfilesTitle) {
    this.rootView = rootView;
    this.analyticsIcon = analyticsIcon;
    this.analyticsSubtitle = analyticsSubtitle;
    this.analyticsTitle = analyticsTitle;
    this.benefitsGuidelineEnd = benefitsGuidelineEnd;
    this.benefitsGuidelineStart = benefitsGuidelineStart;
    this.dismissButton = dismissButton;
    this.installJetpackButton = installJetpackButton;
    this.pushNotificationsIcon = pushNotificationsIcon;
    this.pushNotificationsSubtitle = pushNotificationsSubtitle;
    this.pushNotificationsTitle = pushNotificationsTitle;
    this.subtitle = subtitle;
    this.title = title;
    this.userProfilesIcon = userProfilesIcon;
    this.userProfilesSubtitle = userProfilesSubtitle;
    this.userProfilesTitle = userProfilesTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogJetpackBenefitsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogJetpackBenefitsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_jetpack_benefits, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogJetpackBenefitsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.analytics_icon;
      AppCompatImageView analyticsIcon = ViewBindings.findChildViewById(rootView, id);
      if (analyticsIcon == null) {
        break missingId;
      }

      id = R.id.analytics_subtitle;
      AppCompatTextView analyticsSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (analyticsSubtitle == null) {
        break missingId;
      }

      id = R.id.analytics_title;
      AppCompatTextView analyticsTitle = ViewBindings.findChildViewById(rootView, id);
      if (analyticsTitle == null) {
        break missingId;
      }

      id = R.id.benefits_guideline_end;
      Guideline benefitsGuidelineEnd = ViewBindings.findChildViewById(rootView, id);
      if (benefitsGuidelineEnd == null) {
        break missingId;
      }

      id = R.id.benefits_guideline_start;
      Guideline benefitsGuidelineStart = ViewBindings.findChildViewById(rootView, id);
      if (benefitsGuidelineStart == null) {
        break missingId;
      }

      id = R.id.dismiss_button;
      MaterialButton dismissButton = ViewBindings.findChildViewById(rootView, id);
      if (dismissButton == null) {
        break missingId;
      }

      id = R.id.install_jetpack_button;
      MaterialButton installJetpackButton = ViewBindings.findChildViewById(rootView, id);
      if (installJetpackButton == null) {
        break missingId;
      }

      id = R.id.push_notifications_icon;
      AppCompatImageView pushNotificationsIcon = ViewBindings.findChildViewById(rootView, id);
      if (pushNotificationsIcon == null) {
        break missingId;
      }

      id = R.id.push_notifications_subtitle;
      AppCompatTextView pushNotificationsSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (pushNotificationsSubtitle == null) {
        break missingId;
      }

      id = R.id.push_notifications_title;
      AppCompatTextView pushNotificationsTitle = ViewBindings.findChildViewById(rootView, id);
      if (pushNotificationsTitle == null) {
        break missingId;
      }

      id = R.id.subtitle;
      AppCompatTextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.title;
      AppCompatTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.user_profiles_icon;
      AppCompatImageView userProfilesIcon = ViewBindings.findChildViewById(rootView, id);
      if (userProfilesIcon == null) {
        break missingId;
      }

      id = R.id.user_profiles_subtitle;
      AppCompatTextView userProfilesSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (userProfilesSubtitle == null) {
        break missingId;
      }

      id = R.id.user_profiles_title;
      AppCompatTextView userProfilesTitle = ViewBindings.findChildViewById(rootView, id);
      if (userProfilesTitle == null) {
        break missingId;
      }

      return new DialogJetpackBenefitsBinding((LinearLayout) rootView, analyticsIcon,
          analyticsSubtitle, analyticsTitle, benefitsGuidelineEnd, benefitsGuidelineStart,
          dismissButton, installJetpackButton, pushNotificationsIcon, pushNotificationsSubtitle,
          pushNotificationsTitle, subtitle, title, userProfilesIcon, userProfilesSubtitle,
          userProfilesTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
