// Generated by data binding compiler. Do not edit!
package nl.rijksoverheid.en.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Space;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.airbnb.lottie.LottieAnimationView;
import java.lang.Deprecated;
import java.lang.Object;
import nl.rijksoverheid.en.R;
import nl.rijksoverheid.en.status.StatusHeaderItem;

public abstract class ItemStatusHeaderBinding extends ViewDataBinding {
  @NonNull
  public final LottieAnimationView clouds;

  @NonNull
  public final Button disabledEnable;

  @NonNull
  public final LinearLayout exposureButtons;

  @NonNull
  public final Button exposureReset;

  @NonNull
  public final Button exposureWhatNext;

  @NonNull
  public final Space illustrationTop;

  @NonNull
  public final ImageView noExposureIllustration;

  @NonNull
  public final LottieAnimationView statusAnimatedImage;

  @NonNull
  public final TextView statusDescription;

  @NonNull
  public final TextView statusHeadline;

  @Bindable
  protected StatusHeaderItem.HeaderViewState mViewState;

  protected ItemStatusHeaderBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LottieAnimationView clouds, Button disabledEnable, LinearLayout exposureButtons,
      Button exposureReset, Button exposureWhatNext, Space illustrationTop,
      ImageView noExposureIllustration, LottieAnimationView statusAnimatedImage,
      TextView statusDescription, TextView statusHeadline) {
    super(_bindingComponent, _root, _localFieldCount);
    this.clouds = clouds;
    this.disabledEnable = disabledEnable;
    this.exposureButtons = exposureButtons;
    this.exposureReset = exposureReset;
    this.exposureWhatNext = exposureWhatNext;
    this.illustrationTop = illustrationTop;
    this.noExposureIllustration = noExposureIllustration;
    this.statusAnimatedImage = statusAnimatedImage;
    this.statusDescription = statusDescription;
    this.statusHeadline = statusHeadline;
  }

  public abstract void setViewState(@Nullable StatusHeaderItem.HeaderViewState viewState);

  @Nullable
  public StatusHeaderItem.HeaderViewState getViewState() {
    return mViewState;
  }

  @NonNull
  public static ItemStatusHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_status_header, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemStatusHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemStatusHeaderBinding>inflateInternal(inflater, R.layout.item_status_header, root, attachToRoot, component);
  }

  @NonNull
  public static ItemStatusHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_status_header, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemStatusHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemStatusHeaderBinding>inflateInternal(inflater, R.layout.item_status_header, null, false, component);
  }

  public static ItemStatusHeaderBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemStatusHeaderBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemStatusHeaderBinding)bind(component, view, R.layout.item_status_header);
  }
}
