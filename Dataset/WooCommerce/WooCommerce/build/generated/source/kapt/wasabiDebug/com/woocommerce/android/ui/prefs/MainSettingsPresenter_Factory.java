// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.prefs;

import com.woocommerce.android.tools.SelectedSite;
import com.woocommerce.android.ui.whatsnew.FeatureAnnouncementRepository;
import com.woocommerce.android.util.BuildConfigWrapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.AccountStore;
import org.wordpress.android.fluxc.store.WooCommerceStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainSettingsPresenter_Factory implements Factory<MainSettingsPresenter> {
  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<AccountStore> accountStoreProvider;

  private final Provider<WooCommerceStore> wooCommerceStoreProvider;

  private final Provider<FeatureAnnouncementRepository> featureAnnouncementRepositoryProvider;

  private final Provider<BuildConfigWrapper> buildConfigWrapperProvider;

  public MainSettingsPresenter_Factory(Provider<SelectedSite> selectedSiteProvider,
      Provider<AccountStore> accountStoreProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider,
      Provider<FeatureAnnouncementRepository> featureAnnouncementRepositoryProvider,
      Provider<BuildConfigWrapper> buildConfigWrapperProvider) {
    this.selectedSiteProvider = selectedSiteProvider;
    this.accountStoreProvider = accountStoreProvider;
    this.wooCommerceStoreProvider = wooCommerceStoreProvider;
    this.featureAnnouncementRepositoryProvider = featureAnnouncementRepositoryProvider;
    this.buildConfigWrapperProvider = buildConfigWrapperProvider;
  }

  @Override
  public MainSettingsPresenter get() {
    return newInstance(selectedSiteProvider.get(), accountStoreProvider.get(), wooCommerceStoreProvider.get(), featureAnnouncementRepositoryProvider.get(), buildConfigWrapperProvider.get());
  }

  public static MainSettingsPresenter_Factory create(Provider<SelectedSite> selectedSiteProvider,
      Provider<AccountStore> accountStoreProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider,
      Provider<FeatureAnnouncementRepository> featureAnnouncementRepositoryProvider,
      Provider<BuildConfigWrapper> buildConfigWrapperProvider) {
    return new MainSettingsPresenter_Factory(selectedSiteProvider, accountStoreProvider, wooCommerceStoreProvider, featureAnnouncementRepositoryProvider, buildConfigWrapperProvider);
  }

  public static MainSettingsPresenter newInstance(SelectedSite selectedSite,
      AccountStore accountStore, WooCommerceStore wooCommerceStore,
      FeatureAnnouncementRepository featureAnnouncementRepository,
      BuildConfigWrapper buildConfigWrapper) {
    return new MainSettingsPresenter(selectedSite, accountStore, wooCommerceStore, featureAnnouncementRepository, buildConfigWrapper);
  }
}
