// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.ActionableEmptyView;

public final class MediaPickerActivityBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ActionableEmptyView actionableEmptyView;

  @NonNull
  public final AppBarLayout appbarMain;

  @NonNull
  public final ConstraintLayout containerSelectionBar;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final RecyclerView recycler;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final TextView textAdd;

  @NonNull
  public final TextView textPreview;

  @NonNull
  public final MaterialToolbar toolbarMain;

  @NonNull
  public final ProgressBar uploadProgress;

  private MediaPickerActivityBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ActionableEmptyView actionableEmptyView, @NonNull AppBarLayout appbarMain,
      @NonNull ConstraintLayout containerSelectionBar, @NonNull CoordinatorLayout coordinatorLayout,
      @NonNull ProgressBar progress, @NonNull RecyclerView recycler, @NonNull SearchView searchView,
      @NonNull TextView textAdd, @NonNull TextView textPreview,
      @NonNull MaterialToolbar toolbarMain, @NonNull ProgressBar uploadProgress) {
    this.rootView = rootView;
    this.actionableEmptyView = actionableEmptyView;
    this.appbarMain = appbarMain;
    this.containerSelectionBar = containerSelectionBar;
    this.coordinatorLayout = coordinatorLayout;
    this.progress = progress;
    this.recycler = recycler;
    this.searchView = searchView;
    this.textAdd = textAdd;
    this.textPreview = textPreview;
    this.toolbarMain = toolbarMain;
    this.uploadProgress = uploadProgress;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MediaPickerActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MediaPickerActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.media_picker_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MediaPickerActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionable_empty_view;
      ActionableEmptyView actionableEmptyView = ViewBindings.findChildViewById(rootView, id);
      if (actionableEmptyView == null) {
        break missingId;
      }

      id = R.id.appbar_main;
      AppBarLayout appbarMain = ViewBindings.findChildViewById(rootView, id);
      if (appbarMain == null) {
        break missingId;
      }

      id = R.id.container_selection_bar;
      ConstraintLayout containerSelectionBar = ViewBindings.findChildViewById(rootView, id);
      if (containerSelectionBar == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.recycler;
      RecyclerView recycler = ViewBindings.findChildViewById(rootView, id);
      if (recycler == null) {
        break missingId;
      }

      id = R.id.search_view;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.text_add;
      TextView textAdd = ViewBindings.findChildViewById(rootView, id);
      if (textAdd == null) {
        break missingId;
      }

      id = R.id.text_preview;
      TextView textPreview = ViewBindings.findChildViewById(rootView, id);
      if (textPreview == null) {
        break missingId;
      }

      id = R.id.toolbar_main;
      MaterialToolbar toolbarMain = ViewBindings.findChildViewById(rootView, id);
      if (toolbarMain == null) {
        break missingId;
      }

      id = R.id.upload_progress;
      ProgressBar uploadProgress = ViewBindings.findChildViewById(rootView, id);
      if (uploadProgress == null) {
        break missingId;
      }

      return new MediaPickerActivityBinding((CoordinatorLayout) rootView, actionableEmptyView,
          appbarMain, containerSelectionBar, coordinatorLayout, progress, recycler, searchView,
          textAdd, textPreview, toolbarMain, uploadProgress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
