// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.system;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PermissionsManager_Factory implements Factory<PermissionsManager> {
  private final Provider<Context> contextProvider;

  private final Provider<ActivityStreams> activityStreamsProvider;

  public PermissionsManager_Factory(Provider<Context> contextProvider,
      Provider<ActivityStreams> activityStreamsProvider) {
    this.contextProvider = contextProvider;
    this.activityStreamsProvider = activityStreamsProvider;
  }

  @Override
  public PermissionsManager get() {
    return newInstance(contextProvider.get(), activityStreamsProvider.get());
  }

  public static PermissionsManager_Factory create(Provider<Context> contextProvider,
      Provider<ActivityStreams> activityStreamsProvider) {
    return new PermissionsManager_Factory(contextProvider, activityStreamsProvider);
  }

  public static PermissionsManager newInstance(Context context, ActivityStreams activityStreams) {
    return new PermissionsManager(context, activityStreams);
  }
}
