// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.WPTextView;

public final class PostSignupInterstitialDefaultBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton addSelfHostedSiteButton;

  @NonNull
  public final MaterialButton createNewSiteButton;

  @NonNull
  public final MaterialButton dismissButton;

  @NonNull
  public final ImageView illustrationView;

  @NonNull
  public final WPTextView subtitleView;

  @NonNull
  public final WPTextView titleView;

  private PostSignupInterstitialDefaultBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton addSelfHostedSiteButton, @NonNull MaterialButton createNewSiteButton,
      @NonNull MaterialButton dismissButton, @NonNull ImageView illustrationView,
      @NonNull WPTextView subtitleView, @NonNull WPTextView titleView) {
    this.rootView = rootView;
    this.addSelfHostedSiteButton = addSelfHostedSiteButton;
    this.createNewSiteButton = createNewSiteButton;
    this.dismissButton = dismissButton;
    this.illustrationView = illustrationView;
    this.subtitleView = subtitleView;
    this.titleView = titleView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostSignupInterstitialDefaultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostSignupInterstitialDefaultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_signup_interstitial_default, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostSignupInterstitialDefaultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_self_hosted_site_button;
      MaterialButton addSelfHostedSiteButton = ViewBindings.findChildViewById(rootView, id);
      if (addSelfHostedSiteButton == null) {
        break missingId;
      }

      id = R.id.create_new_site_button;
      MaterialButton createNewSiteButton = ViewBindings.findChildViewById(rootView, id);
      if (createNewSiteButton == null) {
        break missingId;
      }

      id = R.id.dismiss_button;
      MaterialButton dismissButton = ViewBindings.findChildViewById(rootView, id);
      if (dismissButton == null) {
        break missingId;
      }

      id = R.id.illustration_view;
      ImageView illustrationView = ViewBindings.findChildViewById(rootView, id);
      if (illustrationView == null) {
        break missingId;
      }

      id = R.id.subtitle_view;
      WPTextView subtitleView = ViewBindings.findChildViewById(rootView, id);
      if (subtitleView == null) {
        break missingId;
      }

      id = R.id.title_view;
      WPTextView titleView = ViewBindings.findChildViewById(rootView, id);
      if (titleView == null) {
        break missingId;
      }

      return new PostSignupInterstitialDefaultBinding((ConstraintLayout) rootView,
          addSelfHostedSiteButton, createNewSiteButton, dismissButton, illustrationView,
          subtitleView, titleView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
