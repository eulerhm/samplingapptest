// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.ActionableEmptyView;
import org.wordpress.android.widgets.NestedWebView;

public final class SiteCreationPreviewWebViewContainerBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ActionableEmptyView sitePreviewWebError;

  @NonNull
  public final MaterialTextView sitePreviewWebUrlTitle;

  @NonNull
  public final NestedWebView sitePreviewWebView;

  @NonNull
  public final ShimmerFrameLayout sitePreviewWebViewShimmerLayout;

  @NonNull
  public final MaterialCardView webViewContainer;

  private SiteCreationPreviewWebViewContainerBinding(@NonNull MaterialCardView rootView,
      @NonNull ActionableEmptyView sitePreviewWebError,
      @NonNull MaterialTextView sitePreviewWebUrlTitle, @NonNull NestedWebView sitePreviewWebView,
      @NonNull ShimmerFrameLayout sitePreviewWebViewShimmerLayout,
      @NonNull MaterialCardView webViewContainer) {
    this.rootView = rootView;
    this.sitePreviewWebError = sitePreviewWebError;
    this.sitePreviewWebUrlTitle = sitePreviewWebUrlTitle;
    this.sitePreviewWebView = sitePreviewWebView;
    this.sitePreviewWebViewShimmerLayout = sitePreviewWebViewShimmerLayout;
    this.webViewContainer = webViewContainer;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SiteCreationPreviewWebViewContainerBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SiteCreationPreviewWebViewContainerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.site_creation_preview_web_view_container, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SiteCreationPreviewWebViewContainerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.sitePreviewWebError;
      ActionableEmptyView sitePreviewWebError = ViewBindings.findChildViewById(rootView, id);
      if (sitePreviewWebError == null) {
        break missingId;
      }

      id = R.id.sitePreviewWebUrlTitle;
      MaterialTextView sitePreviewWebUrlTitle = ViewBindings.findChildViewById(rootView, id);
      if (sitePreviewWebUrlTitle == null) {
        break missingId;
      }

      id = R.id.sitePreviewWebView;
      NestedWebView sitePreviewWebView = ViewBindings.findChildViewById(rootView, id);
      if (sitePreviewWebView == null) {
        break missingId;
      }

      id = R.id.sitePreviewWebViewShimmerLayout;
      ShimmerFrameLayout sitePreviewWebViewShimmerLayout = ViewBindings.findChildViewById(rootView, id);
      if (sitePreviewWebViewShimmerLayout == null) {
        break missingId;
      }

      MaterialCardView webViewContainer = (MaterialCardView) rootView;

      return new SiteCreationPreviewWebViewContainerBinding((MaterialCardView) rootView,
          sitePreviewWebError, sitePreviewWebUrlTitle, sitePreviewWebView,
          sitePreviewWebViewShimmerLayout, webViewContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
