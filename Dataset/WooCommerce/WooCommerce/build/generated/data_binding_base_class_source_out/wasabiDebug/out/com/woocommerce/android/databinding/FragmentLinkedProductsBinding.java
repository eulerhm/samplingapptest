// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLinkedProductsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton addCrossSellProducts;

  @NonNull
  public final MaterialButton addUpsellProducts;

  @NonNull
  public final MaterialTextView crossSellsCount;

  @NonNull
  public final MaterialTextView crossSellsDesc;

  @NonNull
  public final ImageView crossSellsIcon;

  @NonNull
  public final MaterialTextView crossSellsLabel;

  @NonNull
  public final MaterialTextView upsellsCount;

  @NonNull
  public final MaterialTextView upsellsDesc;

  @NonNull
  public final ImageView upsellsIcon;

  @NonNull
  public final MaterialTextView upsellsLabel;

  private FragmentLinkedProductsBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton addCrossSellProducts, @NonNull MaterialButton addUpsellProducts,
      @NonNull MaterialTextView crossSellsCount, @NonNull MaterialTextView crossSellsDesc,
      @NonNull ImageView crossSellsIcon, @NonNull MaterialTextView crossSellsLabel,
      @NonNull MaterialTextView upsellsCount, @NonNull MaterialTextView upsellsDesc,
      @NonNull ImageView upsellsIcon, @NonNull MaterialTextView upsellsLabel) {
    this.rootView = rootView;
    this.addCrossSellProducts = addCrossSellProducts;
    this.addUpsellProducts = addUpsellProducts;
    this.crossSellsCount = crossSellsCount;
    this.crossSellsDesc = crossSellsDesc;
    this.crossSellsIcon = crossSellsIcon;
    this.crossSellsLabel = crossSellsLabel;
    this.upsellsCount = upsellsCount;
    this.upsellsDesc = upsellsDesc;
    this.upsellsIcon = upsellsIcon;
    this.upsellsLabel = upsellsLabel;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLinkedProductsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLinkedProductsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_linked_products, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLinkedProductsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_cross_sell_products;
      MaterialButton addCrossSellProducts = ViewBindings.findChildViewById(rootView, id);
      if (addCrossSellProducts == null) {
        break missingId;
      }

      id = R.id.add_upsell_products;
      MaterialButton addUpsellProducts = ViewBindings.findChildViewById(rootView, id);
      if (addUpsellProducts == null) {
        break missingId;
      }

      id = R.id.cross_sells_count;
      MaterialTextView crossSellsCount = ViewBindings.findChildViewById(rootView, id);
      if (crossSellsCount == null) {
        break missingId;
      }

      id = R.id.cross_sells_desc;
      MaterialTextView crossSellsDesc = ViewBindings.findChildViewById(rootView, id);
      if (crossSellsDesc == null) {
        break missingId;
      }

      id = R.id.cross_sells_icon;
      ImageView crossSellsIcon = ViewBindings.findChildViewById(rootView, id);
      if (crossSellsIcon == null) {
        break missingId;
      }

      id = R.id.cross_sells_label;
      MaterialTextView crossSellsLabel = ViewBindings.findChildViewById(rootView, id);
      if (crossSellsLabel == null) {
        break missingId;
      }

      id = R.id.upsells_count;
      MaterialTextView upsellsCount = ViewBindings.findChildViewById(rootView, id);
      if (upsellsCount == null) {
        break missingId;
      }

      id = R.id.upsells_desc;
      MaterialTextView upsellsDesc = ViewBindings.findChildViewById(rootView, id);
      if (upsellsDesc == null) {
        break missingId;
      }

      id = R.id.upsells_icon;
      ImageView upsellsIcon = ViewBindings.findChildViewById(rootView, id);
      if (upsellsIcon == null) {
        break missingId;
      }

      id = R.id.upsells_label;
      MaterialTextView upsellsLabel = ViewBindings.findChildViewById(rootView, id);
      if (upsellsLabel == null) {
        break missingId;
      }

      return new FragmentLinkedProductsBinding((ScrollView) rootView, addCrossSellProducts,
          addUpsellProducts, crossSellsCount, crossSellsDesc, crossSellsIcon, crossSellsLabel,
          upsellsCount, upsellsDesc, upsellsIcon, upsellsLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
