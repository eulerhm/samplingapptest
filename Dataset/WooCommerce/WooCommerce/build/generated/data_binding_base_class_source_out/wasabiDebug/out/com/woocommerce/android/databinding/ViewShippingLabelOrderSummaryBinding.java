// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.constraintlayout.widget.Group;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.WCElevatedConstraintLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewShippingLabelOrderSummaryBinding implements ViewBinding {
  @NonNull
  private final WCElevatedConstraintLayout rootView;

  @NonNull
  public final Group discountGroup;

  @NonNull
  public final AppCompatImageButton discountInfo;

  @NonNull
  public final MaterialTextView discountLabel;

  @NonNull
  public final MaterialTextView discountPrice;

  @NonNull
  public final View divider;

  @NonNull
  public final Guideline endGuideline;

  @NonNull
  public final LinearLayout individualPackagesPricesLayout;

  @NonNull
  public final MaterialCheckBox markOrderCompleteCheckbox;

  @NonNull
  public final MaterialButton purchaseLabelButton;

  @NonNull
  public final Guideline startGuideline;

  @NonNull
  public final MaterialTextView subtotalLabel;

  @NonNull
  public final MaterialTextView subtotalPrice;

  @NonNull
  public final MaterialTextView title;

  @NonNull
  public final MaterialTextView totalLabel;

  @NonNull
  public final MaterialTextView totalPrice;

  private ViewShippingLabelOrderSummaryBinding(@NonNull WCElevatedConstraintLayout rootView,
      @NonNull Group discountGroup, @NonNull AppCompatImageButton discountInfo,
      @NonNull MaterialTextView discountLabel, @NonNull MaterialTextView discountPrice,
      @NonNull View divider, @NonNull Guideline endGuideline,
      @NonNull LinearLayout individualPackagesPricesLayout,
      @NonNull MaterialCheckBox markOrderCompleteCheckbox,
      @NonNull MaterialButton purchaseLabelButton, @NonNull Guideline startGuideline,
      @NonNull MaterialTextView subtotalLabel, @NonNull MaterialTextView subtotalPrice,
      @NonNull MaterialTextView title, @NonNull MaterialTextView totalLabel,
      @NonNull MaterialTextView totalPrice) {
    this.rootView = rootView;
    this.discountGroup = discountGroup;
    this.discountInfo = discountInfo;
    this.discountLabel = discountLabel;
    this.discountPrice = discountPrice;
    this.divider = divider;
    this.endGuideline = endGuideline;
    this.individualPackagesPricesLayout = individualPackagesPricesLayout;
    this.markOrderCompleteCheckbox = markOrderCompleteCheckbox;
    this.purchaseLabelButton = purchaseLabelButton;
    this.startGuideline = startGuideline;
    this.subtotalLabel = subtotalLabel;
    this.subtotalPrice = subtotalPrice;
    this.title = title;
    this.totalLabel = totalLabel;
    this.totalPrice = totalPrice;
  }

  @Override
  @NonNull
  public WCElevatedConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewShippingLabelOrderSummaryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewShippingLabelOrderSummaryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_shipping_label_order_summary, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewShippingLabelOrderSummaryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.discount_group;
      Group discountGroup = ViewBindings.findChildViewById(rootView, id);
      if (discountGroup == null) {
        break missingId;
      }

      id = R.id.discount_info;
      AppCompatImageButton discountInfo = ViewBindings.findChildViewById(rootView, id);
      if (discountInfo == null) {
        break missingId;
      }

      id = R.id.discount_label;
      MaterialTextView discountLabel = ViewBindings.findChildViewById(rootView, id);
      if (discountLabel == null) {
        break missingId;
      }

      id = R.id.discount_price;
      MaterialTextView discountPrice = ViewBindings.findChildViewById(rootView, id);
      if (discountPrice == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.end_guideline;
      Guideline endGuideline = ViewBindings.findChildViewById(rootView, id);
      if (endGuideline == null) {
        break missingId;
      }

      id = R.id.individual_packages_prices_layout;
      LinearLayout individualPackagesPricesLayout = ViewBindings.findChildViewById(rootView, id);
      if (individualPackagesPricesLayout == null) {
        break missingId;
      }

      id = R.id.mark_order_complete_checkbox;
      MaterialCheckBox markOrderCompleteCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (markOrderCompleteCheckbox == null) {
        break missingId;
      }

      id = R.id.purchase_label_button;
      MaterialButton purchaseLabelButton = ViewBindings.findChildViewById(rootView, id);
      if (purchaseLabelButton == null) {
        break missingId;
      }

      id = R.id.start_guideline;
      Guideline startGuideline = ViewBindings.findChildViewById(rootView, id);
      if (startGuideline == null) {
        break missingId;
      }

      id = R.id.subtotal_label;
      MaterialTextView subtotalLabel = ViewBindings.findChildViewById(rootView, id);
      if (subtotalLabel == null) {
        break missingId;
      }

      id = R.id.subtotal_price;
      MaterialTextView subtotalPrice = ViewBindings.findChildViewById(rootView, id);
      if (subtotalPrice == null) {
        break missingId;
      }

      id = R.id.title;
      MaterialTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.total_label;
      MaterialTextView totalLabel = ViewBindings.findChildViewById(rootView, id);
      if (totalLabel == null) {
        break missingId;
      }

      id = R.id.total_price;
      MaterialTextView totalPrice = ViewBindings.findChildViewById(rootView, id);
      if (totalPrice == null) {
        break missingId;
      }

      return new ViewShippingLabelOrderSummaryBinding((WCElevatedConstraintLayout) rootView,
          discountGroup, discountInfo, discountLabel, discountPrice, divider, endGuideline,
          individualPackagesPricesLayout, markOrderCompleteCheckbox, purchaseLabelButton,
          startGuideline, subtotalLabel, subtotalPrice, title, totalLabel, totalPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
