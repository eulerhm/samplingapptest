// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.services.worker;

import android.content.Context;
import androidx.work.WorkerParameters;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.owntracks.android.services.MessageProcessor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MQTTMaybeReconnectAndPingWorker_Factory implements Factory<MQTTMaybeReconnectAndPingWorker> {
  private final Provider<Context> contextProvider;

  private final Provider<WorkerParameters> workerParamsProvider;

  private final Provider<MessageProcessor> messageProcessorProvider;

  public MQTTMaybeReconnectAndPingWorker_Factory(Provider<Context> contextProvider,
      Provider<WorkerParameters> workerParamsProvider,
      Provider<MessageProcessor> messageProcessorProvider) {
    this.contextProvider = contextProvider;
    this.workerParamsProvider = workerParamsProvider;
    this.messageProcessorProvider = messageProcessorProvider;
  }

  @Override
  public MQTTMaybeReconnectAndPingWorker get() {
    return newInstance(contextProvider.get(), workerParamsProvider.get(), messageProcessorProvider.get());
  }

  public static MQTTMaybeReconnectAndPingWorker_Factory create(Provider<Context> contextProvider,
      Provider<WorkerParameters> workerParamsProvider,
      Provider<MessageProcessor> messageProcessorProvider) {
    return new MQTTMaybeReconnectAndPingWorker_Factory(contextProvider, workerParamsProvider, messageProcessorProvider);
  }

  public static MQTTMaybeReconnectAndPingWorker newInstance(Context context,
      WorkerParameters workerParams, MessageProcessor messageProcessor) {
    return new MQTTMaybeReconnectAndPingWorker(context, workerParams, messageProcessor);
  }
}
