// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrderDetailProductItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialTextView productInfoAddons;

  @NonNull
  public final MaterialTextView productInfoAttributes;

  @NonNull
  public final ImageView productInfoIcon;

  @NonNull
  public final FrameLayout productInfoIconFrame;

  @NonNull
  public final MaterialTextView productInfoName;

  @NonNull
  public final MaterialTextView productInfoSKU;

  @NonNull
  public final MaterialTextView productInfoTotal;

  private OrderDetailProductItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialTextView productInfoAddons, @NonNull MaterialTextView productInfoAttributes,
      @NonNull ImageView productInfoIcon, @NonNull FrameLayout productInfoIconFrame,
      @NonNull MaterialTextView productInfoName, @NonNull MaterialTextView productInfoSKU,
      @NonNull MaterialTextView productInfoTotal) {
    this.rootView = rootView;
    this.productInfoAddons = productInfoAddons;
    this.productInfoAttributes = productInfoAttributes;
    this.productInfoIcon = productInfoIcon;
    this.productInfoIconFrame = productInfoIconFrame;
    this.productInfoName = productInfoName;
    this.productInfoSKU = productInfoSKU;
    this.productInfoTotal = productInfoTotal;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrderDetailProductItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrderDetailProductItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.order_detail_product_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrderDetailProductItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.productInfo_addons;
      MaterialTextView productInfoAddons = ViewBindings.findChildViewById(rootView, id);
      if (productInfoAddons == null) {
        break missingId;
      }

      id = R.id.productInfo_attributes;
      MaterialTextView productInfoAttributes = ViewBindings.findChildViewById(rootView, id);
      if (productInfoAttributes == null) {
        break missingId;
      }

      id = R.id.productInfo_icon;
      ImageView productInfoIcon = ViewBindings.findChildViewById(rootView, id);
      if (productInfoIcon == null) {
        break missingId;
      }

      id = R.id.productInfo_iconFrame;
      FrameLayout productInfoIconFrame = ViewBindings.findChildViewById(rootView, id);
      if (productInfoIconFrame == null) {
        break missingId;
      }

      id = R.id.productInfo_name;
      MaterialTextView productInfoName = ViewBindings.findChildViewById(rootView, id);
      if (productInfoName == null) {
        break missingId;
      }

      id = R.id.productInfo_SKU;
      MaterialTextView productInfoSKU = ViewBindings.findChildViewById(rootView, id);
      if (productInfoSKU == null) {
        break missingId;
      }

      id = R.id.productInfo_total;
      MaterialTextView productInfoTotal = ViewBindings.findChildViewById(rootView, id);
      if (productInfoTotal == null) {
        break missingId;
      }

      return new OrderDetailProductItemBinding((ConstraintLayout) rootView, productInfoAddons,
          productInfoAttributes, productInfoIcon, productInfoIconFrame, productInfoName,
          productInfoSKU, productInfoTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
