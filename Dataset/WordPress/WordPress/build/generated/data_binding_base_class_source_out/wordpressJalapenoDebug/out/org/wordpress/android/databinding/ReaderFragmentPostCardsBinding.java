// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.FilteredRecyclerView;

public final class ReaderFragmentPostCardsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout contentContainer;

  @NonNull
  public final ReaderEmptyViewBinding emptyCustomView;

  @NonNull
  public final MaterialCardView layoutNewPosts;

  @NonNull
  public final ProgressBar progressFooter;

  @NonNull
  public final FilteredRecyclerView readerRecyclerView;

  @NonNull
  public final FrameLayout subFilterComponentContainer;

  private ReaderFragmentPostCardsBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout contentContainer, @NonNull ReaderEmptyViewBinding emptyCustomView,
      @NonNull MaterialCardView layoutNewPosts, @NonNull ProgressBar progressFooter,
      @NonNull FilteredRecyclerView readerRecyclerView,
      @NonNull FrameLayout subFilterComponentContainer) {
    this.rootView = rootView;
    this.contentContainer = contentContainer;
    this.emptyCustomView = emptyCustomView;
    this.layoutNewPosts = layoutNewPosts;
    this.progressFooter = progressFooter;
    this.readerRecyclerView = readerRecyclerView;
    this.subFilterComponentContainer = subFilterComponentContainer;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReaderFragmentPostCardsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReaderFragmentPostCardsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reader_fragment_post_cards, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReaderFragmentPostCardsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout contentContainer = (RelativeLayout) rootView;

      id = R.id.empty_custom_view;
      View emptyCustomView = ViewBindings.findChildViewById(rootView, id);
      if (emptyCustomView == null) {
        break missingId;
      }
      ReaderEmptyViewBinding binding_emptyCustomView = ReaderEmptyViewBinding.bind(emptyCustomView);

      id = R.id.layout_new_posts;
      MaterialCardView layoutNewPosts = ViewBindings.findChildViewById(rootView, id);
      if (layoutNewPosts == null) {
        break missingId;
      }

      id = R.id.progress_footer;
      ProgressBar progressFooter = ViewBindings.findChildViewById(rootView, id);
      if (progressFooter == null) {
        break missingId;
      }

      id = R.id.reader_recycler_view;
      FilteredRecyclerView readerRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (readerRecyclerView == null) {
        break missingId;
      }

      id = R.id.sub_filter_component_container;
      FrameLayout subFilterComponentContainer = ViewBindings.findChildViewById(rootView, id);
      if (subFilterComponentContainer == null) {
        break missingId;
      }

      return new ReaderFragmentPostCardsBinding((RelativeLayout) rootView, contentContainer,
          binding_emptyCustomView, layoutNewPosts, progressFooter, readerRecyclerView,
          subFilterComponentContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
