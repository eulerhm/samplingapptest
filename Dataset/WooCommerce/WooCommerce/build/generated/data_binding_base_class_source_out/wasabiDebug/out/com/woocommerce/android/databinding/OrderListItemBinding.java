// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.FlowLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrderListItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final MaterialTextView orderDate;

  @NonNull
  public final MaterialTextView orderName;

  @NonNull
  public final MaterialTextView orderNum;

  @NonNull
  public final FlowLayout orderTags;

  @NonNull
  public final MaterialTextView orderTotal;

  private OrderListItemBinding(@NonNull MaterialCardView rootView, @NonNull View divider,
      @NonNull MaterialTextView orderDate, @NonNull MaterialTextView orderName,
      @NonNull MaterialTextView orderNum, @NonNull FlowLayout orderTags,
      @NonNull MaterialTextView orderTotal) {
    this.rootView = rootView;
    this.divider = divider;
    this.orderDate = orderDate;
    this.orderName = orderName;
    this.orderNum = orderNum;
    this.orderTags = orderTags;
    this.orderTotal = orderTotal;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static OrderListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrderListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.order_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrderListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.orderDate;
      MaterialTextView orderDate = ViewBindings.findChildViewById(rootView, id);
      if (orderDate == null) {
        break missingId;
      }

      id = R.id.orderName;
      MaterialTextView orderName = ViewBindings.findChildViewById(rootView, id);
      if (orderName == null) {
        break missingId;
      }

      id = R.id.orderNum;
      MaterialTextView orderNum = ViewBindings.findChildViewById(rootView, id);
      if (orderNum == null) {
        break missingId;
      }

      id = R.id.orderTags;
      FlowLayout orderTags = ViewBindings.findChildViewById(rootView, id);
      if (orderTags == null) {
        break missingId;
      }

      id = R.id.orderTotal;
      MaterialTextView orderTotal = ViewBindings.findChildViewById(rootView, id);
      if (orderTotal == null) {
        break missingId;
      }

      return new OrderListItemBinding((MaterialCardView) rootView, divider, orderDate, orderName,
          orderNum, orderTags, orderTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
