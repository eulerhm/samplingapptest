package com.google.android.gnd.model.submission;

import com.google.android.gnd.model.task.Field;
import java8.util.Optional;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_ResponseDelta extends ResponseDelta {

  private final String fieldId;

  private final Field.Type fieldType;

  private final Optional<Response> newResponse;

  private AutoValue_ResponseDelta(
      String fieldId,
      Field.Type fieldType,
      Optional<Response> newResponse) {
    this.fieldId = fieldId;
    this.fieldType = fieldType;
    this.newResponse = newResponse;
  }

  @Override
  public String getFieldId() {
    return fieldId;
  }

  @Override
  public Field.Type getFieldType() {
    return fieldType;
  }

  @Override
  public Optional<Response> getNewResponse() {
    return newResponse;
  }

  @Override
  public String toString() {
    return "ResponseDelta{"
        + "fieldId=" + fieldId + ", "
        + "fieldType=" + fieldType + ", "
        + "newResponse=" + newResponse
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ResponseDelta) {
      ResponseDelta that = (ResponseDelta) o;
      return this.fieldId.equals(that.getFieldId())
          && this.fieldType.equals(that.getFieldType())
          && this.newResponse.equals(that.getNewResponse());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= fieldId.hashCode();
    h$ *= 1000003;
    h$ ^= fieldType.hashCode();
    h$ *= 1000003;
    h$ ^= newResponse.hashCode();
    return h$;
  }

  static final class Builder extends ResponseDelta.Builder {
    private String fieldId;
    private Field.Type fieldType;
    private Optional<Response> newResponse;
    Builder() {
    }
    @Override
    public ResponseDelta.Builder setFieldId(String fieldId) {
      if (fieldId == null) {
        throw new NullPointerException("Null fieldId");
      }
      this.fieldId = fieldId;
      return this;
    }
    @Override
    public ResponseDelta.Builder setFieldType(Field.Type fieldType) {
      if (fieldType == null) {
        throw new NullPointerException("Null fieldType");
      }
      this.fieldType = fieldType;
      return this;
    }
    @Override
    public ResponseDelta.Builder setNewResponse(Optional<Response> newResponse) {
      if (newResponse == null) {
        throw new NullPointerException("Null newResponse");
      }
      this.newResponse = newResponse;
      return this;
    }
    @Override
    public ResponseDelta build() {
      String missing = "";
      if (this.fieldId == null) {
        missing += " fieldId";
      }
      if (this.fieldType == null) {
        missing += " fieldType";
      }
      if (this.newResponse == null) {
        missing += " newResponse";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_ResponseDelta(
          this.fieldId,
          this.fieldType,
          this.newResponse);
    }
  }

}
