// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.ActionableEmptyView;
import org.wordpress.android.ui.prefs.EmptyViewRecyclerView;

public final class DomainSuggestionsFragmentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ActionableEmptyView actionableEmptyView;

  @NonNull
  public final MaterialCardView bottomButtons;

  @NonNull
  public final ProgressBar buttonProgressBar;

  @NonNull
  public final View divider;

  @NonNull
  public final TextInputEditText domainSuggestionKeywordInput;

  @NonNull
  public final LinearLayout domainSuggestionsContainer;

  @NonNull
  public final EmptyViewRecyclerView domainSuggestionsList;

  @NonNull
  public final TextView introLine1;

  @NonNull
  public final TextView introLine2;

  @NonNull
  public final LinearLayout introductionContainer;

  @NonNull
  public final View redirectDivider;

  @NonNull
  public final TextView redirectMessage;

  @NonNull
  public final LinearLayout searchContainer;

  @NonNull
  public final MaterialButton selectDomainButton;

  @NonNull
  public final ProgressBar suggestionProgressBar;

  @NonNull
  public final ImageView suggestionSearchIcon;

  private DomainSuggestionsFragmentBinding(@NonNull RelativeLayout rootView,
      @NonNull ActionableEmptyView actionableEmptyView, @NonNull MaterialCardView bottomButtons,
      @NonNull ProgressBar buttonProgressBar, @NonNull View divider,
      @NonNull TextInputEditText domainSuggestionKeywordInput,
      @NonNull LinearLayout domainSuggestionsContainer,
      @NonNull EmptyViewRecyclerView domainSuggestionsList, @NonNull TextView introLine1,
      @NonNull TextView introLine2, @NonNull LinearLayout introductionContainer,
      @NonNull View redirectDivider, @NonNull TextView redirectMessage,
      @NonNull LinearLayout searchContainer, @NonNull MaterialButton selectDomainButton,
      @NonNull ProgressBar suggestionProgressBar, @NonNull ImageView suggestionSearchIcon) {
    this.rootView = rootView;
    this.actionableEmptyView = actionableEmptyView;
    this.bottomButtons = bottomButtons;
    this.buttonProgressBar = buttonProgressBar;
    this.divider = divider;
    this.domainSuggestionKeywordInput = domainSuggestionKeywordInput;
    this.domainSuggestionsContainer = domainSuggestionsContainer;
    this.domainSuggestionsList = domainSuggestionsList;
    this.introLine1 = introLine1;
    this.introLine2 = introLine2;
    this.introductionContainer = introductionContainer;
    this.redirectDivider = redirectDivider;
    this.redirectMessage = redirectMessage;
    this.searchContainer = searchContainer;
    this.selectDomainButton = selectDomainButton;
    this.suggestionProgressBar = suggestionProgressBar;
    this.suggestionSearchIcon = suggestionSearchIcon;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DomainSuggestionsFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DomainSuggestionsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.domain_suggestions_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DomainSuggestionsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionableEmptyView;
      ActionableEmptyView actionableEmptyView = ViewBindings.findChildViewById(rootView, id);
      if (actionableEmptyView == null) {
        break missingId;
      }

      id = R.id.bottom_buttons;
      MaterialCardView bottomButtons = ViewBindings.findChildViewById(rootView, id);
      if (bottomButtons == null) {
        break missingId;
      }

      id = R.id.button_progress_bar;
      ProgressBar buttonProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (buttonProgressBar == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.domain_suggestion_keyword_input;
      TextInputEditText domainSuggestionKeywordInput = ViewBindings.findChildViewById(rootView, id);
      if (domainSuggestionKeywordInput == null) {
        break missingId;
      }

      id = R.id.domain_suggestions_container;
      LinearLayout domainSuggestionsContainer = ViewBindings.findChildViewById(rootView, id);
      if (domainSuggestionsContainer == null) {
        break missingId;
      }

      id = R.id.domain_suggestions_list;
      EmptyViewRecyclerView domainSuggestionsList = ViewBindings.findChildViewById(rootView, id);
      if (domainSuggestionsList == null) {
        break missingId;
      }

      id = R.id.intro_line1;
      TextView introLine1 = ViewBindings.findChildViewById(rootView, id);
      if (introLine1 == null) {
        break missingId;
      }

      id = R.id.intro_line2;
      TextView introLine2 = ViewBindings.findChildViewById(rootView, id);
      if (introLine2 == null) {
        break missingId;
      }

      id = R.id.introduction_container;
      LinearLayout introductionContainer = ViewBindings.findChildViewById(rootView, id);
      if (introductionContainer == null) {
        break missingId;
      }

      id = R.id.redirect_divider;
      View redirectDivider = ViewBindings.findChildViewById(rootView, id);
      if (redirectDivider == null) {
        break missingId;
      }

      id = R.id.redirect_message;
      TextView redirectMessage = ViewBindings.findChildViewById(rootView, id);
      if (redirectMessage == null) {
        break missingId;
      }

      id = R.id.search_container;
      LinearLayout searchContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchContainer == null) {
        break missingId;
      }

      id = R.id.select_domain_button;
      MaterialButton selectDomainButton = ViewBindings.findChildViewById(rootView, id);
      if (selectDomainButton == null) {
        break missingId;
      }

      id = R.id.suggestion_progress_bar;
      ProgressBar suggestionProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (suggestionProgressBar == null) {
        break missingId;
      }

      id = R.id.suggestion_search_icon;
      ImageView suggestionSearchIcon = ViewBindings.findChildViewById(rootView, id);
      if (suggestionSearchIcon == null) {
        break missingId;
      }

      return new DomainSuggestionsFragmentBinding((RelativeLayout) rootView, actionableEmptyView,
          bottomButtons, buttonProgressBar, divider, domainSuggestionKeywordInput,
          domainSuggestionsContainer, domainSuggestionsList, introLine1, introLine2,
          introductionContainer, redirectDivider, redirectMessage, searchContainer,
          selectDomainButton, suggestionProgressBar, suggestionSearchIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
