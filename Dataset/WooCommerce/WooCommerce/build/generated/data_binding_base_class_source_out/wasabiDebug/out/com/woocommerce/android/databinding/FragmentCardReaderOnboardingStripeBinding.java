// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCardReaderOnboardingStripeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton button;

  @NonNull
  public final AppCompatImageView illustration;

  @NonNull
  public final CardReaderLearnMoreSectionBinding learnMoreContainer;

  @NonNull
  public final MaterialTextView textHeader;

  @NonNull
  public final MaterialTextView textLabel;

  @NonNull
  public final MaterialTextView textSupport;

  private FragmentCardReaderOnboardingStripeBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton button, @NonNull AppCompatImageView illustration,
      @NonNull CardReaderLearnMoreSectionBinding learnMoreContainer,
      @NonNull MaterialTextView textHeader, @NonNull MaterialTextView textLabel,
      @NonNull MaterialTextView textSupport) {
    this.rootView = rootView;
    this.button = button;
    this.illustration = illustration;
    this.learnMoreContainer = learnMoreContainer;
    this.textHeader = textHeader;
    this.textLabel = textLabel;
    this.textSupport = textSupport;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCardReaderOnboardingStripeBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCardReaderOnboardingStripeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_card_reader_onboarding_stripe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCardReaderOnboardingStripeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      MaterialButton button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.illustration;
      AppCompatImageView illustration = ViewBindings.findChildViewById(rootView, id);
      if (illustration == null) {
        break missingId;
      }

      id = R.id.learn_more_container;
      View learnMoreContainer = ViewBindings.findChildViewById(rootView, id);
      if (learnMoreContainer == null) {
        break missingId;
      }
      CardReaderLearnMoreSectionBinding binding_learnMoreContainer = CardReaderLearnMoreSectionBinding.bind(learnMoreContainer);

      id = R.id.textHeader;
      MaterialTextView textHeader = ViewBindings.findChildViewById(rootView, id);
      if (textHeader == null) {
        break missingId;
      }

      id = R.id.textLabel;
      MaterialTextView textLabel = ViewBindings.findChildViewById(rootView, id);
      if (textLabel == null) {
        break missingId;
      }

      id = R.id.textSupport;
      MaterialTextView textSupport = ViewBindings.findChildViewById(rootView, id);
      if (textSupport == null) {
        break missingId;
      }

      return new FragmentCardReaderOnboardingStripeBinding((ConstraintLayout) rootView, button,
          illustration, binding_learnMoreContainer, textHeader, textLabel, textSupport);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
