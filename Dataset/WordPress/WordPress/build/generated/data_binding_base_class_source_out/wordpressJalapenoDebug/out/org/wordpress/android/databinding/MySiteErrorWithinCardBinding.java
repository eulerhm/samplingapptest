// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class MySiteErrorWithinCardBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MySiteCardToolbarBinding mySiteToolbar;

  @NonNull
  public final MaterialTextView subtitle;

  @NonNull
  public final MaterialTextView title;

  private MySiteErrorWithinCardBinding(@NonNull MaterialCardView rootView,
      @NonNull MySiteCardToolbarBinding mySiteToolbar, @NonNull MaterialTextView subtitle,
      @NonNull MaterialTextView title) {
    this.rootView = rootView;
    this.mySiteToolbar = mySiteToolbar;
    this.subtitle = subtitle;
    this.title = title;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MySiteErrorWithinCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MySiteErrorWithinCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.my_site_error_within_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MySiteErrorWithinCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.my_site_toolbar;
      View mySiteToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mySiteToolbar == null) {
        break missingId;
      }
      MySiteCardToolbarBinding binding_mySiteToolbar = MySiteCardToolbarBinding.bind(mySiteToolbar);

      id = R.id.subtitle;
      MaterialTextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.title;
      MaterialTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new MySiteErrorWithinCardBinding((MaterialCardView) rootView, binding_mySiteToolbar,
          subtitle, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
