// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.ScrollChildSwipeRefreshLayout;
import com.woocommerce.android.widgets.WCEmptyView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentReviewsListBinding implements ViewBinding {
  @NonNull
  private final ScrollChildSwipeRefreshLayout rootView;

  @NonNull
  public final WCEmptyView emptyView;

  @NonNull
  public final RelativeLayout notifsContainer;

  @NonNull
  public final ProgressBar notifsLoadMoreProgress;

  @NonNull
  public final ScrollChildSwipeRefreshLayout notifsRefreshLayout;

  @NonNull
  public final LinearLayout notifsView;

  @NonNull
  public final RecyclerView reviewsList;

  private FragmentReviewsListBinding(@NonNull ScrollChildSwipeRefreshLayout rootView,
      @NonNull WCEmptyView emptyView, @NonNull RelativeLayout notifsContainer,
      @NonNull ProgressBar notifsLoadMoreProgress,
      @NonNull ScrollChildSwipeRefreshLayout notifsRefreshLayout, @NonNull LinearLayout notifsView,
      @NonNull RecyclerView reviewsList) {
    this.rootView = rootView;
    this.emptyView = emptyView;
    this.notifsContainer = notifsContainer;
    this.notifsLoadMoreProgress = notifsLoadMoreProgress;
    this.notifsRefreshLayout = notifsRefreshLayout;
    this.notifsView = notifsView;
    this.reviewsList = reviewsList;
  }

  @Override
  @NonNull
  public ScrollChildSwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentReviewsListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentReviewsListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_reviews_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentReviewsListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.empty_view;
      WCEmptyView emptyView = ViewBindings.findChildViewById(rootView, id);
      if (emptyView == null) {
        break missingId;
      }

      id = R.id.notifsContainer;
      RelativeLayout notifsContainer = ViewBindings.findChildViewById(rootView, id);
      if (notifsContainer == null) {
        break missingId;
      }

      id = R.id.notifsLoadMoreProgress;
      ProgressBar notifsLoadMoreProgress = ViewBindings.findChildViewById(rootView, id);
      if (notifsLoadMoreProgress == null) {
        break missingId;
      }

      ScrollChildSwipeRefreshLayout notifsRefreshLayout = (ScrollChildSwipeRefreshLayout) rootView;

      id = R.id.notifsView;
      LinearLayout notifsView = ViewBindings.findChildViewById(rootView, id);
      if (notifsView == null) {
        break missingId;
      }

      id = R.id.reviewsList;
      RecyclerView reviewsList = ViewBindings.findChildViewById(rootView, id);
      if (reviewsList == null) {
        break missingId;
      }

      return new FragmentReviewsListBinding((ScrollChildSwipeRefreshLayout) rootView, emptyView,
          notifsContainer, notifsLoadMoreProgress, notifsRefreshLayout, notifsView, reviewsList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
