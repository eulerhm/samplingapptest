// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.WPTooltipView;
import org.wordpress.android.ui.main.WPMainNavigationView;
import org.wordpress.android.widgets.WPTextView;

public final class MainActivityBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout bottomContainer;

  @NonNull
  public final WPMainNavigationView bottomNavigation;

  @NonNull
  public final WPTextView connectionBar;

  @NonNull
  public final CoordinatorLayout coordinator;

  @NonNull
  public final FloatingActionButton fabButton;

  @NonNull
  public final RelativeLayout fabContainer;

  @NonNull
  public final WPTooltipView fabTooltip;

  @NonNull
  public final FrameLayout fragmentContainer;

  @NonNull
  public final View navbarSeparator;

  @NonNull
  public final RelativeLayout rootViewMain;

  private MainActivityBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout bottomContainer, @NonNull WPMainNavigationView bottomNavigation,
      @NonNull WPTextView connectionBar, @NonNull CoordinatorLayout coordinator,
      @NonNull FloatingActionButton fabButton, @NonNull RelativeLayout fabContainer,
      @NonNull WPTooltipView fabTooltip, @NonNull FrameLayout fragmentContainer,
      @NonNull View navbarSeparator, @NonNull RelativeLayout rootViewMain) {
    this.rootView = rootView;
    this.bottomContainer = bottomContainer;
    this.bottomNavigation = bottomNavigation;
    this.connectionBar = connectionBar;
    this.coordinator = coordinator;
    this.fabButton = fabButton;
    this.fabContainer = fabContainer;
    this.fabTooltip = fabTooltip;
    this.fragmentContainer = fragmentContainer;
    this.navbarSeparator = navbarSeparator;
    this.rootViewMain = rootViewMain;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_container;
      LinearLayout bottomContainer = ViewBindings.findChildViewById(rootView, id);
      if (bottomContainer == null) {
        break missingId;
      }

      id = R.id.bottom_navigation;
      WPMainNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.connection_bar;
      WPTextView connectionBar = ViewBindings.findChildViewById(rootView, id);
      if (connectionBar == null) {
        break missingId;
      }

      id = R.id.coordinator;
      CoordinatorLayout coordinator = ViewBindings.findChildViewById(rootView, id);
      if (coordinator == null) {
        break missingId;
      }

      id = R.id.fab_button;
      FloatingActionButton fabButton = ViewBindings.findChildViewById(rootView, id);
      if (fabButton == null) {
        break missingId;
      }

      id = R.id.fab_container;
      RelativeLayout fabContainer = ViewBindings.findChildViewById(rootView, id);
      if (fabContainer == null) {
        break missingId;
      }

      id = R.id.fab_tooltip;
      WPTooltipView fabTooltip = ViewBindings.findChildViewById(rootView, id);
      if (fabTooltip == null) {
        break missingId;
      }

      id = R.id.fragment_container;
      FrameLayout fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.navbar_separator;
      View navbarSeparator = ViewBindings.findChildViewById(rootView, id);
      if (navbarSeparator == null) {
        break missingId;
      }

      RelativeLayout rootViewMain = (RelativeLayout) rootView;

      return new MainActivityBinding((RelativeLayout) rootView, bottomContainer, bottomNavigation,
          connectionBar, coordinator, fabButton, fabContainer, fabTooltip, fragmentContainer,
          navbarSeparator, rootViewMain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
