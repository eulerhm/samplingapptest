// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.WCMaterialOutlinedEditTextView;
import com.woocommerce.android.widgets.WCMaterialOutlinedSpinnerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductInventoryBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final WCMaterialOutlinedSpinnerView editProductBackorders;

  @NonNull
  public final WCMaterialOutlinedSpinnerView editProductStockStatus;

  @NonNull
  public final Barrier manageStockBarrier;

  @NonNull
  public final LinearLayout manageStockMorePanel;

  @NonNull
  public final SwitchMaterial manageStockSwitch;

  @NonNull
  public final WCMaterialOutlinedEditTextView productSku;

  @NonNull
  public final WCMaterialOutlinedEditTextView productStockQuantity;

  @NonNull
  public final SwitchMaterial soldIndividuallySwitch;

  @NonNull
  public final Group stockManagementPanel;

  private FragmentProductInventoryBinding(@NonNull ScrollView rootView,
      @NonNull WCMaterialOutlinedSpinnerView editProductBackorders,
      @NonNull WCMaterialOutlinedSpinnerView editProductStockStatus,
      @NonNull Barrier manageStockBarrier, @NonNull LinearLayout manageStockMorePanel,
      @NonNull SwitchMaterial manageStockSwitch, @NonNull WCMaterialOutlinedEditTextView productSku,
      @NonNull WCMaterialOutlinedEditTextView productStockQuantity,
      @NonNull SwitchMaterial soldIndividuallySwitch, @NonNull Group stockManagementPanel) {
    this.rootView = rootView;
    this.editProductBackorders = editProductBackorders;
    this.editProductStockStatus = editProductStockStatus;
    this.manageStockBarrier = manageStockBarrier;
    this.manageStockMorePanel = manageStockMorePanel;
    this.manageStockSwitch = manageStockSwitch;
    this.productSku = productSku;
    this.productStockQuantity = productStockQuantity;
    this.soldIndividuallySwitch = soldIndividuallySwitch;
    this.stockManagementPanel = stockManagementPanel;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductInventoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductInventoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_product_inventory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductInventoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_product_backorders;
      WCMaterialOutlinedSpinnerView editProductBackorders = ViewBindings.findChildViewById(rootView, id);
      if (editProductBackorders == null) {
        break missingId;
      }

      id = R.id.edit_product_stock_status;
      WCMaterialOutlinedSpinnerView editProductStockStatus = ViewBindings.findChildViewById(rootView, id);
      if (editProductStockStatus == null) {
        break missingId;
      }

      id = R.id.manageStock_barrier;
      Barrier manageStockBarrier = ViewBindings.findChildViewById(rootView, id);
      if (manageStockBarrier == null) {
        break missingId;
      }

      id = R.id.manageStock_morePanel;
      LinearLayout manageStockMorePanel = ViewBindings.findChildViewById(rootView, id);
      if (manageStockMorePanel == null) {
        break missingId;
      }

      id = R.id.manageStock_switch;
      SwitchMaterial manageStockSwitch = ViewBindings.findChildViewById(rootView, id);
      if (manageStockSwitch == null) {
        break missingId;
      }

      id = R.id.product_sku;
      WCMaterialOutlinedEditTextView productSku = ViewBindings.findChildViewById(rootView, id);
      if (productSku == null) {
        break missingId;
      }

      id = R.id.product_stock_quantity;
      WCMaterialOutlinedEditTextView productStockQuantity = ViewBindings.findChildViewById(rootView, id);
      if (productStockQuantity == null) {
        break missingId;
      }

      id = R.id.soldIndividually_switch;
      SwitchMaterial soldIndividuallySwitch = ViewBindings.findChildViewById(rootView, id);
      if (soldIndividuallySwitch == null) {
        break missingId;
      }

      id = R.id.stockManagementPanel;
      Group stockManagementPanel = ViewBindings.findChildViewById(rootView, id);
      if (stockManagementPanel == null) {
        break missingId;
      }

      return new FragmentProductInventoryBinding((ScrollView) rootView, editProductBackorders,
          editProductStockStatus, manageStockBarrier, manageStockMorePanel, manageStockSwitch,
          productSku, productStockQuantity, soldIndividuallySwitch, stockManagementPanel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
