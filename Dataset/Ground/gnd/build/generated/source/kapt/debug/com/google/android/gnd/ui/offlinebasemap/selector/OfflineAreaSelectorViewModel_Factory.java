// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.ui.offlinebasemap.selector;

import android.content.res.Resources;
import com.google.android.gnd.persistence.uuid.OfflineUuidGenerator;
import com.google.android.gnd.repository.OfflineAreaRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OfflineAreaSelectorViewModel_Factory implements Factory<OfflineAreaSelectorViewModel> {
  private final Provider<OfflineAreaRepository> offlineAreaRepositoryProvider;

  private final Provider<OfflineUuidGenerator> offlineUuidGeneratorProvider;

  private final Provider<Resources> resourcesProvider;

  public OfflineAreaSelectorViewModel_Factory(
      Provider<OfflineAreaRepository> offlineAreaRepositoryProvider,
      Provider<OfflineUuidGenerator> offlineUuidGeneratorProvider,
      Provider<Resources> resourcesProvider) {
    this.offlineAreaRepositoryProvider = offlineAreaRepositoryProvider;
    this.offlineUuidGeneratorProvider = offlineUuidGeneratorProvider;
    this.resourcesProvider = resourcesProvider;
  }

  @Override
  public OfflineAreaSelectorViewModel get() {
    return newInstance(offlineAreaRepositoryProvider.get(), offlineUuidGeneratorProvider.get(), resourcesProvider.get());
  }

  public static OfflineAreaSelectorViewModel_Factory create(
      Provider<OfflineAreaRepository> offlineAreaRepositoryProvider,
      Provider<OfflineUuidGenerator> offlineUuidGeneratorProvider,
      Provider<Resources> resourcesProvider) {
    return new OfflineAreaSelectorViewModel_Factory(offlineAreaRepositoryProvider, offlineUuidGeneratorProvider, resourcesProvider);
  }

  public static OfflineAreaSelectorViewModel newInstance(
      OfflineAreaRepository offlineAreaRepository, OfflineUuidGenerator offlineUuidGenerator,
      Resources resources) {
    return new OfflineAreaSelectorViewModel(offlineAreaRepository, offlineUuidGenerator, resources);
  }
}
