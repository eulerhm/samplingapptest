package com.google.android.gnd.model.basemap;

import androidx.annotation.NonNull;
import java.net.URL;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_BaseMap extends BaseMap {

  private final URL url;

  private final BaseMap.BaseMapType type;

  private AutoValue_BaseMap(
      URL url,
      BaseMap.BaseMapType type) {
    this.url = url;
    this.type = type;
  }

  @NonNull
  @Override
  public URL getUrl() {
    return url;
  }

  @Override
  public BaseMap.BaseMapType getType() {
    return type;
  }

  @Override
  public String toString() {
    return "BaseMap{"
        + "url=" + url + ", "
        + "type=" + type
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof BaseMap) {
      BaseMap that = (BaseMap) o;
      return this.url.equals(that.getUrl())
          && this.type.equals(that.getType());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= url.hashCode();
    h$ *= 1000003;
    h$ ^= type.hashCode();
    return h$;
  }

  static final class Builder extends BaseMap.Builder {
    private URL url;
    private BaseMap.BaseMapType type;
    Builder() {
    }
    @Override
    public BaseMap.Builder setUrl(URL url) {
      if (url == null) {
        throw new NullPointerException("Null url");
      }
      this.url = url;
      return this;
    }
    @Override
    public BaseMap.Builder setType(BaseMap.BaseMapType type) {
      if (type == null) {
        throw new NullPointerException("Null type");
      }
      this.type = type;
      return this;
    }
    @Override
    public BaseMap build() {
      String missing = "";
      if (this.url == null) {
        missing += " url";
      }
      if (this.type == null) {
        missing += " type";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_BaseMap(
          this.url,
          this.type);
    }
  }

}
