// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.ui.home.featuredetails;

import com.google.android.gnd.repository.FeatureRepository;
import com.google.android.gnd.repository.SubmissionRepository;
import com.google.android.gnd.repository.UserRepository;
import com.google.android.gnd.ui.MarkerIconFactory;
import com.google.android.gnd.ui.common.FeatureHelper;
import com.google.android.gnd.ui.util.DrawableUtil;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FeatureDetailsViewModel_Factory implements Factory<FeatureDetailsViewModel> {
  private final Provider<MarkerIconFactory> markerIconFactoryProvider;

  private final Provider<DrawableUtil> drawableUtilProvider;

  private final Provider<FeatureHelper> featureHelperProvider;

  private final Provider<FeatureRepository> featureRepositoryProvider;

  private final Provider<SubmissionRepository> submissionRepositoryProvider;

  private final Provider<UserRepository> userRepositoryProvider;

  public FeatureDetailsViewModel_Factory(Provider<MarkerIconFactory> markerIconFactoryProvider,
      Provider<DrawableUtil> drawableUtilProvider, Provider<FeatureHelper> featureHelperProvider,
      Provider<FeatureRepository> featureRepositoryProvider,
      Provider<SubmissionRepository> submissionRepositoryProvider,
      Provider<UserRepository> userRepositoryProvider) {
    this.markerIconFactoryProvider = markerIconFactoryProvider;
    this.drawableUtilProvider = drawableUtilProvider;
    this.featureHelperProvider = featureHelperProvider;
    this.featureRepositoryProvider = featureRepositoryProvider;
    this.submissionRepositoryProvider = submissionRepositoryProvider;
    this.userRepositoryProvider = userRepositoryProvider;
  }

  @Override
  public FeatureDetailsViewModel get() {
    return newInstance(markerIconFactoryProvider.get(), drawableUtilProvider.get(), featureHelperProvider.get(), featureRepositoryProvider.get(), submissionRepositoryProvider.get(), userRepositoryProvider.get());
  }

  public static FeatureDetailsViewModel_Factory create(
      Provider<MarkerIconFactory> markerIconFactoryProvider,
      Provider<DrawableUtil> drawableUtilProvider, Provider<FeatureHelper> featureHelperProvider,
      Provider<FeatureRepository> featureRepositoryProvider,
      Provider<SubmissionRepository> submissionRepositoryProvider,
      Provider<UserRepository> userRepositoryProvider) {
    return new FeatureDetailsViewModel_Factory(markerIconFactoryProvider, drawableUtilProvider, featureHelperProvider, featureRepositoryProvider, submissionRepositoryProvider, userRepositoryProvider);
  }

  public static FeatureDetailsViewModel newInstance(MarkerIconFactory markerIconFactory,
      DrawableUtil drawableUtil, FeatureHelper featureHelper, FeatureRepository featureRepository,
      SubmissionRepository submissionRepository, UserRepository userRepository) {
    return new FeatureDetailsViewModel(markerIconFactory, drawableUtil, featureHelper, featureRepository, submissionRepository, userRepository);
  }
}
