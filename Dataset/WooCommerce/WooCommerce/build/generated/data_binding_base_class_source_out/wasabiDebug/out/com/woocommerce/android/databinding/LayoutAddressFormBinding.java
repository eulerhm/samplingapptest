// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.WCMaterialOutlinedEditTextView;
import com.woocommerce.android.widgets.WCMaterialOutlinedSpinnerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutAddressFormBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final WCMaterialOutlinedEditTextView address1;

  @NonNull
  public final WCMaterialOutlinedEditTextView address2;

  @NonNull
  public final LinearLayout addressHeaderContainer;

  @NonNull
  public final MaterialTextView addressSectionHeader;

  @NonNull
  public final MaterialTextView cardHeader;

  @NonNull
  public final WCMaterialOutlinedEditTextView city;

  @NonNull
  public final WCMaterialOutlinedEditTextView company;

  @NonNull
  public final WCMaterialOutlinedSpinnerView countrySpinner;

  @NonNull
  public final LinearLayout detailsHeaderContainer;

  @NonNull
  public final WCMaterialOutlinedEditTextView email;

  @NonNull
  public final WCMaterialOutlinedEditTextView firstName;

  @NonNull
  public final WCMaterialOutlinedEditTextView lastName;

  @NonNull
  public final WCMaterialOutlinedEditTextView phone;

  @NonNull
  public final WCMaterialOutlinedEditTextView postcode;

  @NonNull
  public final WCMaterialOutlinedEditTextView stateEditText;

  @NonNull
  public final WCMaterialOutlinedSpinnerView stateSpinner;

  private LayoutAddressFormBinding(@NonNull LinearLayout rootView,
      @NonNull WCMaterialOutlinedEditTextView address1,
      @NonNull WCMaterialOutlinedEditTextView address2,
      @NonNull LinearLayout addressHeaderContainer, @NonNull MaterialTextView addressSectionHeader,
      @NonNull MaterialTextView cardHeader, @NonNull WCMaterialOutlinedEditTextView city,
      @NonNull WCMaterialOutlinedEditTextView company,
      @NonNull WCMaterialOutlinedSpinnerView countrySpinner,
      @NonNull LinearLayout detailsHeaderContainer, @NonNull WCMaterialOutlinedEditTextView email,
      @NonNull WCMaterialOutlinedEditTextView firstName,
      @NonNull WCMaterialOutlinedEditTextView lastName,
      @NonNull WCMaterialOutlinedEditTextView phone,
      @NonNull WCMaterialOutlinedEditTextView postcode,
      @NonNull WCMaterialOutlinedEditTextView stateEditText,
      @NonNull WCMaterialOutlinedSpinnerView stateSpinner) {
    this.rootView = rootView;
    this.address1 = address1;
    this.address2 = address2;
    this.addressHeaderContainer = addressHeaderContainer;
    this.addressSectionHeader = addressSectionHeader;
    this.cardHeader = cardHeader;
    this.city = city;
    this.company = company;
    this.countrySpinner = countrySpinner;
    this.detailsHeaderContainer = detailsHeaderContainer;
    this.email = email;
    this.firstName = firstName;
    this.lastName = lastName;
    this.phone = phone;
    this.postcode = postcode;
    this.stateEditText = stateEditText;
    this.stateSpinner = stateSpinner;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutAddressFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutAddressFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_address_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutAddressFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address1;
      WCMaterialOutlinedEditTextView address1 = ViewBindings.findChildViewById(rootView, id);
      if (address1 == null) {
        break missingId;
      }

      id = R.id.address2;
      WCMaterialOutlinedEditTextView address2 = ViewBindings.findChildViewById(rootView, id);
      if (address2 == null) {
        break missingId;
      }

      id = R.id.address_header_container;
      LinearLayout addressHeaderContainer = ViewBindings.findChildViewById(rootView, id);
      if (addressHeaderContainer == null) {
        break missingId;
      }

      id = R.id.address_section_header;
      MaterialTextView addressSectionHeader = ViewBindings.findChildViewById(rootView, id);
      if (addressSectionHeader == null) {
        break missingId;
      }

      id = R.id.card_header;
      MaterialTextView cardHeader = ViewBindings.findChildViewById(rootView, id);
      if (cardHeader == null) {
        break missingId;
      }

      id = R.id.city;
      WCMaterialOutlinedEditTextView city = ViewBindings.findChildViewById(rootView, id);
      if (city == null) {
        break missingId;
      }

      id = R.id.company;
      WCMaterialOutlinedEditTextView company = ViewBindings.findChildViewById(rootView, id);
      if (company == null) {
        break missingId;
      }

      id = R.id.countrySpinner;
      WCMaterialOutlinedSpinnerView countrySpinner = ViewBindings.findChildViewById(rootView, id);
      if (countrySpinner == null) {
        break missingId;
      }

      id = R.id.details_header_container;
      LinearLayout detailsHeaderContainer = ViewBindings.findChildViewById(rootView, id);
      if (detailsHeaderContainer == null) {
        break missingId;
      }

      id = R.id.email;
      WCMaterialOutlinedEditTextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.first_name;
      WCMaterialOutlinedEditTextView firstName = ViewBindings.findChildViewById(rootView, id);
      if (firstName == null) {
        break missingId;
      }

      id = R.id.last_name;
      WCMaterialOutlinedEditTextView lastName = ViewBindings.findChildViewById(rootView, id);
      if (lastName == null) {
        break missingId;
      }

      id = R.id.phone;
      WCMaterialOutlinedEditTextView phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.postcode;
      WCMaterialOutlinedEditTextView postcode = ViewBindings.findChildViewById(rootView, id);
      if (postcode == null) {
        break missingId;
      }

      id = R.id.stateEditText;
      WCMaterialOutlinedEditTextView stateEditText = ViewBindings.findChildViewById(rootView, id);
      if (stateEditText == null) {
        break missingId;
      }

      id = R.id.stateSpinner;
      WCMaterialOutlinedSpinnerView stateSpinner = ViewBindings.findChildViewById(rootView, id);
      if (stateSpinner == null) {
        break missingId;
      }

      return new LayoutAddressFormBinding((LinearLayout) rootView, address1, address2,
          addressHeaderContainer, addressSectionHeader, cardHeader, city, company, countrySpinner,
          detailsHeaderContainer, email, firstName, lastName, phone, postcode, stateEditText,
          stateSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
