// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.radiobutton.MaterialRadioButton;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class SiteCreationDomainsItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final MaterialTextView domainSuggestion;

  @NonNull
  public final MaterialRadioButton domainSuggestionRadioButton;

  @NonNull
  public final MaterialTextView domainUnavailability;

  @NonNull
  public final MaterialTextView nameSuggestion;

  @NonNull
  public final ConstraintLayout urlSuggestionContainer;

  private SiteCreationDomainsItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout container, @NonNull MaterialTextView domainSuggestion,
      @NonNull MaterialRadioButton domainSuggestionRadioButton,
      @NonNull MaterialTextView domainUnavailability, @NonNull MaterialTextView nameSuggestion,
      @NonNull ConstraintLayout urlSuggestionContainer) {
    this.rootView = rootView;
    this.container = container;
    this.domainSuggestion = domainSuggestion;
    this.domainSuggestionRadioButton = domainSuggestionRadioButton;
    this.domainUnavailability = domainUnavailability;
    this.nameSuggestion = nameSuggestion;
    this.urlSuggestionContainer = urlSuggestionContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SiteCreationDomainsItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SiteCreationDomainsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.site_creation_domains_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SiteCreationDomainsItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.domain_suggestion;
      MaterialTextView domainSuggestion = ViewBindings.findChildViewById(rootView, id);
      if (domainSuggestion == null) {
        break missingId;
      }

      id = R.id.domain_suggestion_radio_button;
      MaterialRadioButton domainSuggestionRadioButton = ViewBindings.findChildViewById(rootView, id);
      if (domainSuggestionRadioButton == null) {
        break missingId;
      }

      id = R.id.domain_unavailability;
      MaterialTextView domainUnavailability = ViewBindings.findChildViewById(rootView, id);
      if (domainUnavailability == null) {
        break missingId;
      }

      id = R.id.name_suggestion;
      MaterialTextView nameSuggestion = ViewBindings.findChildViewById(rootView, id);
      if (nameSuggestion == null) {
        break missingId;
      }

      id = R.id.url_suggestion_container;
      ConstraintLayout urlSuggestionContainer = ViewBindings.findChildViewById(rootView, id);
      if (urlSuggestionContainer == null) {
        break missingId;
      }

      return new SiteCreationDomainsItemBinding((ConstraintLayout) rootView, container,
          domainSuggestion, domainSuggestionRadioButton, domainUnavailability, nameSuggestion,
          urlSuggestionContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
