// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.persistence.local.room;

import com.google.android.gnd.persistence.local.room.dao.BaseMapDao;
import com.google.android.gnd.persistence.local.room.dao.FeatureDao;
import com.google.android.gnd.persistence.local.room.dao.FeatureMutationDao;
import com.google.android.gnd.persistence.local.room.dao.FieldDao;
import com.google.android.gnd.persistence.local.room.dao.JobDao;
import com.google.android.gnd.persistence.local.room.dao.MultipleChoiceDao;
import com.google.android.gnd.persistence.local.room.dao.OfflineAreaDao;
import com.google.android.gnd.persistence.local.room.dao.OptionDao;
import com.google.android.gnd.persistence.local.room.dao.SubmissionDao;
import com.google.android.gnd.persistence.local.room.dao.SubmissionMutationDao;
import com.google.android.gnd.persistence.local.room.dao.SurveyDao;
import com.google.android.gnd.persistence.local.room.dao.TaskDao;
import com.google.android.gnd.persistence.local.room.dao.TileSetDao;
import com.google.android.gnd.persistence.local.room.dao.UserDao;
import com.google.android.gnd.rx.Schedulers;
import com.google.android.gnd.ui.util.FileUtil;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomLocalDataStore_MembersInjector implements MembersInjector<RoomLocalDataStore> {
  private final Provider<OptionDao> optionDaoProvider;

  private final Provider<MultipleChoiceDao> multipleChoiceDaoProvider;

  private final Provider<FieldDao> fieldDaoProvider;

  private final Provider<TaskDao> taskDaoProvider;

  private final Provider<JobDao> jobDaoProvider;

  private final Provider<SurveyDao> surveyDaoProvider;

  private final Provider<FeatureDao> featureDaoProvider;

  private final Provider<FeatureMutationDao> featureMutationDaoProvider;

  private final Provider<SubmissionDao> submissionDaoProvider;

  private final Provider<SubmissionMutationDao> submissionMutationDaoProvider;

  private final Provider<TileSetDao> tileSetDaoProvider;

  private final Provider<UserDao> userDaoProvider;

  private final Provider<OfflineAreaDao> offlineAreaDaoProvider;

  private final Provider<BaseMapDao> baseMapDaoProvider;

  private final Provider<Schedulers> schedulersProvider;

  private final Provider<FileUtil> fileUtilProvider;

  public RoomLocalDataStore_MembersInjector(Provider<OptionDao> optionDaoProvider,
      Provider<MultipleChoiceDao> multipleChoiceDaoProvider, Provider<FieldDao> fieldDaoProvider,
      Provider<TaskDao> taskDaoProvider, Provider<JobDao> jobDaoProvider,
      Provider<SurveyDao> surveyDaoProvider, Provider<FeatureDao> featureDaoProvider,
      Provider<FeatureMutationDao> featureMutationDaoProvider,
      Provider<SubmissionDao> submissionDaoProvider,
      Provider<SubmissionMutationDao> submissionMutationDaoProvider,
      Provider<TileSetDao> tileSetDaoProvider, Provider<UserDao> userDaoProvider,
      Provider<OfflineAreaDao> offlineAreaDaoProvider, Provider<BaseMapDao> baseMapDaoProvider,
      Provider<Schedulers> schedulersProvider, Provider<FileUtil> fileUtilProvider) {
    this.optionDaoProvider = optionDaoProvider;
    this.multipleChoiceDaoProvider = multipleChoiceDaoProvider;
    this.fieldDaoProvider = fieldDaoProvider;
    this.taskDaoProvider = taskDaoProvider;
    this.jobDaoProvider = jobDaoProvider;
    this.surveyDaoProvider = surveyDaoProvider;
    this.featureDaoProvider = featureDaoProvider;
    this.featureMutationDaoProvider = featureMutationDaoProvider;
    this.submissionDaoProvider = submissionDaoProvider;
    this.submissionMutationDaoProvider = submissionMutationDaoProvider;
    this.tileSetDaoProvider = tileSetDaoProvider;
    this.userDaoProvider = userDaoProvider;
    this.offlineAreaDaoProvider = offlineAreaDaoProvider;
    this.baseMapDaoProvider = baseMapDaoProvider;
    this.schedulersProvider = schedulersProvider;
    this.fileUtilProvider = fileUtilProvider;
  }

  public static MembersInjector<RoomLocalDataStore> create(Provider<OptionDao> optionDaoProvider,
      Provider<MultipleChoiceDao> multipleChoiceDaoProvider, Provider<FieldDao> fieldDaoProvider,
      Provider<TaskDao> taskDaoProvider, Provider<JobDao> jobDaoProvider,
      Provider<SurveyDao> surveyDaoProvider, Provider<FeatureDao> featureDaoProvider,
      Provider<FeatureMutationDao> featureMutationDaoProvider,
      Provider<SubmissionDao> submissionDaoProvider,
      Provider<SubmissionMutationDao> submissionMutationDaoProvider,
      Provider<TileSetDao> tileSetDaoProvider, Provider<UserDao> userDaoProvider,
      Provider<OfflineAreaDao> offlineAreaDaoProvider, Provider<BaseMapDao> baseMapDaoProvider,
      Provider<Schedulers> schedulersProvider, Provider<FileUtil> fileUtilProvider) {
    return new RoomLocalDataStore_MembersInjector(optionDaoProvider, multipleChoiceDaoProvider, fieldDaoProvider, taskDaoProvider, jobDaoProvider, surveyDaoProvider, featureDaoProvider, featureMutationDaoProvider, submissionDaoProvider, submissionMutationDaoProvider, tileSetDaoProvider, userDaoProvider, offlineAreaDaoProvider, baseMapDaoProvider, schedulersProvider, fileUtilProvider);
  }

  @Override
  public void injectMembers(RoomLocalDataStore instance) {
    injectOptionDao(instance, optionDaoProvider.get());
    injectMultipleChoiceDao(instance, multipleChoiceDaoProvider.get());
    injectFieldDao(instance, fieldDaoProvider.get());
    injectTaskDao(instance, taskDaoProvider.get());
    injectJobDao(instance, jobDaoProvider.get());
    injectSurveyDao(instance, surveyDaoProvider.get());
    injectFeatureDao(instance, featureDaoProvider.get());
    injectFeatureMutationDao(instance, featureMutationDaoProvider.get());
    injectSubmissionDao(instance, submissionDaoProvider.get());
    injectSubmissionMutationDao(instance, submissionMutationDaoProvider.get());
    injectTileSetDao(instance, tileSetDaoProvider.get());
    injectUserDao(instance, userDaoProvider.get());
    injectOfflineAreaDao(instance, offlineAreaDaoProvider.get());
    injectBaseMapDao(instance, baseMapDaoProvider.get());
    injectSchedulers(instance, schedulersProvider.get());
    injectFileUtil(instance, fileUtilProvider.get());
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.optionDao")
  public static void injectOptionDao(RoomLocalDataStore instance, OptionDao optionDao) {
    instance.optionDao = optionDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.multipleChoiceDao")
  public static void injectMultipleChoiceDao(RoomLocalDataStore instance,
      MultipleChoiceDao multipleChoiceDao) {
    instance.multipleChoiceDao = multipleChoiceDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.fieldDao")
  public static void injectFieldDao(RoomLocalDataStore instance, FieldDao fieldDao) {
    instance.fieldDao = fieldDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.taskDao")
  public static void injectTaskDao(RoomLocalDataStore instance, TaskDao taskDao) {
    instance.taskDao = taskDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.jobDao")
  public static void injectJobDao(RoomLocalDataStore instance, JobDao jobDao) {
    instance.jobDao = jobDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.surveyDao")
  public static void injectSurveyDao(RoomLocalDataStore instance, SurveyDao surveyDao) {
    instance.surveyDao = surveyDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.featureDao")
  public static void injectFeatureDao(RoomLocalDataStore instance, FeatureDao featureDao) {
    instance.featureDao = featureDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.featureMutationDao")
  public static void injectFeatureMutationDao(RoomLocalDataStore instance,
      FeatureMutationDao featureMutationDao) {
    instance.featureMutationDao = featureMutationDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.submissionDao")
  public static void injectSubmissionDao(RoomLocalDataStore instance, SubmissionDao submissionDao) {
    instance.submissionDao = submissionDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.submissionMutationDao")
  public static void injectSubmissionMutationDao(RoomLocalDataStore instance,
      SubmissionMutationDao submissionMutationDao) {
    instance.submissionMutationDao = submissionMutationDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.tileSetDao")
  public static void injectTileSetDao(RoomLocalDataStore instance, TileSetDao tileSetDao) {
    instance.tileSetDao = tileSetDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.userDao")
  public static void injectUserDao(RoomLocalDataStore instance, UserDao userDao) {
    instance.userDao = userDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.offlineAreaDao")
  public static void injectOfflineAreaDao(RoomLocalDataStore instance,
      OfflineAreaDao offlineAreaDao) {
    instance.offlineAreaDao = offlineAreaDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.baseMapDao")
  public static void injectBaseMapDao(RoomLocalDataStore instance, BaseMapDao baseMapDao) {
    instance.baseMapDao = baseMapDao;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.schedulers")
  public static void injectSchedulers(RoomLocalDataStore instance, Schedulers schedulers) {
    instance.schedulers = schedulers;
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.local.room.RoomLocalDataStore.fileUtil")
  public static void injectFileUtil(RoomLocalDataStore instance, FileUtil fileUtil) {
    instance.fileUtil = fileUtil;
  }
}
