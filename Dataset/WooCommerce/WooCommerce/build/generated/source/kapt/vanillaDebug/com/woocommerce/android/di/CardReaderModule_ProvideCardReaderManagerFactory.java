// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.di;

import android.app.Application;
import com.woocommerce.android.cardreader.CardReaderManager;
import com.woocommerce.android.cardreader.CardReaderStore;
import com.woocommerce.android.cardreader.LogWrapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CardReaderModule_ProvideCardReaderManagerFactory implements Factory<CardReaderManager> {
  private final CardReaderModule module;

  private final Provider<Application> applicationProvider;

  private final Provider<CardReaderStore> cardReaderStoreProvider;

  private final Provider<LogWrapper> logWrapperProvider;

  public CardReaderModule_ProvideCardReaderManagerFactory(CardReaderModule module,
      Provider<Application> applicationProvider, Provider<CardReaderStore> cardReaderStoreProvider,
      Provider<LogWrapper> logWrapperProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
    this.cardReaderStoreProvider = cardReaderStoreProvider;
    this.logWrapperProvider = logWrapperProvider;
  }

  @Override
  public CardReaderManager get() {
    return provideCardReaderManager(module, applicationProvider.get(), cardReaderStoreProvider.get(), logWrapperProvider.get());
  }

  public static CardReaderModule_ProvideCardReaderManagerFactory create(CardReaderModule module,
      Provider<Application> applicationProvider, Provider<CardReaderStore> cardReaderStoreProvider,
      Provider<LogWrapper> logWrapperProvider) {
    return new CardReaderModule_ProvideCardReaderManagerFactory(module, applicationProvider, cardReaderStoreProvider, logWrapperProvider);
  }

  public static CardReaderManager provideCardReaderManager(CardReaderModule instance,
      Application application, CardReaderStore cardReaderStore, LogWrapper logWrapper) {
    return Preconditions.checkNotNullFromProvides(instance.provideCardReaderManager(application, cardReaderStore, logWrapper));
  }
}
