// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.system;

import android.content.res.Resources;
import android.location.Geocoder;
import com.google.android.gnd.rx.Schedulers;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GeocodingManager_Factory implements Factory<GeocodingManager> {
  private final Provider<Geocoder> geocoderProvider;

  private final Provider<Schedulers> schedulersProvider;

  private final Provider<Resources> resourcesProvider;

  public GeocodingManager_Factory(Provider<Geocoder> geocoderProvider,
      Provider<Schedulers> schedulersProvider, Provider<Resources> resourcesProvider) {
    this.geocoderProvider = geocoderProvider;
    this.schedulersProvider = schedulersProvider;
    this.resourcesProvider = resourcesProvider;
  }

  @Override
  public GeocodingManager get() {
    return newInstance(geocoderProvider.get(), schedulersProvider.get(), resourcesProvider.get());
  }

  public static GeocodingManager_Factory create(Provider<Geocoder> geocoderProvider,
      Provider<Schedulers> schedulersProvider, Provider<Resources> resourcesProvider) {
    return new GeocodingManager_Factory(geocoderProvider, schedulersProvider, resourcesProvider);
  }

  public static GeocodingManager newInstance(Geocoder geocoder, Schedulers schedulers,
      Resources resources) {
    return new GeocodingManager(geocoder, schedulers, resources);
  }
}
