// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.ui.common;

import com.google.android.gnd.ui.map.MapFragment;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AbstractMapViewerFragment_MembersInjector implements MembersInjector<AbstractMapViewerFragment> {
  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  private final Provider<MapFragment> mapFragmentProvider;

  public AbstractMapViewerFragment_MembersInjector(
      Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<MapFragment> mapFragmentProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.mapFragmentProvider = mapFragmentProvider;
  }

  public static MembersInjector<AbstractMapViewerFragment> create(
      Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<MapFragment> mapFragmentProvider) {
    return new AbstractMapViewerFragment_MembersInjector(viewModelFactoryProvider, mapFragmentProvider);
  }

  @Override
  public void injectMembers(AbstractMapViewerFragment instance) {
    AbstractFragment_MembersInjector.injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectMapFragment(instance, mapFragmentProvider.get());
  }

  @InjectedFieldSignature("com.google.android.gnd.ui.common.AbstractMapViewerFragment.mapFragment")
  public static void injectMapFragment(AbstractMapViewerFragment instance,
      MapFragment mapFragment) {
    instance.mapFragment = mapFragment;
  }
}
