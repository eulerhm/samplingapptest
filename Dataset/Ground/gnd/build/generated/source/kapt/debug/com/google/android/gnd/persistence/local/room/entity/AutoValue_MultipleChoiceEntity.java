package com.google.android.gnd.persistence.local.room.entity;

import androidx.annotation.NonNull;
import androidx.room.ColumnInfo;
import androidx.room.PrimaryKey;
import com.google.android.gnd.persistence.local.room.models.MultipleChoiceEntityType;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_MultipleChoiceEntity extends MultipleChoiceEntity {

  @NonNull
  @ColumnInfo(name = "type")
  private final MultipleChoiceEntityType type;

  @PrimaryKey
  @NonNull
  @ColumnInfo(name = "field_id")
  private final String fieldId;

  private AutoValue_MultipleChoiceEntity(
      MultipleChoiceEntityType type,
      String fieldId) {
    this.type = type;
    this.fieldId = fieldId;
  }

  @NonNull
  @ColumnInfo(name = "type")
  @Override
  public MultipleChoiceEntityType getType() {
    return type;
  }

  @PrimaryKey
  @NonNull
  @ColumnInfo(name = "field_id")
  @Override
  public String getFieldId() {
    return fieldId;
  }

  @Override
  public String toString() {
    return "MultipleChoiceEntity{"
        + "type=" + type + ", "
        + "fieldId=" + fieldId
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof MultipleChoiceEntity) {
      MultipleChoiceEntity that = (MultipleChoiceEntity) o;
      return this.type.equals(that.getType())
          && this.fieldId.equals(that.getFieldId());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= type.hashCode();
    h$ *= 1000003;
    h$ ^= fieldId.hashCode();
    return h$;
  }

  static final class Builder extends MultipleChoiceEntity.Builder {
    private MultipleChoiceEntityType type;
    private String fieldId;
    Builder() {
    }
    @Override
    public MultipleChoiceEntity.Builder setType(MultipleChoiceEntityType type) {
      if (type == null) {
        throw new NullPointerException("Null type");
      }
      this.type = type;
      return this;
    }
    @Override
    public MultipleChoiceEntity.Builder setFieldId(String fieldId) {
      if (fieldId == null) {
        throw new NullPointerException("Null fieldId");
      }
      this.fieldId = fieldId;
      return this;
    }
    @Override
    public MultipleChoiceEntity build() {
      String missing = "";
      if (this.type == null) {
        missing += " type";
      }
      if (this.fieldId == null) {
        missing += " fieldId";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_MultipleChoiceEntity(
          this.type,
          this.fieldId);
    }
  }

}
