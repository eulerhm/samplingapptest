// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.motion.widget.MotionLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutOrderCreationCustomerInfoBinding implements ViewBinding {
  @NonNull
  private final MotionLayout rootView;

  @NonNull
  public final TextView billingAddressDetails;

  @NonNull
  public final TextView billingHeader;

  @NonNull
  public final ImageView customerInfoViewMoreButtonImage;

  @NonNull
  public final Button customerInfoViewMoreButtonTitle;

  @NonNull
  public final TextView email;

  @NonNull
  public final TextView name;

  @NonNull
  public final View nameDivider;

  @NonNull
  public final LinearLayoutCompat nameEmail;

  @NonNull
  public final TextView shippingAddressDetails;

  @NonNull
  public final View shippingDivider;

  @NonNull
  public final TextView shippingHeader;

  private LayoutOrderCreationCustomerInfoBinding(@NonNull MotionLayout rootView,
      @NonNull TextView billingAddressDetails, @NonNull TextView billingHeader,
      @NonNull ImageView customerInfoViewMoreButtonImage,
      @NonNull Button customerInfoViewMoreButtonTitle, @NonNull TextView email,
      @NonNull TextView name, @NonNull View nameDivider, @NonNull LinearLayoutCompat nameEmail,
      @NonNull TextView shippingAddressDetails, @NonNull View shippingDivider,
      @NonNull TextView shippingHeader) {
    this.rootView = rootView;
    this.billingAddressDetails = billingAddressDetails;
    this.billingHeader = billingHeader;
    this.customerInfoViewMoreButtonImage = customerInfoViewMoreButtonImage;
    this.customerInfoViewMoreButtonTitle = customerInfoViewMoreButtonTitle;
    this.email = email;
    this.name = name;
    this.nameDivider = nameDivider;
    this.nameEmail = nameEmail;
    this.shippingAddressDetails = shippingAddressDetails;
    this.shippingDivider = shippingDivider;
    this.shippingHeader = shippingHeader;
  }

  @Override
  @NonNull
  public MotionLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutOrderCreationCustomerInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutOrderCreationCustomerInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_order_creation_customer_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutOrderCreationCustomerInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.billing_address_details;
      TextView billingAddressDetails = ViewBindings.findChildViewById(rootView, id);
      if (billingAddressDetails == null) {
        break missingId;
      }

      id = R.id.billing_header;
      TextView billingHeader = ViewBindings.findChildViewById(rootView, id);
      if (billingHeader == null) {
        break missingId;
      }

      id = R.id.customerInfo_viewMoreButtonImage;
      ImageView customerInfoViewMoreButtonImage = ViewBindings.findChildViewById(rootView, id);
      if (customerInfoViewMoreButtonImage == null) {
        break missingId;
      }

      id = R.id.customerInfo_viewMoreButtonTitle;
      Button customerInfoViewMoreButtonTitle = ViewBindings.findChildViewById(rootView, id);
      if (customerInfoViewMoreButtonTitle == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.name_divider;
      View nameDivider = ViewBindings.findChildViewById(rootView, id);
      if (nameDivider == null) {
        break missingId;
      }

      id = R.id.name_email;
      LinearLayoutCompat nameEmail = ViewBindings.findChildViewById(rootView, id);
      if (nameEmail == null) {
        break missingId;
      }

      id = R.id.shipping_address_details;
      TextView shippingAddressDetails = ViewBindings.findChildViewById(rootView, id);
      if (shippingAddressDetails == null) {
        break missingId;
      }

      id = R.id.shipping_divider;
      View shippingDivider = ViewBindings.findChildViewById(rootView, id);
      if (shippingDivider == null) {
        break missingId;
      }

      id = R.id.shipping_header;
      TextView shippingHeader = ViewBindings.findChildViewById(rootView, id);
      if (shippingHeader == null) {
        break missingId;
      }

      return new LayoutOrderCreationCustomerInfoBinding((MotionLayout) rootView,
          billingAddressDetails, billingHeader, customerInfoViewMoreButtonImage,
          customerInfoViewMoreButtonTitle, email, name, nameDivider, nameEmail,
          shippingAddressDetails, shippingDivider, shippingHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
