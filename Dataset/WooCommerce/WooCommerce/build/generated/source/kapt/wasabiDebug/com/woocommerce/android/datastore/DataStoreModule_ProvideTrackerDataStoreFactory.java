// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.datastore;

import android.content.Context;
import androidx.datastore.core.DataStore;
import androidx.datastore.preferences.core.Preferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineScope;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataStoreModule_ProvideTrackerDataStoreFactory implements Factory<DataStore<Preferences>> {
  private final DataStoreModule module;

  private final Provider<Context> appContextProvider;

  private final Provider<CoroutineScope> appCoroutineScopeProvider;

  public DataStoreModule_ProvideTrackerDataStoreFactory(DataStoreModule module,
      Provider<Context> appContextProvider, Provider<CoroutineScope> appCoroutineScopeProvider) {
    this.module = module;
    this.appContextProvider = appContextProvider;
    this.appCoroutineScopeProvider = appCoroutineScopeProvider;
  }

  @Override
  public DataStore<Preferences> get() {
    return provideTrackerDataStore(module, appContextProvider.get(), appCoroutineScopeProvider.get());
  }

  public static DataStoreModule_ProvideTrackerDataStoreFactory create(DataStoreModule module,
      Provider<Context> appContextProvider, Provider<CoroutineScope> appCoroutineScopeProvider) {
    return new DataStoreModule_ProvideTrackerDataStoreFactory(module, appContextProvider, appCoroutineScopeProvider);
  }

  public static DataStore<Preferences> provideTrackerDataStore(DataStoreModule instance,
      Context appContext, CoroutineScope appCoroutineScope) {
    return Preconditions.checkNotNullFromProvides(instance.provideTrackerDataStore(appContext, appCoroutineScope));
  }
}
