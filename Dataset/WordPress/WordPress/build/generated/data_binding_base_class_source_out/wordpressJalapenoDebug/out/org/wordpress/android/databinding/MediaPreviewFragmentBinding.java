// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.chrisbanes.photoview.PhotoView;
import com.google.android.exoplayer2.ui.PlayerControlView;
import com.google.android.exoplayer2.ui.PlayerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class MediaPreviewFragmentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final PlayerControlView controls;

  @NonNull
  public final RelativeLayout frameAudio;

  @NonNull
  public final FrameLayout frameVideo;

  @NonNull
  public final ImageView imageAudio;

  @NonNull
  public final PhotoView imagePreview;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final TextView textAudioTitle;

  @NonNull
  public final TextView textError;

  @NonNull
  public final PlayerView videoPreview;

  private MediaPreviewFragmentBinding(@NonNull RelativeLayout rootView,
      @NonNull PlayerControlView controls, @NonNull RelativeLayout frameAudio,
      @NonNull FrameLayout frameVideo, @NonNull ImageView imageAudio,
      @NonNull PhotoView imagePreview, @NonNull ProgressBar progress,
      @NonNull TextView textAudioTitle, @NonNull TextView textError,
      @NonNull PlayerView videoPreview) {
    this.rootView = rootView;
    this.controls = controls;
    this.frameAudio = frameAudio;
    this.frameVideo = frameVideo;
    this.imageAudio = imageAudio;
    this.imagePreview = imagePreview;
    this.progress = progress;
    this.textAudioTitle = textAudioTitle;
    this.textError = textError;
    this.videoPreview = videoPreview;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MediaPreviewFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MediaPreviewFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.media_preview_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MediaPreviewFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.controls;
      PlayerControlView controls = ViewBindings.findChildViewById(rootView, id);
      if (controls == null) {
        break missingId;
      }

      id = R.id.frame_audio;
      RelativeLayout frameAudio = ViewBindings.findChildViewById(rootView, id);
      if (frameAudio == null) {
        break missingId;
      }

      id = R.id.frame_video;
      FrameLayout frameVideo = ViewBindings.findChildViewById(rootView, id);
      if (frameVideo == null) {
        break missingId;
      }

      id = R.id.image_audio;
      ImageView imageAudio = ViewBindings.findChildViewById(rootView, id);
      if (imageAudio == null) {
        break missingId;
      }

      id = R.id.image_preview;
      PhotoView imagePreview = ViewBindings.findChildViewById(rootView, id);
      if (imagePreview == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.text_audio_title;
      TextView textAudioTitle = ViewBindings.findChildViewById(rootView, id);
      if (textAudioTitle == null) {
        break missingId;
      }

      id = R.id.text_error;
      TextView textError = ViewBindings.findChildViewById(rootView, id);
      if (textError == null) {
        break missingId;
      }

      id = R.id.video_preview;
      PlayerView videoPreview = ViewBindings.findChildViewById(rootView, id);
      if (videoPreview == null) {
        break missingId;
      }

      return new MediaPreviewFragmentBinding((RelativeLayout) rootView, controls, frameAudio,
          frameVideo, imageAudio, imagePreview, progress, textAudioTitle, textError, videoPreview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
