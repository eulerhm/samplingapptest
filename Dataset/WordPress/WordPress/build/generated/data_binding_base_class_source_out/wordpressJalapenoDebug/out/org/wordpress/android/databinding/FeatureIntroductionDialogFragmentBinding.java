// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class FeatureIntroductionDialogFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialCardView bloggingPromptsOnboadingButtonContainer;

  @NonNull
  public final ImageButton closeButton;

  @NonNull
  public final FrameLayout contentContainer;

  @NonNull
  public final NestedScrollView contentContainerScroll;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final ImageView headerIcon;

  @NonNull
  public final TextView headerTitle;

  @NonNull
  public final MaterialButton primaryButton;

  @NonNull
  public final MaterialButton secondaryButton;

  @NonNull
  public final ConstraintLayout toolbarContainer;

  @NonNull
  public final ConstraintLayout topBarContainer;

  private FeatureIntroductionDialogFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialCardView bloggingPromptsOnboadingButtonContainer,
      @NonNull ImageButton closeButton, @NonNull FrameLayout contentContainer,
      @NonNull NestedScrollView contentContainerScroll,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull ImageView headerIcon,
      @NonNull TextView headerTitle, @NonNull MaterialButton primaryButton,
      @NonNull MaterialButton secondaryButton, @NonNull ConstraintLayout toolbarContainer,
      @NonNull ConstraintLayout topBarContainer) {
    this.rootView = rootView;
    this.bloggingPromptsOnboadingButtonContainer = bloggingPromptsOnboadingButtonContainer;
    this.closeButton = closeButton;
    this.contentContainer = contentContainer;
    this.contentContainerScroll = contentContainerScroll;
    this.coordinatorLayout = coordinatorLayout;
    this.headerIcon = headerIcon;
    this.headerTitle = headerTitle;
    this.primaryButton = primaryButton;
    this.secondaryButton = secondaryButton;
    this.toolbarContainer = toolbarContainer;
    this.topBarContainer = topBarContainer;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FeatureIntroductionDialogFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FeatureIntroductionDialogFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.feature_introduction_dialog_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FeatureIntroductionDialogFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blogging_prompts_onboading_button_container;
      MaterialCardView bloggingPromptsOnboadingButtonContainer = ViewBindings.findChildViewById(rootView, id);
      if (bloggingPromptsOnboadingButtonContainer == null) {
        break missingId;
      }

      id = R.id.close_button;
      ImageButton closeButton = ViewBindings.findChildViewById(rootView, id);
      if (closeButton == null) {
        break missingId;
      }

      id = R.id.content_container;
      FrameLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.content_container_scroll;
      NestedScrollView contentContainerScroll = ViewBindings.findChildViewById(rootView, id);
      if (contentContainerScroll == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.header_icon;
      ImageView headerIcon = ViewBindings.findChildViewById(rootView, id);
      if (headerIcon == null) {
        break missingId;
      }

      id = R.id.header_title;
      TextView headerTitle = ViewBindings.findChildViewById(rootView, id);
      if (headerTitle == null) {
        break missingId;
      }

      id = R.id.primary_button;
      MaterialButton primaryButton = ViewBindings.findChildViewById(rootView, id);
      if (primaryButton == null) {
        break missingId;
      }

      id = R.id.secondary_button;
      MaterialButton secondaryButton = ViewBindings.findChildViewById(rootView, id);
      if (secondaryButton == null) {
        break missingId;
      }

      id = R.id.toolbar_container;
      ConstraintLayout toolbarContainer = ViewBindings.findChildViewById(rootView, id);
      if (toolbarContainer == null) {
        break missingId;
      }

      id = R.id.top_bar_container;
      ConstraintLayout topBarContainer = ViewBindings.findChildViewById(rootView, id);
      if (topBarContainer == null) {
        break missingId;
      }

      return new FeatureIntroductionDialogFragmentBinding((CoordinatorLayout) rootView,
          bloggingPromptsOnboadingButtonContainer, closeButton, contentContainer,
          contentContainerScroll, coordinatorLayout, headerIcon, headerTitle, primaryButton,
          secondaryButton, toolbarContainer, topBarContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
