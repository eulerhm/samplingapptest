// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.publicize.ConnectButton;
import org.wordpress.android.widgets.WPTextView;

public final class PublicizeListitemConnectionBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ConnectButton buttonConnect;

  @NonNull
  public final View divider;

  @NonNull
  public final ImageView imageAvatar;

  @NonNull
  public final WPTextView textUser;

  private PublicizeListitemConnectionBinding(@NonNull RelativeLayout rootView,
      @NonNull ConnectButton buttonConnect, @NonNull View divider, @NonNull ImageView imageAvatar,
      @NonNull WPTextView textUser) {
    this.rootView = rootView;
    this.buttonConnect = buttonConnect;
    this.divider = divider;
    this.imageAvatar = imageAvatar;
    this.textUser = textUser;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PublicizeListitemConnectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PublicizeListitemConnectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.publicize_listitem_connection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PublicizeListitemConnectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_connect;
      ConnectButton buttonConnect = ViewBindings.findChildViewById(rootView, id);
      if (buttonConnect == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.image_avatar;
      ImageView imageAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imageAvatar == null) {
        break missingId;
      }

      id = R.id.text_user;
      WPTextView textUser = ViewBindings.findChildViewById(rootView, id);
      if (textUser == null) {
        break missingId;
      }

      return new PublicizeListitemConnectionBinding((RelativeLayout) rootView, buttonConnect,
          divider, imageAvatar, textUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
