// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class NotificationsSettingsSwitchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final View notificationsListDivider;

  @NonNull
  public final SwitchCompat notificationsSwitch;

  @NonNull
  public final MaterialTextView notificationsSwitchSummary;

  @NonNull
  public final MaterialTextView notificationsSwitchTitle;

  @NonNull
  public final LinearLayout rowContainer;

  private NotificationsSettingsSwitchBinding(@NonNull LinearLayout rootView,
      @NonNull View notificationsListDivider, @NonNull SwitchCompat notificationsSwitch,
      @NonNull MaterialTextView notificationsSwitchSummary,
      @NonNull MaterialTextView notificationsSwitchTitle, @NonNull LinearLayout rowContainer) {
    this.rootView = rootView;
    this.notificationsListDivider = notificationsListDivider;
    this.notificationsSwitch = notificationsSwitch;
    this.notificationsSwitchSummary = notificationsSwitchSummary;
    this.notificationsSwitchTitle = notificationsSwitchTitle;
    this.rowContainer = rowContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationsSettingsSwitchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotificationsSettingsSwitchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notifications_settings_switch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotificationsSettingsSwitchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.notifications_list_divider;
      View notificationsListDivider = ViewBindings.findChildViewById(rootView, id);
      if (notificationsListDivider == null) {
        break missingId;
      }

      id = R.id.notifications_switch;
      SwitchCompat notificationsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (notificationsSwitch == null) {
        break missingId;
      }

      id = R.id.notifications_switch_summary;
      MaterialTextView notificationsSwitchSummary = ViewBindings.findChildViewById(rootView, id);
      if (notificationsSwitchSummary == null) {
        break missingId;
      }

      id = R.id.notifications_switch_title;
      MaterialTextView notificationsSwitchTitle = ViewBindings.findChildViewById(rootView, id);
      if (notificationsSwitchTitle == null) {
        break missingId;
      }

      id = R.id.row_container;
      LinearLayout rowContainer = ViewBindings.findChildViewById(rootView, id);
      if (rowContainer == null) {
        break missingId;
      }

      return new NotificationsSettingsSwitchBinding((LinearLayout) rootView,
          notificationsListDivider, notificationsSwitch, notificationsSwitchSummary,
          notificationsSwitchTitle, rowContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
