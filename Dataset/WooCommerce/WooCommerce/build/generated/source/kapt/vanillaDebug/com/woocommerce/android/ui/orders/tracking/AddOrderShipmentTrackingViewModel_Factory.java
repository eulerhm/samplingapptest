// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.orders.tracking;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.tools.NetworkStatus;
import com.woocommerce.android.ui.orders.details.OrderDetailRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddOrderShipmentTrackingViewModel_Factory implements Factory<AddOrderShipmentTrackingViewModel> {
  private final Provider<SavedStateHandle> savedStateProvider;

  private final Provider<NetworkStatus> networkStatusProvider;

  private final Provider<OrderDetailRepository> orderDetailRepositoryProvider;

  public AddOrderShipmentTrackingViewModel_Factory(Provider<SavedStateHandle> savedStateProvider,
      Provider<NetworkStatus> networkStatusProvider,
      Provider<OrderDetailRepository> orderDetailRepositoryProvider) {
    this.savedStateProvider = savedStateProvider;
    this.networkStatusProvider = networkStatusProvider;
    this.orderDetailRepositoryProvider = orderDetailRepositoryProvider;
  }

  @Override
  public AddOrderShipmentTrackingViewModel get() {
    return newInstance(savedStateProvider.get(), networkStatusProvider.get(), orderDetailRepositoryProvider.get());
  }

  public static AddOrderShipmentTrackingViewModel_Factory create(
      Provider<SavedStateHandle> savedStateProvider, Provider<NetworkStatus> networkStatusProvider,
      Provider<OrderDetailRepository> orderDetailRepositoryProvider) {
    return new AddOrderShipmentTrackingViewModel_Factory(savedStateProvider, networkStatusProvider, orderDetailRepositoryProvider);
  }

  public static AddOrderShipmentTrackingViewModel newInstance(SavedStateHandle savedState,
      NetworkStatus networkStatus, OrderDetailRepository orderDetailRepository) {
    return new AddOrderShipmentTrackingViewModel(savedState, networkStatus, orderDetailRepository);
  }
}
