// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrderDetailPaymentInfoBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final MaterialButton paymentInfoCollectCardPresentPaymentButton;

  @NonNull
  public final MaterialTextView paymentInfoDiscountItems;

  @NonNull
  public final LinearLayout paymentInfoDiscountSection;

  @NonNull
  public final MaterialTextView paymentInfoDiscountTotal;

  @NonNull
  public final MaterialTextView paymentInfoFees;

  @NonNull
  public final LinearLayout paymentInfoFeesSection;

  @NonNull
  public final MaterialButton paymentInfoIssueRefundButton;

  @NonNull
  public final MaterialTextView paymentInfoLblDiscount;

  @NonNull
  public final MaterialTextView paymentInfoLblFees;

  @NonNull
  public final MaterialTextView paymentInfoLblNet;

  @NonNull
  public final MaterialTextView paymentInfoLblPaid;

  @NonNull
  public final MaterialTextView paymentInfoLblProductsTotal;

  @NonNull
  public final MaterialTextView paymentInfoLblRefund;

  @NonNull
  public final MaterialTextView paymentInfoLblShipping;

  @NonNull
  public final MaterialTextView paymentInfoLblTaxes;

  @NonNull
  public final MaterialTextView paymentInfoLblTitle;

  @NonNull
  public final MaterialTextView paymentInfoLblTotal;

  @NonNull
  public final MaterialTextView paymentInfoNewTotal;

  @NonNull
  public final MaterialTextView paymentInfoPaid;

  @NonNull
  public final LinearLayout paymentInfoPaidSection;

  @NonNull
  public final MaterialTextView paymentInfoPaymentMsg;

  @NonNull
  public final MaterialTextView paymentInfoPrintingInstructions;

  @NonNull
  public final MaterialTextView paymentInfoProductsTotal;

  @NonNull
  public final LinearLayout paymentInfoRefundSection;

  @NonNull
  public final MaterialTextView paymentInfoRefundTotal;

  @NonNull
  public final LinearLayout paymentInfoRefundTotalSection;

  @NonNull
  public final RecyclerView paymentInfoRefunds;

  @NonNull
  public final MaterialButton paymentInfoSeeReceiptButton;

  @NonNull
  public final MaterialTextView paymentInfoShippingTotal;

  @NonNull
  public final MaterialTextView paymentInfoTaxesTotal;

  @NonNull
  public final MaterialTextView paymentInfoTotal;

  private OrderDetailPaymentInfoBinding(@NonNull View rootView,
      @NonNull MaterialButton paymentInfoCollectCardPresentPaymentButton,
      @NonNull MaterialTextView paymentInfoDiscountItems,
      @NonNull LinearLayout paymentInfoDiscountSection,
      @NonNull MaterialTextView paymentInfoDiscountTotal, @NonNull MaterialTextView paymentInfoFees,
      @NonNull LinearLayout paymentInfoFeesSection,
      @NonNull MaterialButton paymentInfoIssueRefundButton,
      @NonNull MaterialTextView paymentInfoLblDiscount,
      @NonNull MaterialTextView paymentInfoLblFees, @NonNull MaterialTextView paymentInfoLblNet,
      @NonNull MaterialTextView paymentInfoLblPaid,
      @NonNull MaterialTextView paymentInfoLblProductsTotal,
      @NonNull MaterialTextView paymentInfoLblRefund,
      @NonNull MaterialTextView paymentInfoLblShipping,
      @NonNull MaterialTextView paymentInfoLblTaxes, @NonNull MaterialTextView paymentInfoLblTitle,
      @NonNull MaterialTextView paymentInfoLblTotal, @NonNull MaterialTextView paymentInfoNewTotal,
      @NonNull MaterialTextView paymentInfoPaid, @NonNull LinearLayout paymentInfoPaidSection,
      @NonNull MaterialTextView paymentInfoPaymentMsg,
      @NonNull MaterialTextView paymentInfoPrintingInstructions,
      @NonNull MaterialTextView paymentInfoProductsTotal,
      @NonNull LinearLayout paymentInfoRefundSection,
      @NonNull MaterialTextView paymentInfoRefundTotal,
      @NonNull LinearLayout paymentInfoRefundTotalSection, @NonNull RecyclerView paymentInfoRefunds,
      @NonNull MaterialButton paymentInfoSeeReceiptButton,
      @NonNull MaterialTextView paymentInfoShippingTotal,
      @NonNull MaterialTextView paymentInfoTaxesTotal, @NonNull MaterialTextView paymentInfoTotal) {
    this.rootView = rootView;
    this.paymentInfoCollectCardPresentPaymentButton = paymentInfoCollectCardPresentPaymentButton;
    this.paymentInfoDiscountItems = paymentInfoDiscountItems;
    this.paymentInfoDiscountSection = paymentInfoDiscountSection;
    this.paymentInfoDiscountTotal = paymentInfoDiscountTotal;
    this.paymentInfoFees = paymentInfoFees;
    this.paymentInfoFeesSection = paymentInfoFeesSection;
    this.paymentInfoIssueRefundButton = paymentInfoIssueRefundButton;
    this.paymentInfoLblDiscount = paymentInfoLblDiscount;
    this.paymentInfoLblFees = paymentInfoLblFees;
    this.paymentInfoLblNet = paymentInfoLblNet;
    this.paymentInfoLblPaid = paymentInfoLblPaid;
    this.paymentInfoLblProductsTotal = paymentInfoLblProductsTotal;
    this.paymentInfoLblRefund = paymentInfoLblRefund;
    this.paymentInfoLblShipping = paymentInfoLblShipping;
    this.paymentInfoLblTaxes = paymentInfoLblTaxes;
    this.paymentInfoLblTitle = paymentInfoLblTitle;
    this.paymentInfoLblTotal = paymentInfoLblTotal;
    this.paymentInfoNewTotal = paymentInfoNewTotal;
    this.paymentInfoPaid = paymentInfoPaid;
    this.paymentInfoPaidSection = paymentInfoPaidSection;
    this.paymentInfoPaymentMsg = paymentInfoPaymentMsg;
    this.paymentInfoPrintingInstructions = paymentInfoPrintingInstructions;
    this.paymentInfoProductsTotal = paymentInfoProductsTotal;
    this.paymentInfoRefundSection = paymentInfoRefundSection;
    this.paymentInfoRefundTotal = paymentInfoRefundTotal;
    this.paymentInfoRefundTotalSection = paymentInfoRefundTotalSection;
    this.paymentInfoRefunds = paymentInfoRefunds;
    this.paymentInfoSeeReceiptButton = paymentInfoSeeReceiptButton;
    this.paymentInfoShippingTotal = paymentInfoShippingTotal;
    this.paymentInfoTaxesTotal = paymentInfoTaxesTotal;
    this.paymentInfoTotal = paymentInfoTotal;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static OrderDetailPaymentInfoBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.order_detail_payment_info, parent);
    return bind(parent);
  }

  @NonNull
  public static OrderDetailPaymentInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.paymentInfo_collectCardPresentPaymentButton;
      MaterialButton paymentInfoCollectCardPresentPaymentButton = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoCollectCardPresentPaymentButton == null) {
        break missingId;
      }

      id = R.id.paymentInfo_discountItems;
      MaterialTextView paymentInfoDiscountItems = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoDiscountItems == null) {
        break missingId;
      }

      id = R.id.paymentInfo_discountSection;
      LinearLayout paymentInfoDiscountSection = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoDiscountSection == null) {
        break missingId;
      }

      id = R.id.paymentInfo_discountTotal;
      MaterialTextView paymentInfoDiscountTotal = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoDiscountTotal == null) {
        break missingId;
      }

      id = R.id.paymentInfo_Fees;
      MaterialTextView paymentInfoFees = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoFees == null) {
        break missingId;
      }

      id = R.id.paymentInfo_feesSection;
      LinearLayout paymentInfoFeesSection = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoFeesSection == null) {
        break missingId;
      }

      id = R.id.paymentInfo_issueRefundButton;
      MaterialButton paymentInfoIssueRefundButton = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoIssueRefundButton == null) {
        break missingId;
      }

      id = R.id.paymentInfo_lblDiscount;
      MaterialTextView paymentInfoLblDiscount = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoLblDiscount == null) {
        break missingId;
      }

      id = R.id.paymentInfo_lblFees;
      MaterialTextView paymentInfoLblFees = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoLblFees == null) {
        break missingId;
      }

      id = R.id.paymentInfo_lblNet;
      MaterialTextView paymentInfoLblNet = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoLblNet == null) {
        break missingId;
      }

      id = R.id.paymentInfo_lblPaid;
      MaterialTextView paymentInfoLblPaid = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoLblPaid == null) {
        break missingId;
      }

      id = R.id.paymentInfo_lblProductsTotal;
      MaterialTextView paymentInfoLblProductsTotal = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoLblProductsTotal == null) {
        break missingId;
      }

      id = R.id.paymentInfo_lblRefund;
      MaterialTextView paymentInfoLblRefund = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoLblRefund == null) {
        break missingId;
      }

      id = R.id.paymentInfo_lblShipping;
      MaterialTextView paymentInfoLblShipping = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoLblShipping == null) {
        break missingId;
      }

      id = R.id.paymentInfo_lblTaxes;
      MaterialTextView paymentInfoLblTaxes = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoLblTaxes == null) {
        break missingId;
      }

      id = R.id.paymentInfo_lblTitle;
      MaterialTextView paymentInfoLblTitle = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoLblTitle == null) {
        break missingId;
      }

      id = R.id.paymentInfo_lblTotal;
      MaterialTextView paymentInfoLblTotal = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoLblTotal == null) {
        break missingId;
      }

      id = R.id.paymentInfo_newTotal;
      MaterialTextView paymentInfoNewTotal = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoNewTotal == null) {
        break missingId;
      }

      id = R.id.paymentInfo_paid;
      MaterialTextView paymentInfoPaid = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoPaid == null) {
        break missingId;
      }

      id = R.id.paymentInfo_paidSection;
      LinearLayout paymentInfoPaidSection = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoPaidSection == null) {
        break missingId;
      }

      id = R.id.paymentInfo_paymentMsg;
      MaterialTextView paymentInfoPaymentMsg = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoPaymentMsg == null) {
        break missingId;
      }

      id = R.id.paymentInfo_printingInstructions;
      MaterialTextView paymentInfoPrintingInstructions = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoPrintingInstructions == null) {
        break missingId;
      }

      id = R.id.paymentInfo_productsTotal;
      MaterialTextView paymentInfoProductsTotal = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoProductsTotal == null) {
        break missingId;
      }

      id = R.id.paymentInfo_refundSection;
      LinearLayout paymentInfoRefundSection = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoRefundSection == null) {
        break missingId;
      }

      id = R.id.paymentInfo_refundTotal;
      MaterialTextView paymentInfoRefundTotal = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoRefundTotal == null) {
        break missingId;
      }

      id = R.id.paymentInfo_refundTotalSection;
      LinearLayout paymentInfoRefundTotalSection = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoRefundTotalSection == null) {
        break missingId;
      }

      id = R.id.paymentInfo_refunds;
      RecyclerView paymentInfoRefunds = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoRefunds == null) {
        break missingId;
      }

      id = R.id.paymentInfo_seeReceiptButton;
      MaterialButton paymentInfoSeeReceiptButton = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoSeeReceiptButton == null) {
        break missingId;
      }

      id = R.id.paymentInfo_shippingTotal;
      MaterialTextView paymentInfoShippingTotal = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoShippingTotal == null) {
        break missingId;
      }

      id = R.id.paymentInfo_taxesTotal;
      MaterialTextView paymentInfoTaxesTotal = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoTaxesTotal == null) {
        break missingId;
      }

      id = R.id.paymentInfo_total;
      MaterialTextView paymentInfoTotal = ViewBindings.findChildViewById(rootView, id);
      if (paymentInfoTotal == null) {
        break missingId;
      }

      return new OrderDetailPaymentInfoBinding(rootView, paymentInfoCollectCardPresentPaymentButton,
          paymentInfoDiscountItems, paymentInfoDiscountSection, paymentInfoDiscountTotal,
          paymentInfoFees, paymentInfoFeesSection, paymentInfoIssueRefundButton,
          paymentInfoLblDiscount, paymentInfoLblFees, paymentInfoLblNet, paymentInfoLblPaid,
          paymentInfoLblProductsTotal, paymentInfoLblRefund, paymentInfoLblShipping,
          paymentInfoLblTaxes, paymentInfoLblTitle, paymentInfoLblTotal, paymentInfoNewTotal,
          paymentInfoPaid, paymentInfoPaidSection, paymentInfoPaymentMsg,
          paymentInfoPrintingInstructions, paymentInfoProductsTotal, paymentInfoRefundSection,
          paymentInfoRefundTotal, paymentInfoRefundTotalSection, paymentInfoRefunds,
          paymentInfoSeeReceiptButton, paymentInfoShippingTotal, paymentInfoTaxesTotal,
          paymentInfoTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
