// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.services.worker;

import androidx.work.ListenableWorker;
import dagger.internal.Factory;
import java.util.Map;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BackgroundWorkerFactory_Factory implements Factory<BackgroundWorkerFactory> {
  private final Provider<Map<Class<? extends ListenableWorker>, Provider<ChildWorkerFactory>>> workerFactoriesProvider;

  public BackgroundWorkerFactory_Factory(
      Provider<Map<Class<? extends ListenableWorker>, Provider<ChildWorkerFactory>>> workerFactoriesProvider) {
    this.workerFactoriesProvider = workerFactoriesProvider;
  }

  @Override
  public BackgroundWorkerFactory get() {
    return newInstance(workerFactoriesProvider.get());
  }

  public static BackgroundWorkerFactory_Factory create(
      Provider<Map<Class<? extends ListenableWorker>, Provider<ChildWorkerFactory>>> workerFactoriesProvider) {
    return new BackgroundWorkerFactory_Factory(workerFactoriesProvider);
  }

  public static BackgroundWorkerFactory newInstance(
      Map<Class<? extends ListenableWorker>, Provider<ChildWorkerFactory>> workerFactories) {
    return new BackgroundWorkerFactory(workerFactories);
  }
}
