// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AttributeTermListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout termContainer;

  @NonNull
  public final AppCompatImageView termDelete;

  @NonNull
  public final AppCompatImageView termDragHandle;

  @NonNull
  public final MaterialTextView termName;

  private AttributeTermListItemBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout termContainer, @NonNull AppCompatImageView termDelete,
      @NonNull AppCompatImageView termDragHandle, @NonNull MaterialTextView termName) {
    this.rootView = rootView;
    this.termContainer = termContainer;
    this.termDelete = termDelete;
    this.termDragHandle = termDragHandle;
    this.termName = termName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AttributeTermListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AttributeTermListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.attribute_term_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AttributeTermListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.termContainer;
      ConstraintLayout termContainer = ViewBindings.findChildViewById(rootView, id);
      if (termContainer == null) {
        break missingId;
      }

      id = R.id.termDelete;
      AppCompatImageView termDelete = ViewBindings.findChildViewById(rootView, id);
      if (termDelete == null) {
        break missingId;
      }

      id = R.id.termDragHandle;
      AppCompatImageView termDragHandle = ViewBindings.findChildViewById(rootView, id);
      if (termDragHandle == null) {
        break missingId;
      }

      id = R.id.termName;
      MaterialTextView termName = ViewBindings.findChildViewById(rootView, id);
      if (termName == null) {
        break missingId;
      }

      return new AttributeTermListItemBinding((LinearLayout) rootView, termContainer, termDelete,
          termDragHandle, termName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
