// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.WPWebView;

public final class WebviewBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appbarMain;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialToolbar toolbarMain;

  @NonNull
  public final WPWebView webView;

  @NonNull
  public final CoordinatorLayout webviewWrapper;

  private WebviewBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appbarMain,
      @NonNull NestedScrollView nestedScrollView, @NonNull ProgressBar progressBar,
      @NonNull MaterialToolbar toolbarMain, @NonNull WPWebView webView,
      @NonNull CoordinatorLayout webviewWrapper) {
    this.rootView = rootView;
    this.appbarMain = appbarMain;
    this.nestedScrollView = nestedScrollView;
    this.progressBar = progressBar;
    this.toolbarMain = toolbarMain;
    this.webView = webView;
    this.webviewWrapper = webviewWrapper;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WebviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WebviewBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.webview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WebviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar_main;
      AppBarLayout appbarMain = ViewBindings.findChildViewById(rootView, id);
      if (appbarMain == null) {
        break missingId;
      }

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.toolbar_main;
      MaterialToolbar toolbarMain = ViewBindings.findChildViewById(rootView, id);
      if (toolbarMain == null) {
        break missingId;
      }

      id = R.id.webView;
      WPWebView webView = ViewBindings.findChildViewById(rootView, id);
      if (webView == null) {
        break missingId;
      }

      CoordinatorLayout webviewWrapper = (CoordinatorLayout) rootView;

      return new WebviewBinding((CoordinatorLayout) rootView, appbarMain, nestedScrollView,
          progressBar, toolbarMain, webView, webviewWrapper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
