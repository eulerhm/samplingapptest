// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.cardreader;

import com.woocommerce.android.cardreader.internal.config.CardReaderConfigFactory;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CardReaderCountryConfigProvider_Factory implements Factory<CardReaderCountryConfigProvider> {
  private final Provider<InPersonPaymentsCanadaFeatureFlag> canadaFeatureFlagProvider;

  private final Provider<CardReaderConfigFactory> cardReaderConfigFactoryProvider;

  public CardReaderCountryConfigProvider_Factory(
      Provider<InPersonPaymentsCanadaFeatureFlag> canadaFeatureFlagProvider,
      Provider<CardReaderConfigFactory> cardReaderConfigFactoryProvider) {
    this.canadaFeatureFlagProvider = canadaFeatureFlagProvider;
    this.cardReaderConfigFactoryProvider = cardReaderConfigFactoryProvider;
  }

  @Override
  public CardReaderCountryConfigProvider get() {
    return newInstance(canadaFeatureFlagProvider.get(), cardReaderConfigFactoryProvider.get());
  }

  public static CardReaderCountryConfigProvider_Factory create(
      Provider<InPersonPaymentsCanadaFeatureFlag> canadaFeatureFlagProvider,
      Provider<CardReaderConfigFactory> cardReaderConfigFactoryProvider) {
    return new CardReaderCountryConfigProvider_Factory(canadaFeatureFlagProvider, cardReaderConfigFactoryProvider);
  }

  public static CardReaderCountryConfigProvider newInstance(
      InPersonPaymentsCanadaFeatureFlag canadaFeatureFlag,
      CardReaderConfigFactory cardReaderConfigFactory) {
    return new CardReaderCountryConfigProvider(canadaFeatureFlag, cardReaderConfigFactory);
  }
}
