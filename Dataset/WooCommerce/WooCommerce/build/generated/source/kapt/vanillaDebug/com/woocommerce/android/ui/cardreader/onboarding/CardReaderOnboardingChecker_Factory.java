// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.cardreader.onboarding;

import com.woocommerce.android.AppPrefsWrapper;
import com.woocommerce.android.tools.NetworkStatus;
import com.woocommerce.android.tools.SelectedSite;
import com.woocommerce.android.ui.cardreader.CardReaderCountryConfigProvider;
import com.woocommerce.android.ui.cardreader.CardReaderTrackingInfoKeeper;
import com.woocommerce.android.util.CoroutineDispatchers;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.WCInPersonPaymentsStore;
import org.wordpress.android.fluxc.store.WooCommerceStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CardReaderOnboardingChecker_Factory implements Factory<CardReaderOnboardingChecker> {
  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<AppPrefsWrapper> appPrefsWrapperProvider;

  private final Provider<WooCommerceStore> wooStoreProvider;

  private final Provider<WCInPersonPaymentsStore> inPersonPaymentsStoreProvider;

  private final Provider<CoroutineDispatchers> dispatchersProvider;

  private final Provider<NetworkStatus> networkStatusProvider;

  private final Provider<CardReaderTrackingInfoKeeper> cardReaderTrackingInfoKeeperProvider;

  private final Provider<CardReaderCountryConfigProvider> cardReaderCountryConfigProvider;

  public CardReaderOnboardingChecker_Factory(Provider<SelectedSite> selectedSiteProvider,
      Provider<AppPrefsWrapper> appPrefsWrapperProvider,
      Provider<WooCommerceStore> wooStoreProvider,
      Provider<WCInPersonPaymentsStore> inPersonPaymentsStoreProvider,
      Provider<CoroutineDispatchers> dispatchersProvider,
      Provider<NetworkStatus> networkStatusProvider,
      Provider<CardReaderTrackingInfoKeeper> cardReaderTrackingInfoKeeperProvider,
      Provider<CardReaderCountryConfigProvider> cardReaderCountryConfigProvider) {
    this.selectedSiteProvider = selectedSiteProvider;
    this.appPrefsWrapperProvider = appPrefsWrapperProvider;
    this.wooStoreProvider = wooStoreProvider;
    this.inPersonPaymentsStoreProvider = inPersonPaymentsStoreProvider;
    this.dispatchersProvider = dispatchersProvider;
    this.networkStatusProvider = networkStatusProvider;
    this.cardReaderTrackingInfoKeeperProvider = cardReaderTrackingInfoKeeperProvider;
    this.cardReaderCountryConfigProvider = cardReaderCountryConfigProvider;
  }

  @Override
  public CardReaderOnboardingChecker get() {
    return newInstance(selectedSiteProvider.get(), appPrefsWrapperProvider.get(), wooStoreProvider.get(), inPersonPaymentsStoreProvider.get(), dispatchersProvider.get(), networkStatusProvider.get(), cardReaderTrackingInfoKeeperProvider.get(), cardReaderCountryConfigProvider.get());
  }

  public static CardReaderOnboardingChecker_Factory create(
      Provider<SelectedSite> selectedSiteProvider,
      Provider<AppPrefsWrapper> appPrefsWrapperProvider,
      Provider<WooCommerceStore> wooStoreProvider,
      Provider<WCInPersonPaymentsStore> inPersonPaymentsStoreProvider,
      Provider<CoroutineDispatchers> dispatchersProvider,
      Provider<NetworkStatus> networkStatusProvider,
      Provider<CardReaderTrackingInfoKeeper> cardReaderTrackingInfoKeeperProvider,
      Provider<CardReaderCountryConfigProvider> cardReaderCountryConfigProvider) {
    return new CardReaderOnboardingChecker_Factory(selectedSiteProvider, appPrefsWrapperProvider, wooStoreProvider, inPersonPaymentsStoreProvider, dispatchersProvider, networkStatusProvider, cardReaderTrackingInfoKeeperProvider, cardReaderCountryConfigProvider);
  }

  public static CardReaderOnboardingChecker newInstance(SelectedSite selectedSite,
      AppPrefsWrapper appPrefsWrapper, WooCommerceStore wooStore,
      WCInPersonPaymentsStore inPersonPaymentsStore, CoroutineDispatchers dispatchers,
      NetworkStatus networkStatus, CardReaderTrackingInfoKeeper cardReaderTrackingInfoKeeper,
      CardReaderCountryConfigProvider cardReaderCountryConfigProvider) {
    return new CardReaderOnboardingChecker(selectedSite, appPrefsWrapper, wooStore, inPersonPaymentsStore, dispatchers, networkStatus, cardReaderTrackingInfoKeeper, cardReaderCountryConfigProvider);
  }
}
