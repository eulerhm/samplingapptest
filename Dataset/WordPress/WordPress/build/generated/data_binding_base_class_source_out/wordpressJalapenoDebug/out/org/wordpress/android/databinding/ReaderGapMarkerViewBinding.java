// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.WPTextView;

public final class ReaderGapMarkerViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView imageGapMarker;

  @NonNull
  public final RelativeLayout layoutGapMarker;

  @NonNull
  public final ProgressBar progressGapMarker;

  @NonNull
  public final WPTextView textGapMarker;

  private ReaderGapMarkerViewBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView imageGapMarker, @NonNull RelativeLayout layoutGapMarker,
      @NonNull ProgressBar progressGapMarker, @NonNull WPTextView textGapMarker) {
    this.rootView = rootView;
    this.imageGapMarker = imageGapMarker;
    this.layoutGapMarker = layoutGapMarker;
    this.progressGapMarker = progressGapMarker;
    this.textGapMarker = textGapMarker;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReaderGapMarkerViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReaderGapMarkerViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reader_gap_marker_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReaderGapMarkerViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_gap_marker;
      ImageView imageGapMarker = ViewBindings.findChildViewById(rootView, id);
      if (imageGapMarker == null) {
        break missingId;
      }

      RelativeLayout layoutGapMarker = (RelativeLayout) rootView;

      id = R.id.progress_gap_marker;
      ProgressBar progressGapMarker = ViewBindings.findChildViewById(rootView, id);
      if (progressGapMarker == null) {
        break missingId;
      }

      id = R.id.text_gap_marker;
      WPTextView textGapMarker = ViewBindings.findChildViewById(rootView, id);
      if (textGapMarker == null) {
        break missingId;
      }

      return new ReaderGapMarkerViewBinding((RelativeLayout) rootView, imageGapMarker,
          layoutGapMarker, progressGapMarker, textGapMarker);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
