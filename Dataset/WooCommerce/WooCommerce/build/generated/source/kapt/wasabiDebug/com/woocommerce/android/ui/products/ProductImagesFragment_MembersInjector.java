// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.products;

import com.woocommerce.android.ui.base.UIMessageResolver;
import com.woocommerce.android.util.CurrencyFormatter;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.wordpress.android.mediapicker.MediaPickerUtils;
import org.wordpress.android.mediapicker.api.MediaPickerSetup;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductImagesFragment_MembersInjector implements MembersInjector<ProductImagesFragment> {
  private final Provider<CurrencyFormatter> currencyFormatterProvider;

  private final Provider<UIMessageResolver> uiMessageResolverProvider;

  private final Provider<ProductNavigator> navigatorProvider;

  private final Provider<MediaPickerUtils> mediaPickerUtilsProvider;

  private final Provider<MediaPickerSetup.Factory> mediaPickerSetupFactoryProvider;

  public ProductImagesFragment_MembersInjector(
      Provider<CurrencyFormatter> currencyFormatterProvider,
      Provider<UIMessageResolver> uiMessageResolverProvider,
      Provider<ProductNavigator> navigatorProvider,
      Provider<MediaPickerUtils> mediaPickerUtilsProvider,
      Provider<MediaPickerSetup.Factory> mediaPickerSetupFactoryProvider) {
    this.currencyFormatterProvider = currencyFormatterProvider;
    this.uiMessageResolverProvider = uiMessageResolverProvider;
    this.navigatorProvider = navigatorProvider;
    this.mediaPickerUtilsProvider = mediaPickerUtilsProvider;
    this.mediaPickerSetupFactoryProvider = mediaPickerSetupFactoryProvider;
  }

  public static MembersInjector<ProductImagesFragment> create(
      Provider<CurrencyFormatter> currencyFormatterProvider,
      Provider<UIMessageResolver> uiMessageResolverProvider,
      Provider<ProductNavigator> navigatorProvider,
      Provider<MediaPickerUtils> mediaPickerUtilsProvider,
      Provider<MediaPickerSetup.Factory> mediaPickerSetupFactoryProvider) {
    return new ProductImagesFragment_MembersInjector(currencyFormatterProvider, uiMessageResolverProvider, navigatorProvider, mediaPickerUtilsProvider, mediaPickerSetupFactoryProvider);
  }

  @Override
  public void injectMembers(ProductImagesFragment instance) {
    BaseProductEditorFragment_MembersInjector.injectCurrencyFormatter(instance, currencyFormatterProvider.get());
    BaseProductEditorFragment_MembersInjector.injectUiMessageResolver(instance, uiMessageResolverProvider.get());
    injectNavigator(instance, navigatorProvider.get());
    injectMediaPickerUtils(instance, mediaPickerUtilsProvider.get());
    injectMediaPickerSetupFactory(instance, mediaPickerSetupFactoryProvider.get());
  }

  @InjectedFieldSignature("com.woocommerce.android.ui.products.ProductImagesFragment.navigator")
  public static void injectNavigator(ProductImagesFragment instance, ProductNavigator navigator) {
    instance.navigator = navigator;
  }

  @InjectedFieldSignature("com.woocommerce.android.ui.products.ProductImagesFragment.mediaPickerUtils")
  public static void injectMediaPickerUtils(ProductImagesFragment instance,
      MediaPickerUtils mediaPickerUtils) {
    instance.mediaPickerUtils = mediaPickerUtils;
  }

  @InjectedFieldSignature("com.woocommerce.android.ui.products.ProductImagesFragment.mediaPickerSetupFactory")
  public static void injectMediaPickerSetupFactory(ProductImagesFragment instance,
      MediaPickerSetup.Factory mediaPickerSetupFactory) {
    instance.mediaPickerSetupFactory = mediaPickerSetupFactory;
  }
}
