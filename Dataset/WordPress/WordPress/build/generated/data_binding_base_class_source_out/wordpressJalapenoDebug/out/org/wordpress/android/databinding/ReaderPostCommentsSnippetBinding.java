// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class ReaderPostCommentsSnippetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView bellIcon;

  @NonNull
  public final MaterialTextView commentsNumberTitle;

  @NonNull
  public final RecyclerView commentsRecycler;

  @NonNull
  public final LinearLayout commentsRecyclerContainer;

  @NonNull
  public final ConstraintLayout commentsSnippetContainer;

  @NonNull
  public final View divider;

  @NonNull
  public final MaterialTextView followConversation;

  @NonNull
  public final LinearLayout followConversationContainer;

  @NonNull
  public final ShimmerFrameLayout shimmerViewContainer;

  private ReaderPostCommentsSnippetBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView bellIcon, @NonNull MaterialTextView commentsNumberTitle,
      @NonNull RecyclerView commentsRecycler, @NonNull LinearLayout commentsRecyclerContainer,
      @NonNull ConstraintLayout commentsSnippetContainer, @NonNull View divider,
      @NonNull MaterialTextView followConversation,
      @NonNull LinearLayout followConversationContainer,
      @NonNull ShimmerFrameLayout shimmerViewContainer) {
    this.rootView = rootView;
    this.bellIcon = bellIcon;
    this.commentsNumberTitle = commentsNumberTitle;
    this.commentsRecycler = commentsRecycler;
    this.commentsRecyclerContainer = commentsRecyclerContainer;
    this.commentsSnippetContainer = commentsSnippetContainer;
    this.divider = divider;
    this.followConversation = followConversation;
    this.followConversationContainer = followConversationContainer;
    this.shimmerViewContainer = shimmerViewContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReaderPostCommentsSnippetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReaderPostCommentsSnippetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reader_post_comments_snippet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReaderPostCommentsSnippetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bell_icon;
      ImageView bellIcon = ViewBindings.findChildViewById(rootView, id);
      if (bellIcon == null) {
        break missingId;
      }

      id = R.id.comments_number_title;
      MaterialTextView commentsNumberTitle = ViewBindings.findChildViewById(rootView, id);
      if (commentsNumberTitle == null) {
        break missingId;
      }

      id = R.id.comments_recycler;
      RecyclerView commentsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (commentsRecycler == null) {
        break missingId;
      }

      id = R.id.comments_recycler_container;
      LinearLayout commentsRecyclerContainer = ViewBindings.findChildViewById(rootView, id);
      if (commentsRecyclerContainer == null) {
        break missingId;
      }

      ConstraintLayout commentsSnippetContainer = (ConstraintLayout) rootView;

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.follow_conversation;
      MaterialTextView followConversation = ViewBindings.findChildViewById(rootView, id);
      if (followConversation == null) {
        break missingId;
      }

      id = R.id.follow_conversation_container;
      LinearLayout followConversationContainer = ViewBindings.findChildViewById(rootView, id);
      if (followConversationContainer == null) {
        break missingId;
      }

      id = R.id.shimmer_view_container;
      ShimmerFrameLayout shimmerViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (shimmerViewContainer == null) {
        break missingId;
      }

      return new ReaderPostCommentsSnippetBinding((ConstraintLayout) rootView, bellIcon,
          commentsNumberTitle, commentsRecycler, commentsRecyclerContainer,
          commentsSnippetContainer, divider, followConversation, followConversationContainer,
          shimmerViewContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
