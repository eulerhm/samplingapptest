// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.products;

import com.woocommerce.android.AppPrefsWrapper;
import com.woocommerce.android.tools.SelectedSite;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.Dispatcher;
import org.wordpress.android.fluxc.store.WCProductStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductListRepository_Factory implements Factory<ProductListRepository> {
  private final Provider<AppPrefsWrapper> appPrefsWrapperProvider;

  private final Provider<Dispatcher> dispatcherProvider;

  private final Provider<WCProductStore> productStoreProvider;

  private final Provider<SelectedSite> selectedSiteProvider;

  public ProductListRepository_Factory(Provider<AppPrefsWrapper> appPrefsWrapperProvider,
      Provider<Dispatcher> dispatcherProvider, Provider<WCProductStore> productStoreProvider,
      Provider<SelectedSite> selectedSiteProvider) {
    this.appPrefsWrapperProvider = appPrefsWrapperProvider;
    this.dispatcherProvider = dispatcherProvider;
    this.productStoreProvider = productStoreProvider;
    this.selectedSiteProvider = selectedSiteProvider;
  }

  @Override
  public ProductListRepository get() {
    return newInstance(appPrefsWrapperProvider.get(), dispatcherProvider.get(), productStoreProvider.get(), selectedSiteProvider.get());
  }

  public static ProductListRepository_Factory create(
      Provider<AppPrefsWrapper> appPrefsWrapperProvider, Provider<Dispatcher> dispatcherProvider,
      Provider<WCProductStore> productStoreProvider, Provider<SelectedSite> selectedSiteProvider) {
    return new ProductListRepository_Factory(appPrefsWrapperProvider, dispatcherProvider, productStoreProvider, selectedSiteProvider);
  }

  public static ProductListRepository newInstance(AppPrefsWrapper appPrefsWrapper,
      Dispatcher dispatcher, WCProductStore productStore, SelectedSite selectedSite) {
    return new ProductListRepository(appPrefsWrapper, dispatcher, productStore, selectedSite);
  }
}
