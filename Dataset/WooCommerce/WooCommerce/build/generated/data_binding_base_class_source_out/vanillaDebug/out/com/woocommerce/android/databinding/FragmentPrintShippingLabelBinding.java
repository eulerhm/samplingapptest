// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.WCMaterialOutlinedSpinnerView;
import com.woocommerce.android.widgets.WCWarningBanner;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPrintShippingLabelBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final WCWarningBanner expirationWarningBanner;

  @NonNull
  public final MaterialTextView labelPurchased;

  @NonNull
  public final AppCompatImageView labelPurchasedImg;

  @NonNull
  public final Group purchaseGroup;

  @NonNull
  public final Group reprintGroup;

  @NonNull
  public final MaterialButton saveForLaterButton;

  @NonNull
  public final MaterialButton shippingLabelPrintBtn;

  @NonNull
  public final MaterialTextView shippingLabelPrintDisclaimer;

  @NonNull
  public final ImageView shippingLabelPrintDisclaimerIcon;

  @NonNull
  public final MaterialTextView shippingLabelPrintErrorMessage;

  @NonNull
  public final MaterialTextView shippingLabelPrintInfo;

  @NonNull
  public final ImageView shippingLabelPrintInfoIcon;

  @NonNull
  public final ConstraintLayout shippingLabelPrintInfoView;

  @NonNull
  public final ConstraintLayout shippingLabelPrintPageOptionsView;

  @NonNull
  public final ImageView shippingLabelPrintPagesIcon;

  @NonNull
  public final MaterialTextView shippingLabelPrintPagesInfo;

  @NonNull
  public final WCMaterialOutlinedSpinnerView shippingLabelPrintPaperSize;

  @NonNull
  public final Barrier topPartBarrier;

  private FragmentPrintShippingLabelBinding(@NonNull ScrollView rootView,
      @NonNull WCWarningBanner expirationWarningBanner, @NonNull MaterialTextView labelPurchased,
      @NonNull AppCompatImageView labelPurchasedImg, @NonNull Group purchaseGroup,
      @NonNull Group reprintGroup, @NonNull MaterialButton saveForLaterButton,
      @NonNull MaterialButton shippingLabelPrintBtn,
      @NonNull MaterialTextView shippingLabelPrintDisclaimer,
      @NonNull ImageView shippingLabelPrintDisclaimerIcon,
      @NonNull MaterialTextView shippingLabelPrintErrorMessage,
      @NonNull MaterialTextView shippingLabelPrintInfo,
      @NonNull ImageView shippingLabelPrintInfoIcon,
      @NonNull ConstraintLayout shippingLabelPrintInfoView,
      @NonNull ConstraintLayout shippingLabelPrintPageOptionsView,
      @NonNull ImageView shippingLabelPrintPagesIcon,
      @NonNull MaterialTextView shippingLabelPrintPagesInfo,
      @NonNull WCMaterialOutlinedSpinnerView shippingLabelPrintPaperSize,
      @NonNull Barrier topPartBarrier) {
    this.rootView = rootView;
    this.expirationWarningBanner = expirationWarningBanner;
    this.labelPurchased = labelPurchased;
    this.labelPurchasedImg = labelPurchasedImg;
    this.purchaseGroup = purchaseGroup;
    this.reprintGroup = reprintGroup;
    this.saveForLaterButton = saveForLaterButton;
    this.shippingLabelPrintBtn = shippingLabelPrintBtn;
    this.shippingLabelPrintDisclaimer = shippingLabelPrintDisclaimer;
    this.shippingLabelPrintDisclaimerIcon = shippingLabelPrintDisclaimerIcon;
    this.shippingLabelPrintErrorMessage = shippingLabelPrintErrorMessage;
    this.shippingLabelPrintInfo = shippingLabelPrintInfo;
    this.shippingLabelPrintInfoIcon = shippingLabelPrintInfoIcon;
    this.shippingLabelPrintInfoView = shippingLabelPrintInfoView;
    this.shippingLabelPrintPageOptionsView = shippingLabelPrintPageOptionsView;
    this.shippingLabelPrintPagesIcon = shippingLabelPrintPagesIcon;
    this.shippingLabelPrintPagesInfo = shippingLabelPrintPagesInfo;
    this.shippingLabelPrintPaperSize = shippingLabelPrintPaperSize;
    this.topPartBarrier = topPartBarrier;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPrintShippingLabelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPrintShippingLabelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_print_shipping_label, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPrintShippingLabelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expiration_warning_banner;
      WCWarningBanner expirationWarningBanner = ViewBindings.findChildViewById(rootView, id);
      if (expirationWarningBanner == null) {
        break missingId;
      }

      id = R.id.label_purchased;
      MaterialTextView labelPurchased = ViewBindings.findChildViewById(rootView, id);
      if (labelPurchased == null) {
        break missingId;
      }

      id = R.id.label_purchased_img;
      AppCompatImageView labelPurchasedImg = ViewBindings.findChildViewById(rootView, id);
      if (labelPurchasedImg == null) {
        break missingId;
      }

      id = R.id.purchase_group;
      Group purchaseGroup = ViewBindings.findChildViewById(rootView, id);
      if (purchaseGroup == null) {
        break missingId;
      }

      id = R.id.reprint_group;
      Group reprintGroup = ViewBindings.findChildViewById(rootView, id);
      if (reprintGroup == null) {
        break missingId;
      }

      id = R.id.save_for_later_button;
      MaterialButton saveForLaterButton = ViewBindings.findChildViewById(rootView, id);
      if (saveForLaterButton == null) {
        break missingId;
      }

      id = R.id.shippingLabelPrint_btn;
      MaterialButton shippingLabelPrintBtn = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelPrintBtn == null) {
        break missingId;
      }

      id = R.id.shippingLabelPrint_disclaimer;
      MaterialTextView shippingLabelPrintDisclaimer = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelPrintDisclaimer == null) {
        break missingId;
      }

      id = R.id.shippingLabelPrint_disclaimerIcon;
      ImageView shippingLabelPrintDisclaimerIcon = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelPrintDisclaimerIcon == null) {
        break missingId;
      }

      id = R.id.shippingLabelPrint_errorMessage;
      MaterialTextView shippingLabelPrintErrorMessage = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelPrintErrorMessage == null) {
        break missingId;
      }

      id = R.id.shippingLabelPrint_info;
      MaterialTextView shippingLabelPrintInfo = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelPrintInfo == null) {
        break missingId;
      }

      id = R.id.shippingLabelPrint_infoIcon;
      ImageView shippingLabelPrintInfoIcon = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelPrintInfoIcon == null) {
        break missingId;
      }

      id = R.id.shippingLabelPrint_infoView;
      ConstraintLayout shippingLabelPrintInfoView = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelPrintInfoView == null) {
        break missingId;
      }

      id = R.id.shippingLabelPrint_pageOptionsView;
      ConstraintLayout shippingLabelPrintPageOptionsView = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelPrintPageOptionsView == null) {
        break missingId;
      }

      id = R.id.shippingLabelPrint_pagesIcon;
      ImageView shippingLabelPrintPagesIcon = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelPrintPagesIcon == null) {
        break missingId;
      }

      id = R.id.shippingLabelPrint_pagesInfo;
      MaterialTextView shippingLabelPrintPagesInfo = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelPrintPagesInfo == null) {
        break missingId;
      }

      id = R.id.shippingLabelPrint_paperSize;
      WCMaterialOutlinedSpinnerView shippingLabelPrintPaperSize = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelPrintPaperSize == null) {
        break missingId;
      }

      id = R.id.top_part_barrier;
      Barrier topPartBarrier = ViewBindings.findChildViewById(rootView, id);
      if (topPartBarrier == null) {
        break missingId;
      }

      return new FragmentPrintShippingLabelBinding((ScrollView) rootView, expirationWarningBanner,
          labelPurchased, labelPurchasedImg, purchaseGroup, reprintGroup, saveForLaterButton,
          shippingLabelPrintBtn, shippingLabelPrintDisclaimer, shippingLabelPrintDisclaimerIcon,
          shippingLabelPrintErrorMessage, shippingLabelPrintInfo, shippingLabelPrintInfoIcon,
          shippingLabelPrintInfoView, shippingLabelPrintPageOptionsView,
          shippingLabelPrintPagesIcon, shippingLabelPrintPagesInfo, shippingLabelPrintPaperSize,
          topPartBarrier);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
