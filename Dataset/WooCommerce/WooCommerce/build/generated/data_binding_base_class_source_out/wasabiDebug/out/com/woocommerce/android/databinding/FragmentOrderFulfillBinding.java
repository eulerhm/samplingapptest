// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.ui.orders.details.views.OrderDetailCustomerInfoView;
import com.woocommerce.android.ui.orders.details.views.OrderDetailProductListView;
import com.woocommerce.android.ui.orders.details.views.OrderDetailShipmentTrackingListView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOrderFulfillBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final MaterialButton buttonMarkOrderCompete;

  @NonNull
  public final MaterialTextView customerInfoNoteForCustomer;

  @NonNull
  public final LinearLayout orderDetailContainer;

  @NonNull
  public final OrderDetailCustomerInfoView orderDetailCustomerInfo;

  @NonNull
  public final OrderDetailProductListView orderDetailProductList;

  @NonNull
  public final OrderDetailShipmentTrackingListView orderDetailShipmentList;

  @NonNull
  public final NestedScrollView scrollView;

  private FragmentOrderFulfillBinding(@NonNull NestedScrollView rootView,
      @NonNull MaterialButton buttonMarkOrderCompete,
      @NonNull MaterialTextView customerInfoNoteForCustomer,
      @NonNull LinearLayout orderDetailContainer,
      @NonNull OrderDetailCustomerInfoView orderDetailCustomerInfo,
      @NonNull OrderDetailProductListView orderDetailProductList,
      @NonNull OrderDetailShipmentTrackingListView orderDetailShipmentList,
      @NonNull NestedScrollView scrollView) {
    this.rootView = rootView;
    this.buttonMarkOrderCompete = buttonMarkOrderCompete;
    this.customerInfoNoteForCustomer = customerInfoNoteForCustomer;
    this.orderDetailContainer = orderDetailContainer;
    this.orderDetailCustomerInfo = orderDetailCustomerInfo;
    this.orderDetailProductList = orderDetailProductList;
    this.orderDetailShipmentList = orderDetailShipmentList;
    this.scrollView = scrollView;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOrderFulfillBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOrderFulfillBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_order_fulfill, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOrderFulfillBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_mark_order_compete;
      MaterialButton buttonMarkOrderCompete = ViewBindings.findChildViewById(rootView, id);
      if (buttonMarkOrderCompete == null) {
        break missingId;
      }

      id = R.id.customerInfo_NoteForCustomer;
      MaterialTextView customerInfoNoteForCustomer = ViewBindings.findChildViewById(rootView, id);
      if (customerInfoNoteForCustomer == null) {
        break missingId;
      }

      id = R.id.orderDetail_container;
      LinearLayout orderDetailContainer = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailContainer == null) {
        break missingId;
      }

      id = R.id.orderDetail_customerInfo;
      OrderDetailCustomerInfoView orderDetailCustomerInfo = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailCustomerInfo == null) {
        break missingId;
      }

      id = R.id.orderDetail_productList;
      OrderDetailProductListView orderDetailProductList = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailProductList == null) {
        break missingId;
      }

      id = R.id.orderDetail_shipmentList;
      OrderDetailShipmentTrackingListView orderDetailShipmentList = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailShipmentList == null) {
        break missingId;
      }

      NestedScrollView scrollView = (NestedScrollView) rootView;

      return new FragmentOrderFulfillBinding((NestedScrollView) rootView, buttonMarkOrderCompete,
          customerInfoNoteForCustomer, orderDetailContainer, orderDetailCustomerInfo,
          orderDetailProductList, orderDetailShipmentList, scrollView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
