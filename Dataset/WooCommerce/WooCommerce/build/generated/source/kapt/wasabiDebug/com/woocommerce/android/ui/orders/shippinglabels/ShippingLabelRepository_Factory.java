// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.orders.shippinglabels;

import com.woocommerce.android.model.ShippingLabelMapper;
import com.woocommerce.android.tools.SelectedSite;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.WCShippingLabelStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ShippingLabelRepository_Factory implements Factory<ShippingLabelRepository> {
  private final Provider<WCShippingLabelStore> shippingLabelStoreProvider;

  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<ShippingLabelMapper> shippingLabelMapperProvider;

  public ShippingLabelRepository_Factory(Provider<WCShippingLabelStore> shippingLabelStoreProvider,
      Provider<SelectedSite> selectedSiteProvider,
      Provider<ShippingLabelMapper> shippingLabelMapperProvider) {
    this.shippingLabelStoreProvider = shippingLabelStoreProvider;
    this.selectedSiteProvider = selectedSiteProvider;
    this.shippingLabelMapperProvider = shippingLabelMapperProvider;
  }

  @Override
  public ShippingLabelRepository get() {
    return newInstance(shippingLabelStoreProvider.get(), selectedSiteProvider.get(), shippingLabelMapperProvider.get());
  }

  public static ShippingLabelRepository_Factory create(
      Provider<WCShippingLabelStore> shippingLabelStoreProvider,
      Provider<SelectedSite> selectedSiteProvider,
      Provider<ShippingLabelMapper> shippingLabelMapperProvider) {
    return new ShippingLabelRepository_Factory(shippingLabelStoreProvider, selectedSiteProvider, shippingLabelMapperProvider);
  }

  public static ShippingLabelRepository newInstance(WCShippingLabelStore shippingLabelStore,
      SelectedSite selectedSite, ShippingLabelMapper shippingLabelMapper) {
    return new ShippingLabelRepository(shippingLabelStore, selectedSite, shippingLabelMapper);
  }
}
