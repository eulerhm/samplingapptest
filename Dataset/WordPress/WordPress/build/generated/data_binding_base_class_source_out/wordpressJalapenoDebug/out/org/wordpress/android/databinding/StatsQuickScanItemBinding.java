// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class StatsQuickScanItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView endLabel;

  @NonNull
  public final MaterialTextView endText;

  @NonNull
  public final TextView endValue;

  @NonNull
  public final LinearLayout endValueContainer;

  @NonNull
  public final View horizontalDivider;

  @NonNull
  public final View horizontalDivider2;

  @NonNull
  public final MaterialTextView startLabel;

  @NonNull
  public final MaterialTextView startText;

  @NonNull
  public final MaterialTextView startValue;

  @NonNull
  public final LinearLayout startValueContainer;

  @NonNull
  public final TextView thirdLabel;

  @NonNull
  public final MaterialTextView thirdText;

  @NonNull
  public final TextView thirdValue;

  @NonNull
  public final LinearLayout thirdValueContainer;

  private StatsQuickScanItemBinding(@NonNull LinearLayout rootView, @NonNull TextView endLabel,
      @NonNull MaterialTextView endText, @NonNull TextView endValue,
      @NonNull LinearLayout endValueContainer, @NonNull View horizontalDivider,
      @NonNull View horizontalDivider2, @NonNull MaterialTextView startLabel,
      @NonNull MaterialTextView startText, @NonNull MaterialTextView startValue,
      @NonNull LinearLayout startValueContainer, @NonNull TextView thirdLabel,
      @NonNull MaterialTextView thirdText, @NonNull TextView thirdValue,
      @NonNull LinearLayout thirdValueContainer) {
    this.rootView = rootView;
    this.endLabel = endLabel;
    this.endText = endText;
    this.endValue = endValue;
    this.endValueContainer = endValueContainer;
    this.horizontalDivider = horizontalDivider;
    this.horizontalDivider2 = horizontalDivider2;
    this.startLabel = startLabel;
    this.startText = startText;
    this.startValue = startValue;
    this.startValueContainer = startValueContainer;
    this.thirdLabel = thirdLabel;
    this.thirdText = thirdText;
    this.thirdValue = thirdValue;
    this.thirdValueContainer = thirdValueContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StatsQuickScanItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StatsQuickScanItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.stats_quick_scan_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StatsQuickScanItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.end_label;
      TextView endLabel = ViewBindings.findChildViewById(rootView, id);
      if (endLabel == null) {
        break missingId;
      }

      id = R.id.end_text;
      MaterialTextView endText = ViewBindings.findChildViewById(rootView, id);
      if (endText == null) {
        break missingId;
      }

      id = R.id.end_value;
      TextView endValue = ViewBindings.findChildViewById(rootView, id);
      if (endValue == null) {
        break missingId;
      }

      id = R.id.end_value_container;
      LinearLayout endValueContainer = ViewBindings.findChildViewById(rootView, id);
      if (endValueContainer == null) {
        break missingId;
      }

      id = R.id.horizontal_divider;
      View horizontalDivider = ViewBindings.findChildViewById(rootView, id);
      if (horizontalDivider == null) {
        break missingId;
      }

      id = R.id.horizontal_divider2;
      View horizontalDivider2 = ViewBindings.findChildViewById(rootView, id);
      if (horizontalDivider2 == null) {
        break missingId;
      }

      id = R.id.start_label;
      MaterialTextView startLabel = ViewBindings.findChildViewById(rootView, id);
      if (startLabel == null) {
        break missingId;
      }

      id = R.id.start_text;
      MaterialTextView startText = ViewBindings.findChildViewById(rootView, id);
      if (startText == null) {
        break missingId;
      }

      id = R.id.start_value;
      MaterialTextView startValue = ViewBindings.findChildViewById(rootView, id);
      if (startValue == null) {
        break missingId;
      }

      id = R.id.start_value_container;
      LinearLayout startValueContainer = ViewBindings.findChildViewById(rootView, id);
      if (startValueContainer == null) {
        break missingId;
      }

      id = R.id.third_label;
      TextView thirdLabel = ViewBindings.findChildViewById(rootView, id);
      if (thirdLabel == null) {
        break missingId;
      }

      id = R.id.third_text;
      MaterialTextView thirdText = ViewBindings.findChildViewById(rootView, id);
      if (thirdText == null) {
        break missingId;
      }

      id = R.id.third_value;
      TextView thirdValue = ViewBindings.findChildViewById(rootView, id);
      if (thirdValue == null) {
        break missingId;
      }

      id = R.id.third_value_container;
      LinearLayout thirdValueContainer = ViewBindings.findChildViewById(rootView, id);
      if (thirdValueContainer == null) {
        break missingId;
      }

      return new StatsQuickScanItemBinding((LinearLayout) rootView, endLabel, endText, endValue,
          endValueContainer, horizontalDivider, horizontalDivider2, startLabel, startText,
          startValue, startValueContainer, thirdLabel, thirdText, thirdValue, thirdValueContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
