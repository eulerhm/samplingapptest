// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class LocalePickerBottomSheetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnLocaleSuggestion;

  @NonNull
  public final TextView emptyView;

  @NonNull
  public final MaterialTextView labelLocaleSuggestion;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextInputLayout searchInputLayout;

  private LocalePickerBottomSheetBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnLocaleSuggestion, @NonNull TextView emptyView,
      @NonNull MaterialTextView labelLocaleSuggestion, @NonNull RecyclerView recyclerView,
      @NonNull TextInputLayout searchInputLayout) {
    this.rootView = rootView;
    this.btnLocaleSuggestion = btnLocaleSuggestion;
    this.emptyView = emptyView;
    this.labelLocaleSuggestion = labelLocaleSuggestion;
    this.recyclerView = recyclerView;
    this.searchInputLayout = searchInputLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LocalePickerBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LocalePickerBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.locale_picker_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LocalePickerBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_locale_suggestion;
      MaterialButton btnLocaleSuggestion = ViewBindings.findChildViewById(rootView, id);
      if (btnLocaleSuggestion == null) {
        break missingId;
      }

      id = R.id.empty_view;
      TextView emptyView = ViewBindings.findChildViewById(rootView, id);
      if (emptyView == null) {
        break missingId;
      }

      id = R.id.label_locale_suggestion;
      MaterialTextView labelLocaleSuggestion = ViewBindings.findChildViewById(rootView, id);
      if (labelLocaleSuggestion == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.search_input_layout;
      TextInputLayout searchInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchInputLayout == null) {
        break missingId;
      }

      return new LocalePickerBottomSheetBinding((ConstraintLayout) rootView, btnLocaleSuggestion,
          emptyView, labelLocaleSuggestion, recyclerView, searchInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
