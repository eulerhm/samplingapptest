// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.woocommerce.android.R;
import com.woocommerce.android.ui.prefs.WCSettingsOptionValueView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final WCSettingsOptionValueView productCatalogVisibility;

  @NonNull
  public final SwitchMaterial productIsDownloadable;

  @NonNull
  public final View productIsDownloadableDivider;

  @NonNull
  public final WCSettingsOptionValueView productMenuOrder;

  @NonNull
  public final WCSettingsOptionValueView productPurchaseNote;

  @NonNull
  public final SwitchMaterial productReviewsAllowed;

  @NonNull
  public final View productReviewsAllowedDivider;

  @NonNull
  public final WCSettingsOptionValueView productSlug;

  @NonNull
  public final WCSettingsOptionValueView productStatus;

  @NonNull
  public final WCSettingsOptionValueView productVisibility;

  private FragmentProductSettingsBinding(@NonNull ScrollView rootView,
      @NonNull WCSettingsOptionValueView productCatalogVisibility,
      @NonNull SwitchMaterial productIsDownloadable, @NonNull View productIsDownloadableDivider,
      @NonNull WCSettingsOptionValueView productMenuOrder,
      @NonNull WCSettingsOptionValueView productPurchaseNote,
      @NonNull SwitchMaterial productReviewsAllowed, @NonNull View productReviewsAllowedDivider,
      @NonNull WCSettingsOptionValueView productSlug,
      @NonNull WCSettingsOptionValueView productStatus,
      @NonNull WCSettingsOptionValueView productVisibility) {
    this.rootView = rootView;
    this.productCatalogVisibility = productCatalogVisibility;
    this.productIsDownloadable = productIsDownloadable;
    this.productIsDownloadableDivider = productIsDownloadableDivider;
    this.productMenuOrder = productMenuOrder;
    this.productPurchaseNote = productPurchaseNote;
    this.productReviewsAllowed = productReviewsAllowed;
    this.productReviewsAllowedDivider = productReviewsAllowedDivider;
    this.productSlug = productSlug;
    this.productStatus = productStatus;
    this.productVisibility = productVisibility;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_product_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.productCatalogVisibility;
      WCSettingsOptionValueView productCatalogVisibility = ViewBindings.findChildViewById(rootView, id);
      if (productCatalogVisibility == null) {
        break missingId;
      }

      id = R.id.productIsDownloadable;
      SwitchMaterial productIsDownloadable = ViewBindings.findChildViewById(rootView, id);
      if (productIsDownloadable == null) {
        break missingId;
      }

      id = R.id.productIsDownloadableDivider;
      View productIsDownloadableDivider = ViewBindings.findChildViewById(rootView, id);
      if (productIsDownloadableDivider == null) {
        break missingId;
      }

      id = R.id.productMenuOrder;
      WCSettingsOptionValueView productMenuOrder = ViewBindings.findChildViewById(rootView, id);
      if (productMenuOrder == null) {
        break missingId;
      }

      id = R.id.productPurchaseNote;
      WCSettingsOptionValueView productPurchaseNote = ViewBindings.findChildViewById(rootView, id);
      if (productPurchaseNote == null) {
        break missingId;
      }

      id = R.id.productReviewsAllowed;
      SwitchMaterial productReviewsAllowed = ViewBindings.findChildViewById(rootView, id);
      if (productReviewsAllowed == null) {
        break missingId;
      }

      id = R.id.productReviewsAllowedDivider;
      View productReviewsAllowedDivider = ViewBindings.findChildViewById(rootView, id);
      if (productReviewsAllowedDivider == null) {
        break missingId;
      }

      id = R.id.productSlug;
      WCSettingsOptionValueView productSlug = ViewBindings.findChildViewById(rootView, id);
      if (productSlug == null) {
        break missingId;
      }

      id = R.id.productStatus;
      WCSettingsOptionValueView productStatus = ViewBindings.findChildViewById(rootView, id);
      if (productStatus == null) {
        break missingId;
      }

      id = R.id.productVisibility;
      WCSettingsOptionValueView productVisibility = ViewBindings.findChildViewById(rootView, id);
      if (productVisibility == null) {
        break missingId;
      }

      return new FragmentProductSettingsBinding((ScrollView) rootView, productCatalogVisibility,
          productIsDownloadable, productIsDownloadableDivider, productMenuOrder,
          productPurchaseNote, productReviewsAllowed, productReviewsAllowedDivider, productSlug,
          productStatus, productVisibility);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
