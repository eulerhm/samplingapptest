package com.google.android.gnd.model;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_TermsOfService extends TermsOfService {

  private final String id;

  private final String text;

  private AutoValue_TermsOfService(
      String id,
      String text) {
    this.id = id;
    this.text = text;
  }

  @Override
  public String getId() {
    return id;
  }

  @Override
  public String getText() {
    return text;
  }

  @Override
  public String toString() {
    return "TermsOfService{"
        + "id=" + id + ", "
        + "text=" + text
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof TermsOfService) {
      TermsOfService that = (TermsOfService) o;
      return this.id.equals(that.getId())
          && this.text.equals(that.getText());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= id.hashCode();
    h$ *= 1000003;
    h$ ^= text.hashCode();
    return h$;
  }

  static final class Builder extends TermsOfService.Builder {
    private String id;
    private String text;
    Builder() {
    }
    @Override
    public TermsOfService.Builder setId(String id) {
      if (id == null) {
        throw new NullPointerException("Null id");
      }
      this.id = id;
      return this;
    }
    @Override
    public TermsOfService.Builder setText(String text) {
      if (text == null) {
        throw new NullPointerException("Null text");
      }
      this.text = text;
      return this;
    }
    @Override
    public TermsOfService build() {
      String missing = "";
      if (this.id == null) {
        missing += " id";
      }
      if (this.text == null) {
        missing += " text";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_TermsOfService(
          this.id,
          this.text);
    }
  }

}
