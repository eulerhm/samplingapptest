// Generated by data binding compiler. Do not edit!
package com.google.samples.apps.iosched.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.lifecycle.LiveData;
import com.google.samples.apps.iosched.R;
import com.google.samples.apps.iosched.model.Moment;
import com.google.samples.apps.iosched.model.Theme;
import com.google.samples.apps.iosched.shared.data.signin.AuthenticatedUserInfo;
import com.google.samples.apps.iosched.ui.feed.FeedEventListener;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemFeedMomentBinding extends ViewDataBinding {
  @NonNull
  public final Button actionButton;

  @NonNull
  public final ImageView momentImage;

  @Bindable
  protected Moment mMoment;

  @Bindable
  protected LiveData<AuthenticatedUserInfo> mUserInfo;

  @Bindable
  protected LiveData<Theme> mTheme;

  @Bindable
  protected FeedEventListener mEventListener;

  protected ItemFeedMomentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button actionButton, ImageView momentImage) {
    super(_bindingComponent, _root, _localFieldCount);
    this.actionButton = actionButton;
    this.momentImage = momentImage;
  }

  public abstract void setMoment(@Nullable Moment moment);

  @Nullable
  public Moment getMoment() {
    return mMoment;
  }

  public abstract void setUserInfo(@Nullable LiveData<AuthenticatedUserInfo> userInfo);

  @Nullable
  public LiveData<AuthenticatedUserInfo> getUserInfo() {
    return mUserInfo;
  }

  public abstract void setTheme(@Nullable LiveData<Theme> theme);

  @Nullable
  public LiveData<Theme> getTheme() {
    return mTheme;
  }

  public abstract void setEventListener(@Nullable FeedEventListener eventListener);

  @Nullable
  public FeedEventListener getEventListener() {
    return mEventListener;
  }

  @NonNull
  public static ItemFeedMomentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_feed_moment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemFeedMomentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemFeedMomentBinding>inflateInternal(inflater, R.layout.item_feed_moment, root, attachToRoot, component);
  }

  @NonNull
  public static ItemFeedMomentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_feed_moment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemFeedMomentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemFeedMomentBinding>inflateInternal(inflater, R.layout.item_feed_moment, null, false, component);
  }

  public static ItemFeedMomentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemFeedMomentBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemFeedMomentBinding)bind(component, view, R.layout.item_feed_moment);
  }
}
