// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.ui.map;

import dagger.internal.Factory;
import javax.inject.Provider;
import org.owntracks.android.data.repos.ContactsRepo;
import org.owntracks.android.services.LocationProcessor;
import org.owntracks.android.services.MessageProcessor;
import org.owntracks.android.ui.base.navigator.Navigator;
import org.owntracks.android.ui.base.viewmodel.BaseViewModel_MembersInjector;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MapViewModel_Factory implements Factory<MapViewModel> {
  private final Provider<ContactsRepo> contactsRepoProvider;

  private final Provider<LocationProcessor> locationRepoProvider;

  private final Provider<MessageProcessor> messageProcessorProvider;

  private final Provider<Navigator> navigatorProvider;

  public MapViewModel_Factory(Provider<ContactsRepo> contactsRepoProvider,
      Provider<LocationProcessor> locationRepoProvider,
      Provider<MessageProcessor> messageProcessorProvider, Provider<Navigator> navigatorProvider) {
    this.contactsRepoProvider = contactsRepoProvider;
    this.locationRepoProvider = locationRepoProvider;
    this.messageProcessorProvider = messageProcessorProvider;
    this.navigatorProvider = navigatorProvider;
  }

  @Override
  public MapViewModel get() {
    MapViewModel instance = newInstance(contactsRepoProvider.get(), locationRepoProvider.get(), messageProcessorProvider.get());
    BaseViewModel_MembersInjector.injectNavigator(instance, navigatorProvider.get());
    return instance;
  }

  public static MapViewModel_Factory create(Provider<ContactsRepo> contactsRepoProvider,
      Provider<LocationProcessor> locationRepoProvider,
      Provider<MessageProcessor> messageProcessorProvider, Provider<Navigator> navigatorProvider) {
    return new MapViewModel_Factory(contactsRepoProvider, locationRepoProvider, messageProcessorProvider, navigatorProvider);
  }

  public static MapViewModel newInstance(ContactsRepo contactsRepo, LocationProcessor locationRepo,
      MessageProcessor messageProcessor) {
    return new MapViewModel(contactsRepo, locationRepo, messageProcessor);
  }
}
