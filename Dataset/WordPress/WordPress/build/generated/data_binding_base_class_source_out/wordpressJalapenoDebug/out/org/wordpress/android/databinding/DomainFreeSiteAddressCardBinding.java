// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class DomainFreeSiteAddressCardBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialTextView primarySiteAddress;

  @NonNull
  public final ShapeableImageView primarySiteAddressActions;

  @NonNull
  public final MaterialTextView primarySiteAddressCaption;

  @NonNull
  public final MaterialCardView primarySiteAddressCard;

  @NonNull
  public final Chip primarySiteAddressChip;

  private DomainFreeSiteAddressCardBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialTextView primarySiteAddress,
      @NonNull ShapeableImageView primarySiteAddressActions,
      @NonNull MaterialTextView primarySiteAddressCaption,
      @NonNull MaterialCardView primarySiteAddressCard, @NonNull Chip primarySiteAddressChip) {
    this.rootView = rootView;
    this.primarySiteAddress = primarySiteAddress;
    this.primarySiteAddressActions = primarySiteAddressActions;
    this.primarySiteAddressCaption = primarySiteAddressCaption;
    this.primarySiteAddressCard = primarySiteAddressCard;
    this.primarySiteAddressChip = primarySiteAddressChip;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DomainFreeSiteAddressCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DomainFreeSiteAddressCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.domain_free_site_address_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DomainFreeSiteAddressCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.primary_site_address;
      MaterialTextView primarySiteAddress = ViewBindings.findChildViewById(rootView, id);
      if (primarySiteAddress == null) {
        break missingId;
      }

      id = R.id.primary_site_address_actions;
      ShapeableImageView primarySiteAddressActions = ViewBindings.findChildViewById(rootView, id);
      if (primarySiteAddressActions == null) {
        break missingId;
      }

      id = R.id.primary_site_address_caption;
      MaterialTextView primarySiteAddressCaption = ViewBindings.findChildViewById(rootView, id);
      if (primarySiteAddressCaption == null) {
        break missingId;
      }

      MaterialCardView primarySiteAddressCard = (MaterialCardView) rootView;

      id = R.id.primary_site_address_chip;
      Chip primarySiteAddressChip = ViewBindings.findChildViewById(rootView, id);
      if (primarySiteAddressChip == null) {
        break missingId;
      }

      return new DomainFreeSiteAddressCardBinding((MaterialCardView) rootView, primarySiteAddress,
          primarySiteAddressActions, primarySiteAddressCaption, primarySiteAddressCard,
          primarySiteAddressChip);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
