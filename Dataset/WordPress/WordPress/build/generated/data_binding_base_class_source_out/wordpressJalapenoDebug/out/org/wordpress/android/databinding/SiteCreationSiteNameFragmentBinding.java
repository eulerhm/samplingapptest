// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class SiteCreationSiteNameFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final MaterialButton continueButton;

  @NonNull
  public final FrameLayout continueButtonContainer;

  @NonNull
  public final TextInputEditText input;

  @NonNull
  public final TextInputLayout inputContainer;

  @NonNull
  public final SiteCreationHeaderV2Binding siteCreationSiteNameHeader;

  @NonNull
  public final SiteCreationIntentsTitlebarBinding siteCreationSiteNameTitlebar;

  @NonNull
  public final MaterialToolbar toolbar;

  private SiteCreationSiteNameFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull CollapsingToolbarLayout collapsingToolbar,
      @NonNull MaterialButton continueButton, @NonNull FrameLayout continueButtonContainer,
      @NonNull TextInputEditText input, @NonNull TextInputLayout inputContainer,
      @NonNull SiteCreationHeaderV2Binding siteCreationSiteNameHeader,
      @NonNull SiteCreationIntentsTitlebarBinding siteCreationSiteNameTitlebar,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.collapsingToolbar = collapsingToolbar;
    this.continueButton = continueButton;
    this.continueButtonContainer = continueButtonContainer;
    this.input = input;
    this.inputContainer = inputContainer;
    this.siteCreationSiteNameHeader = siteCreationSiteNameHeader;
    this.siteCreationSiteNameTitlebar = siteCreationSiteNameTitlebar;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SiteCreationSiteNameFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SiteCreationSiteNameFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.site_creation_site_name_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SiteCreationSiteNameFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.continue_button;
      MaterialButton continueButton = ViewBindings.findChildViewById(rootView, id);
      if (continueButton == null) {
        break missingId;
      }

      id = R.id.continue_button_container;
      FrameLayout continueButtonContainer = ViewBindings.findChildViewById(rootView, id);
      if (continueButtonContainer == null) {
        break missingId;
      }

      id = R.id.input;
      TextInputEditText input = ViewBindings.findChildViewById(rootView, id);
      if (input == null) {
        break missingId;
      }

      id = R.id.input_container;
      TextInputLayout inputContainer = ViewBindings.findChildViewById(rootView, id);
      if (inputContainer == null) {
        break missingId;
      }

      id = R.id.site_creation_site_name_header;
      View siteCreationSiteNameHeader = ViewBindings.findChildViewById(rootView, id);
      if (siteCreationSiteNameHeader == null) {
        break missingId;
      }
      SiteCreationHeaderV2Binding binding_siteCreationSiteNameHeader = SiteCreationHeaderV2Binding.bind(siteCreationSiteNameHeader);

      id = R.id.site_creation_site_name_titlebar;
      View siteCreationSiteNameTitlebar = ViewBindings.findChildViewById(rootView, id);
      if (siteCreationSiteNameTitlebar == null) {
        break missingId;
      }
      SiteCreationIntentsTitlebarBinding binding_siteCreationSiteNameTitlebar = SiteCreationIntentsTitlebarBinding.bind(siteCreationSiteNameTitlebar);

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new SiteCreationSiteNameFragmentBinding((CoordinatorLayout) rootView, appBarLayout,
          collapsingToolbar, continueButton, continueButtonContainer, input, inputContainer,
          binding_siteCreationSiteNameHeader, binding_siteCreationSiteNameTitlebar, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
