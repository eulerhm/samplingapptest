// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FeatureAnnouncementDialogFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton closeFeatureAnnouncementButton;

  @NonNull
  public final MaterialTextView featureAnnouncementDialogHeading;

  @NonNull
  public final RecyclerView featureList;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineStart;

  private FeatureAnnouncementDialogFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton closeFeatureAnnouncementButton,
      @NonNull MaterialTextView featureAnnouncementDialogHeading, @NonNull RecyclerView featureList,
      @NonNull Guideline guidelineEnd, @NonNull Guideline guidelineStart) {
    this.rootView = rootView;
    this.closeFeatureAnnouncementButton = closeFeatureAnnouncementButton;
    this.featureAnnouncementDialogHeading = featureAnnouncementDialogHeading;
    this.featureList = featureList;
    this.guidelineEnd = guidelineEnd;
    this.guidelineStart = guidelineStart;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FeatureAnnouncementDialogFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FeatureAnnouncementDialogFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.feature_announcement_dialog_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FeatureAnnouncementDialogFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close_feature_announcement_button;
      MaterialButton closeFeatureAnnouncementButton = ViewBindings.findChildViewById(rootView, id);
      if (closeFeatureAnnouncementButton == null) {
        break missingId;
      }

      id = R.id.feature_announcement_dialog_heading;
      MaterialTextView featureAnnouncementDialogHeading = ViewBindings.findChildViewById(rootView, id);
      if (featureAnnouncementDialogHeading == null) {
        break missingId;
      }

      id = R.id.feature_list;
      RecyclerView featureList = ViewBindings.findChildViewById(rootView, id);
      if (featureList == null) {
        break missingId;
      }

      id = R.id.guidelineEnd;
      Guideline guidelineEnd = ViewBindings.findChildViewById(rootView, id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guidelineStart;
      Guideline guidelineStart = ViewBindings.findChildViewById(rootView, id);
      if (guidelineStart == null) {
        break missingId;
      }

      return new FeatureAnnouncementDialogFragmentBinding((ConstraintLayout) rootView,
          closeFeatureAnnouncementButton, featureAnnouncementDialogHeading, featureList,
          guidelineEnd, guidelineStart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
