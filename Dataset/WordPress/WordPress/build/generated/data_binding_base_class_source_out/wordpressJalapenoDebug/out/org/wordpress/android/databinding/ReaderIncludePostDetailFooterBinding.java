// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.reader.views.ReaderIconCountView;

public final class ReaderIncludePostDetailFooterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView bookmark;

  @NonNull
  public final ReaderIconCountView countComments;

  @NonNull
  public final ReaderIconCountView countLikes;

  @NonNull
  public final View dividerFooter;

  @NonNull
  public final ConstraintLayout layoutPostDetailFooter;

  @NonNull
  public final ReaderIconCountView reblog;

  private ReaderIncludePostDetailFooterBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView bookmark, @NonNull ReaderIconCountView countComments,
      @NonNull ReaderIconCountView countLikes, @NonNull View dividerFooter,
      @NonNull ConstraintLayout layoutPostDetailFooter, @NonNull ReaderIconCountView reblog) {
    this.rootView = rootView;
    this.bookmark = bookmark;
    this.countComments = countComments;
    this.countLikes = countLikes;
    this.dividerFooter = dividerFooter;
    this.layoutPostDetailFooter = layoutPostDetailFooter;
    this.reblog = reblog;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReaderIncludePostDetailFooterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReaderIncludePostDetailFooterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reader_include_post_detail_footer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReaderIncludePostDetailFooterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookmark;
      ImageView bookmark = ViewBindings.findChildViewById(rootView, id);
      if (bookmark == null) {
        break missingId;
      }

      id = R.id.count_comments;
      ReaderIconCountView countComments = ViewBindings.findChildViewById(rootView, id);
      if (countComments == null) {
        break missingId;
      }

      id = R.id.count_likes;
      ReaderIconCountView countLikes = ViewBindings.findChildViewById(rootView, id);
      if (countLikes == null) {
        break missingId;
      }

      id = R.id.divider_footer;
      View dividerFooter = ViewBindings.findChildViewById(rootView, id);
      if (dividerFooter == null) {
        break missingId;
      }

      ConstraintLayout layoutPostDetailFooter = (ConstraintLayout) rootView;

      id = R.id.reblog;
      ReaderIconCountView reblog = ViewBindings.findChildViewById(rootView, id);
      if (reblog == null) {
        break missingId;
      }

      return new ReaderIncludePostDetailFooterBinding((ConstraintLayout) rootView, bookmark,
          countComments, countLikes, dividerFooter, layoutPostDetailFooter, reblog);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
