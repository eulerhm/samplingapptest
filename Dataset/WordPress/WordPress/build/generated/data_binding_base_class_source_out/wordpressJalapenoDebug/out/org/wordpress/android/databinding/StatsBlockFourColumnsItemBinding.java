// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class StatsBlockFourColumnsItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final StatsBlockSelectableColumnBinding column1;

  @NonNull
  public final StatsBlockSelectableColumnBinding column2;

  @NonNull
  public final StatsBlockSelectableColumnBinding column3;

  @NonNull
  public final StatsBlockSelectableColumnBinding column4;

  @NonNull
  public final LinearLayout columnContainer;

  private StatsBlockFourColumnsItemBinding(@NonNull LinearLayout rootView,
      @NonNull StatsBlockSelectableColumnBinding column1,
      @NonNull StatsBlockSelectableColumnBinding column2,
      @NonNull StatsBlockSelectableColumnBinding column3,
      @NonNull StatsBlockSelectableColumnBinding column4, @NonNull LinearLayout columnContainer) {
    this.rootView = rootView;
    this.column1 = column1;
    this.column2 = column2;
    this.column3 = column3;
    this.column4 = column4;
    this.columnContainer = columnContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StatsBlockFourColumnsItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StatsBlockFourColumnsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.stats_block_four_columns_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StatsBlockFourColumnsItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.column1;
      View column1 = ViewBindings.findChildViewById(rootView, id);
      if (column1 == null) {
        break missingId;
      }
      StatsBlockSelectableColumnBinding binding_column1 = StatsBlockSelectableColumnBinding.bind(column1);

      id = R.id.column2;
      View column2 = ViewBindings.findChildViewById(rootView, id);
      if (column2 == null) {
        break missingId;
      }
      StatsBlockSelectableColumnBinding binding_column2 = StatsBlockSelectableColumnBinding.bind(column2);

      id = R.id.column3;
      View column3 = ViewBindings.findChildViewById(rootView, id);
      if (column3 == null) {
        break missingId;
      }
      StatsBlockSelectableColumnBinding binding_column3 = StatsBlockSelectableColumnBinding.bind(column3);

      id = R.id.column4;
      View column4 = ViewBindings.findChildViewById(rootView, id);
      if (column4 == null) {
        break missingId;
      }
      StatsBlockSelectableColumnBinding binding_column4 = StatsBlockSelectableColumnBinding.bind(column4);

      LinearLayout columnContainer = (LinearLayout) rootView;

      return new StatsBlockFourColumnsItemBinding((LinearLayout) rootView, binding_column1,
          binding_column2, binding_column3, binding_column4, columnContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
