// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class QuickStartTaskTypeItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ProgressBar itemProgress;

  @NonNull
  public final ConstraintLayout itemRoot;

  @NonNull
  public final MaterialTextView itemSubtitle;

  @NonNull
  public final MaterialTextView itemTitle;

  private QuickStartTaskTypeItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ProgressBar itemProgress, @NonNull ConstraintLayout itemRoot,
      @NonNull MaterialTextView itemSubtitle, @NonNull MaterialTextView itemTitle) {
    this.rootView = rootView;
    this.itemProgress = itemProgress;
    this.itemRoot = itemRoot;
    this.itemSubtitle = itemSubtitle;
    this.itemTitle = itemTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static QuickStartTaskTypeItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuickStartTaskTypeItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.quick_start_task_type_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuickStartTaskTypeItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_progress;
      ProgressBar itemProgress = ViewBindings.findChildViewById(rootView, id);
      if (itemProgress == null) {
        break missingId;
      }

      ConstraintLayout itemRoot = (ConstraintLayout) rootView;

      id = R.id.item_subtitle;
      MaterialTextView itemSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (itemSubtitle == null) {
        break missingId;
      }

      id = R.id.item_title;
      MaterialTextView itemTitle = ViewBindings.findChildViewById(rootView, id);
      if (itemTitle == null) {
        break missingId;
      }

      return new QuickStartTaskTypeItemBinding((ConstraintLayout) rootView, itemProgress, itemRoot,
          itemSubtitle, itemTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
