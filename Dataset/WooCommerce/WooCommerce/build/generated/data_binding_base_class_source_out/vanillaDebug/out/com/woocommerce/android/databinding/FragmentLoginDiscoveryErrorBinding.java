// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.WCSingleOptionTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginDiscoveryErrorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialTextView discoveryErrorMessage;

  @NonNull
  public final MaterialTextView discoveryErrorTipMessage;

  @NonNull
  public final MaterialTextView discoveryErrorTitle;

  @NonNull
  public final WCSingleOptionTextView discoveryTroubleshootOptionView;

  @NonNull
  public final WCSingleOptionTextView discoveryTryOptionView;

  @NonNull
  public final WCSingleOptionTextView discoveryWordpressOptionView;

  @NonNull
  public final View view1;

  @NonNull
  public final View view2;

  private FragmentLoginDiscoveryErrorBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialTextView discoveryErrorMessage,
      @NonNull MaterialTextView discoveryErrorTipMessage,
      @NonNull MaterialTextView discoveryErrorTitle,
      @NonNull WCSingleOptionTextView discoveryTroubleshootOptionView,
      @NonNull WCSingleOptionTextView discoveryTryOptionView,
      @NonNull WCSingleOptionTextView discoveryWordpressOptionView, @NonNull View view1,
      @NonNull View view2) {
    this.rootView = rootView;
    this.discoveryErrorMessage = discoveryErrorMessage;
    this.discoveryErrorTipMessage = discoveryErrorTipMessage;
    this.discoveryErrorTitle = discoveryErrorTitle;
    this.discoveryTroubleshootOptionView = discoveryTroubleshootOptionView;
    this.discoveryTryOptionView = discoveryTryOptionView;
    this.discoveryWordpressOptionView = discoveryWordpressOptionView;
    this.view1 = view1;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginDiscoveryErrorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginDiscoveryErrorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login_discovery_error, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginDiscoveryErrorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.discovery_error_message;
      MaterialTextView discoveryErrorMessage = ViewBindings.findChildViewById(rootView, id);
      if (discoveryErrorMessage == null) {
        break missingId;
      }

      id = R.id.discovery_error_tip_message;
      MaterialTextView discoveryErrorTipMessage = ViewBindings.findChildViewById(rootView, id);
      if (discoveryErrorTipMessage == null) {
        break missingId;
      }

      id = R.id.discovery_error_title;
      MaterialTextView discoveryErrorTitle = ViewBindings.findChildViewById(rootView, id);
      if (discoveryErrorTitle == null) {
        break missingId;
      }

      id = R.id.discovery_troubleshoot_option_view;
      WCSingleOptionTextView discoveryTroubleshootOptionView = ViewBindings.findChildViewById(rootView, id);
      if (discoveryTroubleshootOptionView == null) {
        break missingId;
      }

      id = R.id.discovery_try_option_view;
      WCSingleOptionTextView discoveryTryOptionView = ViewBindings.findChildViewById(rootView, id);
      if (discoveryTryOptionView == null) {
        break missingId;
      }

      id = R.id.discovery_wordpress_option_view;
      WCSingleOptionTextView discoveryWordpressOptionView = ViewBindings.findChildViewById(rootView, id);
      if (discoveryWordpressOptionView == null) {
        break missingId;
      }

      id = R.id.view1;
      View view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new FragmentLoginDiscoveryErrorBinding((LinearLayout) rootView, discoveryErrorMessage,
          discoveryErrorTipMessage, discoveryErrorTitle, discoveryTroubleshootOptionView,
          discoveryTryOptionView, discoveryWordpressOptionView, view1, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
