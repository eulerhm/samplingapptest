// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.orders.creation;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.ui.orders.details.OrderDetailRepository;
import com.woocommerce.android.ui.products.ParameterRepository;
import com.woocommerce.android.util.CoroutineDispatchers;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OrderCreationViewModel_Factory implements Factory<OrderCreationViewModel> {
  private final Provider<SavedStateHandle> savedStateProvider;

  private final Provider<CoroutineDispatchers> dispatchersProvider;

  private final Provider<OrderDetailRepository> orderDetailRepositoryProvider;

  private final Provider<OrderCreationRepository> orderCreationRepositoryProvider;

  private final Provider<MapItemToProductUiModel> mapItemToProductUiModelProvider;

  private final Provider<CreateOrUpdateOrderDraft> createOrUpdateOrderDraftProvider;

  private final Provider<CreateOrderItem> createOrderItemProvider;

  private final Provider<ParameterRepository> parameterRepositoryProvider;

  public OrderCreationViewModel_Factory(Provider<SavedStateHandle> savedStateProvider,
      Provider<CoroutineDispatchers> dispatchersProvider,
      Provider<OrderDetailRepository> orderDetailRepositoryProvider,
      Provider<OrderCreationRepository> orderCreationRepositoryProvider,
      Provider<MapItemToProductUiModel> mapItemToProductUiModelProvider,
      Provider<CreateOrUpdateOrderDraft> createOrUpdateOrderDraftProvider,
      Provider<CreateOrderItem> createOrderItemProvider,
      Provider<ParameterRepository> parameterRepositoryProvider) {
    this.savedStateProvider = savedStateProvider;
    this.dispatchersProvider = dispatchersProvider;
    this.orderDetailRepositoryProvider = orderDetailRepositoryProvider;
    this.orderCreationRepositoryProvider = orderCreationRepositoryProvider;
    this.mapItemToProductUiModelProvider = mapItemToProductUiModelProvider;
    this.createOrUpdateOrderDraftProvider = createOrUpdateOrderDraftProvider;
    this.createOrderItemProvider = createOrderItemProvider;
    this.parameterRepositoryProvider = parameterRepositoryProvider;
  }

  @Override
  public OrderCreationViewModel get() {
    return newInstance(savedStateProvider.get(), dispatchersProvider.get(), orderDetailRepositoryProvider.get(), orderCreationRepositoryProvider.get(), mapItemToProductUiModelProvider.get(), createOrUpdateOrderDraftProvider.get(), createOrderItemProvider.get(), parameterRepositoryProvider.get());
  }

  public static OrderCreationViewModel_Factory create(Provider<SavedStateHandle> savedStateProvider,
      Provider<CoroutineDispatchers> dispatchersProvider,
      Provider<OrderDetailRepository> orderDetailRepositoryProvider,
      Provider<OrderCreationRepository> orderCreationRepositoryProvider,
      Provider<MapItemToProductUiModel> mapItemToProductUiModelProvider,
      Provider<CreateOrUpdateOrderDraft> createOrUpdateOrderDraftProvider,
      Provider<CreateOrderItem> createOrderItemProvider,
      Provider<ParameterRepository> parameterRepositoryProvider) {
    return new OrderCreationViewModel_Factory(savedStateProvider, dispatchersProvider, orderDetailRepositoryProvider, orderCreationRepositoryProvider, mapItemToProductUiModelProvider, createOrUpdateOrderDraftProvider, createOrderItemProvider, parameterRepositoryProvider);
  }

  public static OrderCreationViewModel newInstance(SavedStateHandle savedState,
      CoroutineDispatchers dispatchers, OrderDetailRepository orderDetailRepository,
      OrderCreationRepository orderCreationRepository,
      MapItemToProductUiModel mapItemToProductUiModel,
      CreateOrUpdateOrderDraft createOrUpdateOrderDraft, CreateOrderItem createOrderItem,
      ParameterRepository parameterRepository) {
    return new OrderCreationViewModel(savedState, dispatchers, orderDetailRepository, orderCreationRepository, mapItemToProductUiModel, createOrUpdateOrderDraft, createOrderItem, parameterRepository);
  }
}
