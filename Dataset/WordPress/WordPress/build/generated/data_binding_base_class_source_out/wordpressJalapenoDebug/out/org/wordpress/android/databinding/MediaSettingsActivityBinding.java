// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.SeekBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.WPNestedScrollView;

public final class MediaSettingsActivityBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppCompatSpinner alignmentSpinner;

  @NonNull
  public final MaterialTextView alignmentSpinnerLabel;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final View dividerDimensions;

  @NonNull
  public final View dividerDuration;

  @NonNull
  public final View dividerFiletype;

  @NonNull
  public final TextInputEditText editAltText;

  @NonNull
  public final TextInputLayout editAltTextLayout;

  @NonNull
  public final TextInputEditText editCaption;

  @NonNull
  public final TextInputLayout editCaptionContainer;

  @NonNull
  public final TextInputEditText editDescription;

  @NonNull
  public final TextInputLayout editDescriptionContainer;

  @NonNull
  public final TextInputEditText editLink;

  @NonNull
  public final TextInputLayout editLinkContainer;

  @NonNull
  public final CheckBox editLinkTargetNewWidnowCheckbox;

  @NonNull
  public final TextInputEditText editTitle;

  @NonNull
  public final FloatingActionButton fabButton;

  @NonNull
  public final ImageView imageGradientScrim;

  @NonNull
  public final ImageView imagePlay;

  @NonNull
  public final ImageView imagePreview;

  @NonNull
  public final MaterialTextView imageSizeHint;

  @NonNull
  public final SeekBar imageSizeSeekbar;

  @NonNull
  public final LinearLayout mediaCustomisationOptions;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final WPNestedScrollView scrollView;

  @NonNull
  public final MaterialButton textCopyUrl;

  @NonNull
  public final MaterialTextView textDuration;

  @NonNull
  public final MaterialTextView textDurationLabel;

  @NonNull
  public final MaterialTextView textFilename;

  @NonNull
  public final MaterialTextView textFiletype;

  @NonNull
  public final MaterialTextView textImageDimensions;

  @NonNull
  public final MaterialTextView textImageDimensionsLabel;

  @NonNull
  public final MaterialTextView textUploadDate;

  @NonNull
  public final MaterialTextView textUploadDateLabel;

  @NonNull
  public final MaterialTextView textUrl;

  @NonNull
  public final MaterialToolbar toolbar;

  private MediaSettingsActivityBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppCompatSpinner alignmentSpinner, @NonNull MaterialTextView alignmentSpinnerLabel,
      @NonNull AppBarLayout appBarLayout, @NonNull CollapsingToolbarLayout collapsingToolbar,
      @NonNull View dividerDimensions, @NonNull View dividerDuration, @NonNull View dividerFiletype,
      @NonNull TextInputEditText editAltText, @NonNull TextInputLayout editAltTextLayout,
      @NonNull TextInputEditText editCaption, @NonNull TextInputLayout editCaptionContainer,
      @NonNull TextInputEditText editDescription, @NonNull TextInputLayout editDescriptionContainer,
      @NonNull TextInputEditText editLink, @NonNull TextInputLayout editLinkContainer,
      @NonNull CheckBox editLinkTargetNewWidnowCheckbox, @NonNull TextInputEditText editTitle,
      @NonNull FloatingActionButton fabButton, @NonNull ImageView imageGradientScrim,
      @NonNull ImageView imagePlay, @NonNull ImageView imagePreview,
      @NonNull MaterialTextView imageSizeHint, @NonNull SeekBar imageSizeSeekbar,
      @NonNull LinearLayout mediaCustomisationOptions, @NonNull ProgressBar progress,
      @NonNull WPNestedScrollView scrollView, @NonNull MaterialButton textCopyUrl,
      @NonNull MaterialTextView textDuration, @NonNull MaterialTextView textDurationLabel,
      @NonNull MaterialTextView textFilename, @NonNull MaterialTextView textFiletype,
      @NonNull MaterialTextView textImageDimensions,
      @NonNull MaterialTextView textImageDimensionsLabel, @NonNull MaterialTextView textUploadDate,
      @NonNull MaterialTextView textUploadDateLabel, @NonNull MaterialTextView textUrl,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.alignmentSpinner = alignmentSpinner;
    this.alignmentSpinnerLabel = alignmentSpinnerLabel;
    this.appBarLayout = appBarLayout;
    this.collapsingToolbar = collapsingToolbar;
    this.dividerDimensions = dividerDimensions;
    this.dividerDuration = dividerDuration;
    this.dividerFiletype = dividerFiletype;
    this.editAltText = editAltText;
    this.editAltTextLayout = editAltTextLayout;
    this.editCaption = editCaption;
    this.editCaptionContainer = editCaptionContainer;
    this.editDescription = editDescription;
    this.editDescriptionContainer = editDescriptionContainer;
    this.editLink = editLink;
    this.editLinkContainer = editLinkContainer;
    this.editLinkTargetNewWidnowCheckbox = editLinkTargetNewWidnowCheckbox;
    this.editTitle = editTitle;
    this.fabButton = fabButton;
    this.imageGradientScrim = imageGradientScrim;
    this.imagePlay = imagePlay;
    this.imagePreview = imagePreview;
    this.imageSizeHint = imageSizeHint;
    this.imageSizeSeekbar = imageSizeSeekbar;
    this.mediaCustomisationOptions = mediaCustomisationOptions;
    this.progress = progress;
    this.scrollView = scrollView;
    this.textCopyUrl = textCopyUrl;
    this.textDuration = textDuration;
    this.textDurationLabel = textDurationLabel;
    this.textFilename = textFilename;
    this.textFiletype = textFiletype;
    this.textImageDimensions = textImageDimensions;
    this.textImageDimensionsLabel = textImageDimensionsLabel;
    this.textUploadDate = textUploadDate;
    this.textUploadDateLabel = textUploadDateLabel;
    this.textUrl = textUrl;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MediaSettingsActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MediaSettingsActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.media_settings_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MediaSettingsActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alignment_spinner;
      AppCompatSpinner alignmentSpinner = ViewBindings.findChildViewById(rootView, id);
      if (alignmentSpinner == null) {
        break missingId;
      }

      id = R.id.alignment_spinner_label;
      MaterialTextView alignmentSpinnerLabel = ViewBindings.findChildViewById(rootView, id);
      if (alignmentSpinnerLabel == null) {
        break missingId;
      }

      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.divider_dimensions;
      View dividerDimensions = ViewBindings.findChildViewById(rootView, id);
      if (dividerDimensions == null) {
        break missingId;
      }

      id = R.id.divider_duration;
      View dividerDuration = ViewBindings.findChildViewById(rootView, id);
      if (dividerDuration == null) {
        break missingId;
      }

      id = R.id.divider_filetype;
      View dividerFiletype = ViewBindings.findChildViewById(rootView, id);
      if (dividerFiletype == null) {
        break missingId;
      }

      id = R.id.edit_alt_text;
      TextInputEditText editAltText = ViewBindings.findChildViewById(rootView, id);
      if (editAltText == null) {
        break missingId;
      }

      id = R.id.edit_alt_text_layout;
      TextInputLayout editAltTextLayout = ViewBindings.findChildViewById(rootView, id);
      if (editAltTextLayout == null) {
        break missingId;
      }

      id = R.id.edit_caption;
      TextInputEditText editCaption = ViewBindings.findChildViewById(rootView, id);
      if (editCaption == null) {
        break missingId;
      }

      id = R.id.edit_caption_container;
      TextInputLayout editCaptionContainer = ViewBindings.findChildViewById(rootView, id);
      if (editCaptionContainer == null) {
        break missingId;
      }

      id = R.id.edit_description;
      TextInputEditText editDescription = ViewBindings.findChildViewById(rootView, id);
      if (editDescription == null) {
        break missingId;
      }

      id = R.id.edit_description_container;
      TextInputLayout editDescriptionContainer = ViewBindings.findChildViewById(rootView, id);
      if (editDescriptionContainer == null) {
        break missingId;
      }

      id = R.id.edit_link;
      TextInputEditText editLink = ViewBindings.findChildViewById(rootView, id);
      if (editLink == null) {
        break missingId;
      }

      id = R.id.edit_link_container;
      TextInputLayout editLinkContainer = ViewBindings.findChildViewById(rootView, id);
      if (editLinkContainer == null) {
        break missingId;
      }

      id = R.id.edit_link_target_new_widnow_checkbox;
      CheckBox editLinkTargetNewWidnowCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (editLinkTargetNewWidnowCheckbox == null) {
        break missingId;
      }

      id = R.id.edit_title;
      TextInputEditText editTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTitle == null) {
        break missingId;
      }

      id = R.id.fab_button;
      FloatingActionButton fabButton = ViewBindings.findChildViewById(rootView, id);
      if (fabButton == null) {
        break missingId;
      }

      id = R.id.image_gradient_scrim;
      ImageView imageGradientScrim = ViewBindings.findChildViewById(rootView, id);
      if (imageGradientScrim == null) {
        break missingId;
      }

      id = R.id.image_play;
      ImageView imagePlay = ViewBindings.findChildViewById(rootView, id);
      if (imagePlay == null) {
        break missingId;
      }

      id = R.id.image_preview;
      ImageView imagePreview = ViewBindings.findChildViewById(rootView, id);
      if (imagePreview == null) {
        break missingId;
      }

      id = R.id.image_size_hint;
      MaterialTextView imageSizeHint = ViewBindings.findChildViewById(rootView, id);
      if (imageSizeHint == null) {
        break missingId;
      }

      id = R.id.image_size_seekbar;
      SeekBar imageSizeSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (imageSizeSeekbar == null) {
        break missingId;
      }

      id = R.id.media_customisation_options;
      LinearLayout mediaCustomisationOptions = ViewBindings.findChildViewById(rootView, id);
      if (mediaCustomisationOptions == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      WPNestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.text_copy_url;
      MaterialButton textCopyUrl = ViewBindings.findChildViewById(rootView, id);
      if (textCopyUrl == null) {
        break missingId;
      }

      id = R.id.text_duration;
      MaterialTextView textDuration = ViewBindings.findChildViewById(rootView, id);
      if (textDuration == null) {
        break missingId;
      }

      id = R.id.text_duration_label;
      MaterialTextView textDurationLabel = ViewBindings.findChildViewById(rootView, id);
      if (textDurationLabel == null) {
        break missingId;
      }

      id = R.id.text_filename;
      MaterialTextView textFilename = ViewBindings.findChildViewById(rootView, id);
      if (textFilename == null) {
        break missingId;
      }

      id = R.id.text_filetype;
      MaterialTextView textFiletype = ViewBindings.findChildViewById(rootView, id);
      if (textFiletype == null) {
        break missingId;
      }

      id = R.id.text_image_dimensions;
      MaterialTextView textImageDimensions = ViewBindings.findChildViewById(rootView, id);
      if (textImageDimensions == null) {
        break missingId;
      }

      id = R.id.text_image_dimensions_label;
      MaterialTextView textImageDimensionsLabel = ViewBindings.findChildViewById(rootView, id);
      if (textImageDimensionsLabel == null) {
        break missingId;
      }

      id = R.id.text_upload_date;
      MaterialTextView textUploadDate = ViewBindings.findChildViewById(rootView, id);
      if (textUploadDate == null) {
        break missingId;
      }

      id = R.id.text_upload_date_label;
      MaterialTextView textUploadDateLabel = ViewBindings.findChildViewById(rootView, id);
      if (textUploadDateLabel == null) {
        break missingId;
      }

      id = R.id.text_url;
      MaterialTextView textUrl = ViewBindings.findChildViewById(rootView, id);
      if (textUrl == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new MediaSettingsActivityBinding((CoordinatorLayout) rootView, alignmentSpinner,
          alignmentSpinnerLabel, appBarLayout, collapsingToolbar, dividerDimensions,
          dividerDuration, dividerFiletype, editAltText, editAltTextLayout, editCaption,
          editCaptionContainer, editDescription, editDescriptionContainer, editLink,
          editLinkContainer, editLinkTargetNewWidnowCheckbox, editTitle, fabButton,
          imageGradientScrim, imagePlay, imagePreview, imageSizeHint, imageSizeSeekbar,
          mediaCustomisationOptions, progress, scrollView, textCopyUrl, textDuration,
          textDurationLabel, textFilename, textFiletype, textImageDimensions,
          textImageDimensionsLabel, textUploadDate, textUploadDateLabel, textUrl, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
