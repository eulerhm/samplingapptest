// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class ScanListThreatItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final View iconWrapper;

  @NonNull
  public final ProgressBar loading;

  @NonNull
  public final MaterialTextView threatHeader;

  @NonNull
  public final ImageView threatIcon;

  @NonNull
  public final MaterialTextView threatSubHeader;

  private ScanListThreatItemBinding(@NonNull ConstraintLayout rootView, @NonNull View divider,
      @NonNull View iconWrapper, @NonNull ProgressBar loading,
      @NonNull MaterialTextView threatHeader, @NonNull ImageView threatIcon,
      @NonNull MaterialTextView threatSubHeader) {
    this.rootView = rootView;
    this.divider = divider;
    this.iconWrapper = iconWrapper;
    this.loading = loading;
    this.threatHeader = threatHeader;
    this.threatIcon = threatIcon;
    this.threatSubHeader = threatSubHeader;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ScanListThreatItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScanListThreatItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.scan_list_threat_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScanListThreatItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.icon_wrapper;
      View iconWrapper = ViewBindings.findChildViewById(rootView, id);
      if (iconWrapper == null) {
        break missingId;
      }

      id = R.id.loading;
      ProgressBar loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.threat_header;
      MaterialTextView threatHeader = ViewBindings.findChildViewById(rootView, id);
      if (threatHeader == null) {
        break missingId;
      }

      id = R.id.threat_icon;
      ImageView threatIcon = ViewBindings.findChildViewById(rootView, id);
      if (threatIcon == null) {
        break missingId;
      }

      id = R.id.threat_sub_header;
      MaterialTextView threatSubHeader = ViewBindings.findChildViewById(rootView, id);
      if (threatSubHeader == null) {
        break missingId;
      }

      return new ScanListThreatItemBinding((ConstraintLayout) rootView, divider, iconWrapper,
          loading, threatHeader, threatIcon, threatSubHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
