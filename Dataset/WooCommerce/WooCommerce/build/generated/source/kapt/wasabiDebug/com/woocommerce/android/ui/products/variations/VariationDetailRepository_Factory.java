// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.products.variations;

import com.woocommerce.android.tools.SelectedSite;
import com.woocommerce.android.util.CoroutineDispatchers;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.WCProductStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VariationDetailRepository_Factory implements Factory<VariationDetailRepository> {
  private final Provider<WCProductStore> productStoreProvider;

  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<CoroutineDispatchers> coroutineDispatchersProvider;

  public VariationDetailRepository_Factory(Provider<WCProductStore> productStoreProvider,
      Provider<SelectedSite> selectedSiteProvider,
      Provider<CoroutineDispatchers> coroutineDispatchersProvider) {
    this.productStoreProvider = productStoreProvider;
    this.selectedSiteProvider = selectedSiteProvider;
    this.coroutineDispatchersProvider = coroutineDispatchersProvider;
  }

  @Override
  public VariationDetailRepository get() {
    return newInstance(productStoreProvider.get(), selectedSiteProvider.get(), coroutineDispatchersProvider.get());
  }

  public static VariationDetailRepository_Factory create(
      Provider<WCProductStore> productStoreProvider, Provider<SelectedSite> selectedSiteProvider,
      Provider<CoroutineDispatchers> coroutineDispatchersProvider) {
    return new VariationDetailRepository_Factory(productStoreProvider, selectedSiteProvider, coroutineDispatchersProvider);
  }

  public static VariationDetailRepository newInstance(WCProductStore productStore,
      SelectedSite selectedSite, CoroutineDispatchers coroutineDispatchers) {
    return new VariationDetailRepository(productStore, selectedSite, coroutineDispatchers);
  }
}
