// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class HelpActivityBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appbarMain;

  @NonNull
  public final MaterialTextView applicationLogButton;

  @NonNull
  public final MaterialTextView applicationVersion;

  @NonNull
  public final MaterialTextView contactEmailAddress;

  @NonNull
  public final LinearLayout contactEmailContainer;

  @NonNull
  public final MaterialTextView contactUsButton;

  @NonNull
  public final MaterialTextView faqButton;

  @NonNull
  public final MaterialTextView myTicketsButton;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final MaterialToolbar toolbarMain;

  private HelpActivityBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appbarMain,
      @NonNull MaterialTextView applicationLogButton, @NonNull MaterialTextView applicationVersion,
      @NonNull MaterialTextView contactEmailAddress, @NonNull LinearLayout contactEmailContainer,
      @NonNull MaterialTextView contactUsButton, @NonNull MaterialTextView faqButton,
      @NonNull MaterialTextView myTicketsButton, @NonNull NestedScrollView nestedScrollView,
      @NonNull MaterialToolbar toolbarMain) {
    this.rootView = rootView;
    this.appbarMain = appbarMain;
    this.applicationLogButton = applicationLogButton;
    this.applicationVersion = applicationVersion;
    this.contactEmailAddress = contactEmailAddress;
    this.contactEmailContainer = contactEmailContainer;
    this.contactUsButton = contactUsButton;
    this.faqButton = faqButton;
    this.myTicketsButton = myTicketsButton;
    this.nestedScrollView = nestedScrollView;
    this.toolbarMain = toolbarMain;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HelpActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HelpActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.help_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HelpActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar_main;
      AppBarLayout appbarMain = ViewBindings.findChildViewById(rootView, id);
      if (appbarMain == null) {
        break missingId;
      }

      id = R.id.application_log_button;
      MaterialTextView applicationLogButton = ViewBindings.findChildViewById(rootView, id);
      if (applicationLogButton == null) {
        break missingId;
      }

      id = R.id.applicationVersion;
      MaterialTextView applicationVersion = ViewBindings.findChildViewById(rootView, id);
      if (applicationVersion == null) {
        break missingId;
      }

      id = R.id.contactEmailAddress;
      MaterialTextView contactEmailAddress = ViewBindings.findChildViewById(rootView, id);
      if (contactEmailAddress == null) {
        break missingId;
      }

      id = R.id.contactEmailContainer;
      LinearLayout contactEmailContainer = ViewBindings.findChildViewById(rootView, id);
      if (contactEmailContainer == null) {
        break missingId;
      }

      id = R.id.contact_us_button;
      MaterialTextView contactUsButton = ViewBindings.findChildViewById(rootView, id);
      if (contactUsButton == null) {
        break missingId;
      }

      id = R.id.faq_button;
      MaterialTextView faqButton = ViewBindings.findChildViewById(rootView, id);
      if (faqButton == null) {
        break missingId;
      }

      id = R.id.my_tickets_button;
      MaterialTextView myTicketsButton = ViewBindings.findChildViewById(rootView, id);
      if (myTicketsButton == null) {
        break missingId;
      }

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.toolbar_main;
      MaterialToolbar toolbarMain = ViewBindings.findChildViewById(rootView, id);
      if (toolbarMain == null) {
        break missingId;
      }

      return new HelpActivityBinding((CoordinatorLayout) rootView, appbarMain, applicationLogButton,
          applicationVersion, contactEmailAddress, contactEmailContainer, contactUsButton,
          faqButton, myTicketsButton, nestedScrollView, toolbarMain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
