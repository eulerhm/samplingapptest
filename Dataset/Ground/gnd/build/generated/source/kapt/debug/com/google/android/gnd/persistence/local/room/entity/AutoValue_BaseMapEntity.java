package com.google.android.gnd.persistence.local.room.entity;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.room.ColumnInfo;
import androidx.room.PrimaryKey;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_BaseMapEntity extends BaseMapEntity {

  @PrimaryKey(autoGenerate = true)
  @ColumnInfo(name = "id")
  @Nullable
  private final Integer id;

  @NonNull
  @ColumnInfo(name = "survey_id")
  private final String surveyId;

  @NonNull
  @ColumnInfo(name = "url")
  private final String url;

  @NonNull
  @ColumnInfo(name = "type")
  private final BaseMapEntity.BaseMapEntityType type;

  private AutoValue_BaseMapEntity(
      @Nullable Integer id,
      String surveyId,
      String url,
      BaseMapEntity.BaseMapEntityType type) {
    this.id = id;
    this.surveyId = surveyId;
    this.url = url;
    this.type = type;
  }

  @PrimaryKey(autoGenerate = true)
  @ColumnInfo(name = "id")
  @Nullable
  @Override
  public Integer getId() {
    return id;
  }

  @NonNull
  @ColumnInfo(name = "survey_id")
  @Override
  public String getSurveyId() {
    return surveyId;
  }

  @NonNull
  @ColumnInfo(name = "url")
  @Override
  public String getUrl() {
    return url;
  }

  @NonNull
  @ColumnInfo(name = "type")
  @Override
  public BaseMapEntity.BaseMapEntityType getType() {
    return type;
  }

  @Override
  public String toString() {
    return "BaseMapEntity{"
        + "id=" + id + ", "
        + "surveyId=" + surveyId + ", "
        + "url=" + url + ", "
        + "type=" + type
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof BaseMapEntity) {
      BaseMapEntity that = (BaseMapEntity) o;
      return (this.id == null ? that.getId() == null : this.id.equals(that.getId()))
          && this.surveyId.equals(that.getSurveyId())
          && this.url.equals(that.getUrl())
          && this.type.equals(that.getType());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= (id == null) ? 0 : id.hashCode();
    h$ *= 1000003;
    h$ ^= surveyId.hashCode();
    h$ *= 1000003;
    h$ ^= url.hashCode();
    h$ *= 1000003;
    h$ ^= type.hashCode();
    return h$;
  }

  static final class Builder extends BaseMapEntity.Builder {
    private Integer id;
    private String surveyId;
    private String url;
    private BaseMapEntity.BaseMapEntityType type;
    Builder() {
    }
    @Override
    public BaseMapEntity.Builder setId(@Nullable Integer id) {
      this.id = id;
      return this;
    }
    @Override
    public BaseMapEntity.Builder setSurveyId(String surveyId) {
      if (surveyId == null) {
        throw new NullPointerException("Null surveyId");
      }
      this.surveyId = surveyId;
      return this;
    }
    @Override
    public BaseMapEntity.Builder setUrl(String url) {
      if (url == null) {
        throw new NullPointerException("Null url");
      }
      this.url = url;
      return this;
    }
    @Override
    public BaseMapEntity.Builder setType(BaseMapEntity.BaseMapEntityType type) {
      if (type == null) {
        throw new NullPointerException("Null type");
      }
      this.type = type;
      return this;
    }
    @Override
    public BaseMapEntity build() {
      String missing = "";
      if (this.surveyId == null) {
        missing += " surveyId";
      }
      if (this.url == null) {
        missing += " url";
      }
      if (this.type == null) {
        missing += " type";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_BaseMapEntity(
          this.id,
          this.surveyId,
          this.url,
          this.type);
    }
  }

}
