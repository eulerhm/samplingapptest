// Generated by data binding compiler. Do not edit!
package com.google.samples.apps.iosched.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.card.MaterialCardView;
import com.google.samples.apps.iosched.R;
import com.google.samples.apps.iosched.ui.info.EventInfoViewModel;
import com.google.samples.apps.iosched.widget.EventCardView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentInfoEventBinding extends ViewDataBinding {
  @NonNull
  public final MaterialCardView assistantApp;

  @NonNull
  public final TextView assistantAppDescription;

  @NonNull
  public final TextView assistantAppDescription2;

  @NonNull
  public final ImageView assistantAppLogo;

  @NonNull
  public final ConstraintLayout content;

  @NonNull
  public final EventCardView eventAfterhours;

  @NonNull
  public final EventCardView eventCodelabs;

  @NonNull
  public final EventCardView eventMeals;

  @NonNull
  public final EventCardView eventOfficehours;

  @NonNull
  public final EventCardView eventSandbox;

  @NonNull
  public final EventCardView eventSessions;

  @NonNull
  public final TextView eventTypesHeader;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineStart;

  @NonNull
  public final TextView relatedAppsHeader;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final InfoWifiCardBinding wifiCard;

  @Bindable
  protected EventInfoViewModel mViewModel;

  @Bindable
  protected Boolean mShowAssistantApp;

  protected FragmentInfoEventBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialCardView assistantApp, TextView assistantAppDescription,
      TextView assistantAppDescription2, ImageView assistantAppLogo, ConstraintLayout content,
      EventCardView eventAfterhours, EventCardView eventCodelabs, EventCardView eventMeals,
      EventCardView eventOfficehours, EventCardView eventSandbox, EventCardView eventSessions,
      TextView eventTypesHeader, Guideline guidelineEnd, Guideline guidelineStart,
      TextView relatedAppsHeader, NestedScrollView scrollView, InfoWifiCardBinding wifiCard) {
    super(_bindingComponent, _root, _localFieldCount);
    this.assistantApp = assistantApp;
    this.assistantAppDescription = assistantAppDescription;
    this.assistantAppDescription2 = assistantAppDescription2;
    this.assistantAppLogo = assistantAppLogo;
    this.content = content;
    this.eventAfterhours = eventAfterhours;
    this.eventCodelabs = eventCodelabs;
    this.eventMeals = eventMeals;
    this.eventOfficehours = eventOfficehours;
    this.eventSandbox = eventSandbox;
    this.eventSessions = eventSessions;
    this.eventTypesHeader = eventTypesHeader;
    this.guidelineEnd = guidelineEnd;
    this.guidelineStart = guidelineStart;
    this.relatedAppsHeader = relatedAppsHeader;
    this.scrollView = scrollView;
    this.wifiCard = wifiCard;
    setContainedBinding(this.wifiCard);
  }

  public abstract void setViewModel(@Nullable EventInfoViewModel viewModel);

  @Nullable
  public EventInfoViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setShowAssistantApp(@Nullable Boolean showAssistantApp);

  @Nullable
  public Boolean getShowAssistantApp() {
    return mShowAssistantApp;
  }

  @NonNull
  public static FragmentInfoEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_info_event, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentInfoEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentInfoEventBinding>inflateInternal(inflater, R.layout.fragment_info_event, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentInfoEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_info_event, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentInfoEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentInfoEventBinding>inflateInternal(inflater, R.layout.fragment_info_event, null, false, component);
  }

  public static FragmentInfoEventBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentInfoEventBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentInfoEventBinding)bind(component, view, R.layout.fragment_info_event);
  }
}
