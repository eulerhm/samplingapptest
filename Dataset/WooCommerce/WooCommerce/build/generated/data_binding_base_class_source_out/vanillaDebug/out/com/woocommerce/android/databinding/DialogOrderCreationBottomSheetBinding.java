// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogOrderCreationBottomSheetBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout orderCreationButton;

  @NonNull
  public final MaterialTextView orderCreationInfoItemDesc;

  @NonNull
  public final View orderCreationInfoItemDivider;

  @NonNull
  public final ImageView orderCreationInfoItemIcon;

  @NonNull
  public final MaterialTextView orderCreationInfoItemName;

  @NonNull
  public final ConstraintLayout simplePaymentButton;

  @NonNull
  public final MaterialTextView simplePaymentInfoItemDesc;

  @NonNull
  public final View simplePaymentInfoItemDivider;

  @NonNull
  public final ImageView simplePaymentInfoItemIcon;

  @NonNull
  public final MaterialTextView simplePaymentInfoItemName;

  private DialogOrderCreationBottomSheetBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout orderCreationButton,
      @NonNull MaterialTextView orderCreationInfoItemDesc,
      @NonNull View orderCreationInfoItemDivider, @NonNull ImageView orderCreationInfoItemIcon,
      @NonNull MaterialTextView orderCreationInfoItemName,
      @NonNull ConstraintLayout simplePaymentButton,
      @NonNull MaterialTextView simplePaymentInfoItemDesc,
      @NonNull View simplePaymentInfoItemDivider, @NonNull ImageView simplePaymentInfoItemIcon,
      @NonNull MaterialTextView simplePaymentInfoItemName) {
    this.rootView = rootView;
    this.orderCreationButton = orderCreationButton;
    this.orderCreationInfoItemDesc = orderCreationInfoItemDesc;
    this.orderCreationInfoItemDivider = orderCreationInfoItemDivider;
    this.orderCreationInfoItemIcon = orderCreationInfoItemIcon;
    this.orderCreationInfoItemName = orderCreationInfoItemName;
    this.simplePaymentButton = simplePaymentButton;
    this.simplePaymentInfoItemDesc = simplePaymentInfoItemDesc;
    this.simplePaymentInfoItemDivider = simplePaymentInfoItemDivider;
    this.simplePaymentInfoItemIcon = simplePaymentInfoItemIcon;
    this.simplePaymentInfoItemName = simplePaymentInfoItemName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogOrderCreationBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogOrderCreationBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_order_creation_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogOrderCreationBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.order_creation_button;
      ConstraintLayout orderCreationButton = ViewBindings.findChildViewById(rootView, id);
      if (orderCreationButton == null) {
        break missingId;
      }

      id = R.id.orderCreationInfoItem_desc;
      MaterialTextView orderCreationInfoItemDesc = ViewBindings.findChildViewById(rootView, id);
      if (orderCreationInfoItemDesc == null) {
        break missingId;
      }

      id = R.id.orderCreationInfoItem_divider;
      View orderCreationInfoItemDivider = ViewBindings.findChildViewById(rootView, id);
      if (orderCreationInfoItemDivider == null) {
        break missingId;
      }

      id = R.id.orderCreationInfoItem_icon;
      ImageView orderCreationInfoItemIcon = ViewBindings.findChildViewById(rootView, id);
      if (orderCreationInfoItemIcon == null) {
        break missingId;
      }

      id = R.id.orderCreationInfoItem_name;
      MaterialTextView orderCreationInfoItemName = ViewBindings.findChildViewById(rootView, id);
      if (orderCreationInfoItemName == null) {
        break missingId;
      }

      id = R.id.simple_payment_button;
      ConstraintLayout simplePaymentButton = ViewBindings.findChildViewById(rootView, id);
      if (simplePaymentButton == null) {
        break missingId;
      }

      id = R.id.simplePaymentInfoItem_desc;
      MaterialTextView simplePaymentInfoItemDesc = ViewBindings.findChildViewById(rootView, id);
      if (simplePaymentInfoItemDesc == null) {
        break missingId;
      }

      id = R.id.simplePaymentInfoItem_divider;
      View simplePaymentInfoItemDivider = ViewBindings.findChildViewById(rootView, id);
      if (simplePaymentInfoItemDivider == null) {
        break missingId;
      }

      id = R.id.simplePaymentInfoItem_icon;
      ImageView simplePaymentInfoItemIcon = ViewBindings.findChildViewById(rootView, id);
      if (simplePaymentInfoItemIcon == null) {
        break missingId;
      }

      id = R.id.simplePaymentInfoItem_name;
      MaterialTextView simplePaymentInfoItemName = ViewBindings.findChildViewById(rootView, id);
      if (simplePaymentInfoItemName == null) {
        break missingId;
      }

      return new DialogOrderCreationBottomSheetBinding((LinearLayout) rootView, orderCreationButton,
          orderCreationInfoItemDesc, orderCreationInfoItemDivider, orderCreationInfoItemIcon,
          orderCreationInfoItemName, simplePaymentButton, simplePaymentInfoItemDesc,
          simplePaymentInfoItemDivider, simplePaymentInfoItemIcon, simplePaymentInfoItemName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
