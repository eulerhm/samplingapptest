// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.ui.orders.shippinglabels.ShippingLabelItemView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrderDetailShippingLabelListItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ShippingLabelItemView shippingLabelItemCarrierInfo;

  @NonNull
  public final View shippingLabelItemDivider;

  @NonNull
  public final LinearLayout shippingLabelItemMorePanel;

  @NonNull
  public final ShippingLabelItemView shippingLabelItemPackageInfo;

  @NonNull
  public final ShippingLabelItemView shippingLabelItemPaymentInfo;

  @NonNull
  public final ShippingLabelItemView shippingLabelItemShipFrom;

  @NonNull
  public final ShippingLabelItemView shippingLabelItemShipTo;

  @NonNull
  public final ShippingLabelItemView shippingLabelItemTrackingNumber;

  @NonNull
  public final ConstraintLayout shippingLabelItemViewMore;

  @NonNull
  public final ImageView shippingLabelItemViewMoreButtonImage;

  @NonNull
  public final MaterialTextView shippingLabelItemViewMoreButtonTitle;

  @NonNull
  public final ImageButton shippingLabelListBtnMenu;

  @NonNull
  public final ImageView shippingLabelListCountButtonImage;

  @NonNull
  public final MaterialTextView shippingLabelListCountButtonTitle;

  @NonNull
  public final MaterialTextView shippingLabelListLblPackage;

  @NonNull
  public final MaterialButton shippingLabelListPrintBtn;

  @NonNull
  public final RecyclerView shippingLabelListProducts;

  @NonNull
  public final ConstraintLayout shippingLabelListViewItems;

  private OrderDetailShippingLabelListItemBinding(@NonNull MaterialCardView rootView,
      @NonNull ShippingLabelItemView shippingLabelItemCarrierInfo,
      @NonNull View shippingLabelItemDivider, @NonNull LinearLayout shippingLabelItemMorePanel,
      @NonNull ShippingLabelItemView shippingLabelItemPackageInfo,
      @NonNull ShippingLabelItemView shippingLabelItemPaymentInfo,
      @NonNull ShippingLabelItemView shippingLabelItemShipFrom,
      @NonNull ShippingLabelItemView shippingLabelItemShipTo,
      @NonNull ShippingLabelItemView shippingLabelItemTrackingNumber,
      @NonNull ConstraintLayout shippingLabelItemViewMore,
      @NonNull ImageView shippingLabelItemViewMoreButtonImage,
      @NonNull MaterialTextView shippingLabelItemViewMoreButtonTitle,
      @NonNull ImageButton shippingLabelListBtnMenu,
      @NonNull ImageView shippingLabelListCountButtonImage,
      @NonNull MaterialTextView shippingLabelListCountButtonTitle,
      @NonNull MaterialTextView shippingLabelListLblPackage,
      @NonNull MaterialButton shippingLabelListPrintBtn,
      @NonNull RecyclerView shippingLabelListProducts,
      @NonNull ConstraintLayout shippingLabelListViewItems) {
    this.rootView = rootView;
    this.shippingLabelItemCarrierInfo = shippingLabelItemCarrierInfo;
    this.shippingLabelItemDivider = shippingLabelItemDivider;
    this.shippingLabelItemMorePanel = shippingLabelItemMorePanel;
    this.shippingLabelItemPackageInfo = shippingLabelItemPackageInfo;
    this.shippingLabelItemPaymentInfo = shippingLabelItemPaymentInfo;
    this.shippingLabelItemShipFrom = shippingLabelItemShipFrom;
    this.shippingLabelItemShipTo = shippingLabelItemShipTo;
    this.shippingLabelItemTrackingNumber = shippingLabelItemTrackingNumber;
    this.shippingLabelItemViewMore = shippingLabelItemViewMore;
    this.shippingLabelItemViewMoreButtonImage = shippingLabelItemViewMoreButtonImage;
    this.shippingLabelItemViewMoreButtonTitle = shippingLabelItemViewMoreButtonTitle;
    this.shippingLabelListBtnMenu = shippingLabelListBtnMenu;
    this.shippingLabelListCountButtonImage = shippingLabelListCountButtonImage;
    this.shippingLabelListCountButtonTitle = shippingLabelListCountButtonTitle;
    this.shippingLabelListLblPackage = shippingLabelListLblPackage;
    this.shippingLabelListPrintBtn = shippingLabelListPrintBtn;
    this.shippingLabelListProducts = shippingLabelListProducts;
    this.shippingLabelListViewItems = shippingLabelListViewItems;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static OrderDetailShippingLabelListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrderDetailShippingLabelListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.order_detail_shipping_label_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrderDetailShippingLabelListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.shippingLabelItem_carrierInfo;
      ShippingLabelItemView shippingLabelItemCarrierInfo = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemCarrierInfo == null) {
        break missingId;
      }

      id = R.id.shippingLabelItem_divider;
      View shippingLabelItemDivider = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemDivider == null) {
        break missingId;
      }

      id = R.id.shippingLabelItem_morePanel;
      LinearLayout shippingLabelItemMorePanel = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemMorePanel == null) {
        break missingId;
      }

      id = R.id.shippingLabelItem_packageInfo;
      ShippingLabelItemView shippingLabelItemPackageInfo = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemPackageInfo == null) {
        break missingId;
      }

      id = R.id.shippingLabelItem_paymentInfo;
      ShippingLabelItemView shippingLabelItemPaymentInfo = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemPaymentInfo == null) {
        break missingId;
      }

      id = R.id.shippingLabelItem_shipFrom;
      ShippingLabelItemView shippingLabelItemShipFrom = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemShipFrom == null) {
        break missingId;
      }

      id = R.id.shippingLabelItem_shipTo;
      ShippingLabelItemView shippingLabelItemShipTo = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemShipTo == null) {
        break missingId;
      }

      id = R.id.shippingLabelItem_trackingNumber;
      ShippingLabelItemView shippingLabelItemTrackingNumber = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemTrackingNumber == null) {
        break missingId;
      }

      id = R.id.shippingLabelItem_viewMore;
      ConstraintLayout shippingLabelItemViewMore = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemViewMore == null) {
        break missingId;
      }

      id = R.id.shippingLabelItem_viewMoreButtonImage;
      ImageView shippingLabelItemViewMoreButtonImage = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemViewMoreButtonImage == null) {
        break missingId;
      }

      id = R.id.shippingLabelItem_viewMoreButtonTitle;
      MaterialTextView shippingLabelItemViewMoreButtonTitle = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemViewMoreButtonTitle == null) {
        break missingId;
      }

      id = R.id.shippingLabelList_btnMenu;
      ImageButton shippingLabelListBtnMenu = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelListBtnMenu == null) {
        break missingId;
      }

      id = R.id.shippingLabelList_countButtonImage;
      ImageView shippingLabelListCountButtonImage = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelListCountButtonImage == null) {
        break missingId;
      }

      id = R.id.shippingLabelList_countButtonTitle;
      MaterialTextView shippingLabelListCountButtonTitle = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelListCountButtonTitle == null) {
        break missingId;
      }

      id = R.id.shippingLabelList_lblPackage;
      MaterialTextView shippingLabelListLblPackage = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelListLblPackage == null) {
        break missingId;
      }

      id = R.id.shippingLabelList_printBtn;
      MaterialButton shippingLabelListPrintBtn = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelListPrintBtn == null) {
        break missingId;
      }

      id = R.id.shippingLabelList_products;
      RecyclerView shippingLabelListProducts = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelListProducts == null) {
        break missingId;
      }

      id = R.id.shippingLabelList_viewItems;
      ConstraintLayout shippingLabelListViewItems = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelListViewItems == null) {
        break missingId;
      }

      return new OrderDetailShippingLabelListItemBinding((MaterialCardView) rootView,
          shippingLabelItemCarrierInfo, shippingLabelItemDivider, shippingLabelItemMorePanel,
          shippingLabelItemPackageInfo, shippingLabelItemPaymentInfo, shippingLabelItemShipFrom,
          shippingLabelItemShipTo, shippingLabelItemTrackingNumber, shippingLabelItemViewMore,
          shippingLabelItemViewMoreButtonImage, shippingLabelItemViewMoreButtonTitle,
          shippingLabelListBtnMenu, shippingLabelListCountButtonImage,
          shippingLabelListCountButtonTitle, shippingLabelListLblPackage, shippingLabelListPrintBtn,
          shippingLabelListProducts, shippingLabelListViewItems);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
