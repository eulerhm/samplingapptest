// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RadioButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ShippingRateListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCheckBox adultSignatureOption;

  @NonNull
  public final ImageView carrierImage;

  @NonNull
  public final RadioButton carrierRadioButton;

  @NonNull
  public final MaterialTextView carrierServiceName;

  @NonNull
  public final MaterialTextView deliveryTime;

  @NonNull
  public final View divider;

  @NonNull
  public final FrameLayout imageFrame;

  @NonNull
  public final MaterialTextView includedOptions;

  @NonNull
  public final MaterialTextView servicePrice;

  @NonNull
  public final MaterialCheckBox signatureOption;

  private ShippingRateListItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCheckBox adultSignatureOption, @NonNull ImageView carrierImage,
      @NonNull RadioButton carrierRadioButton, @NonNull MaterialTextView carrierServiceName,
      @NonNull MaterialTextView deliveryTime, @NonNull View divider,
      @NonNull FrameLayout imageFrame, @NonNull MaterialTextView includedOptions,
      @NonNull MaterialTextView servicePrice, @NonNull MaterialCheckBox signatureOption) {
    this.rootView = rootView;
    this.adultSignatureOption = adultSignatureOption;
    this.carrierImage = carrierImage;
    this.carrierRadioButton = carrierRadioButton;
    this.carrierServiceName = carrierServiceName;
    this.deliveryTime = deliveryTime;
    this.divider = divider;
    this.imageFrame = imageFrame;
    this.includedOptions = includedOptions;
    this.servicePrice = servicePrice;
    this.signatureOption = signatureOption;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ShippingRateListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ShippingRateListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.shipping_rate_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ShippingRateListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adultSignatureOption;
      MaterialCheckBox adultSignatureOption = ViewBindings.findChildViewById(rootView, id);
      if (adultSignatureOption == null) {
        break missingId;
      }

      id = R.id.carrierImage;
      ImageView carrierImage = ViewBindings.findChildViewById(rootView, id);
      if (carrierImage == null) {
        break missingId;
      }

      id = R.id.carrierRadioButton;
      RadioButton carrierRadioButton = ViewBindings.findChildViewById(rootView, id);
      if (carrierRadioButton == null) {
        break missingId;
      }

      id = R.id.carrierServiceName;
      MaterialTextView carrierServiceName = ViewBindings.findChildViewById(rootView, id);
      if (carrierServiceName == null) {
        break missingId;
      }

      id = R.id.deliveryTime;
      MaterialTextView deliveryTime = ViewBindings.findChildViewById(rootView, id);
      if (deliveryTime == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.imageFrame;
      FrameLayout imageFrame = ViewBindings.findChildViewById(rootView, id);
      if (imageFrame == null) {
        break missingId;
      }

      id = R.id.includedOptions;
      MaterialTextView includedOptions = ViewBindings.findChildViewById(rootView, id);
      if (includedOptions == null) {
        break missingId;
      }

      id = R.id.servicePrice;
      MaterialTextView servicePrice = ViewBindings.findChildViewById(rootView, id);
      if (servicePrice == null) {
        break missingId;
      }

      id = R.id.signatureOption;
      MaterialCheckBox signatureOption = ViewBindings.findChildViewById(rootView, id);
      if (signatureOption == null) {
        break missingId;
      }

      return new ShippingRateListItemBinding((ConstraintLayout) rootView, adultSignatureOption,
          carrierImage, carrierRadioButton, carrierServiceName, deliveryTime, divider, imageFrame,
          includedOptions, servicePrice, signatureOption);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
