// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.woocommerce.android.R;
import com.woocommerce.android.ui.products.FeatureWIPNoticeCard;
import com.woocommerce.android.ui.products.ProductSortAndFiltersCard;
import com.woocommerce.android.widgets.ScrollChildSwipeRefreshLayout;
import com.woocommerce.android.widgets.WCEmptyView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductListBinding implements ViewBinding {
  @NonNull
  private final ScrollChildSwipeRefreshLayout rootView;

  @NonNull
  public final FloatingActionButton addProductButton;

  @NonNull
  public final WCEmptyView emptyView;

  @NonNull
  public final ProgressBar loadMoreProgress;

  @NonNull
  public final RecyclerView productsRecycler;

  @NonNull
  public final ScrollChildSwipeRefreshLayout productsRefreshLayout;

  @NonNull
  public final ProductSortAndFiltersCard productsSortFilterCard;

  @NonNull
  public final FeatureWIPNoticeCard productsWipCard;

  private FragmentProductListBinding(@NonNull ScrollChildSwipeRefreshLayout rootView,
      @NonNull FloatingActionButton addProductButton, @NonNull WCEmptyView emptyView,
      @NonNull ProgressBar loadMoreProgress, @NonNull RecyclerView productsRecycler,
      @NonNull ScrollChildSwipeRefreshLayout productsRefreshLayout,
      @NonNull ProductSortAndFiltersCard productsSortFilterCard,
      @NonNull FeatureWIPNoticeCard productsWipCard) {
    this.rootView = rootView;
    this.addProductButton = addProductButton;
    this.emptyView = emptyView;
    this.loadMoreProgress = loadMoreProgress;
    this.productsRecycler = productsRecycler;
    this.productsRefreshLayout = productsRefreshLayout;
    this.productsSortFilterCard = productsSortFilterCard;
    this.productsWipCard = productsWipCard;
  }

  @Override
  @NonNull
  public ScrollChildSwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_product_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addProductButton;
      FloatingActionButton addProductButton = ViewBindings.findChildViewById(rootView, id);
      if (addProductButton == null) {
        break missingId;
      }

      id = R.id.empty_view;
      WCEmptyView emptyView = ViewBindings.findChildViewById(rootView, id);
      if (emptyView == null) {
        break missingId;
      }

      id = R.id.loadMoreProgress;
      ProgressBar loadMoreProgress = ViewBindings.findChildViewById(rootView, id);
      if (loadMoreProgress == null) {
        break missingId;
      }

      id = R.id.productsRecycler;
      RecyclerView productsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (productsRecycler == null) {
        break missingId;
      }

      ScrollChildSwipeRefreshLayout productsRefreshLayout = (ScrollChildSwipeRefreshLayout) rootView;

      id = R.id.products_sort_filter_card;
      ProductSortAndFiltersCard productsSortFilterCard = ViewBindings.findChildViewById(rootView, id);
      if (productsSortFilterCard == null) {
        break missingId;
      }

      id = R.id.products_wip_card;
      FeatureWIPNoticeCard productsWipCard = ViewBindings.findChildViewById(rootView, id);
      if (productsWipCard == null) {
        break missingId;
      }

      return new FragmentProductListBinding((ScrollChildSwipeRefreshLayout) rootView,
          addProductButton, emptyView, loadMoreProgress, productsRecycler, productsRefreshLayout,
          productsSortFilterCard, productsWipCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
