// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.products;

import com.woocommerce.android.tools.SelectedSite;
import com.woocommerce.android.util.CoroutineDispatchers;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.Dispatcher;
import org.wordpress.android.fluxc.store.WCGlobalAttributeStore;
import org.wordpress.android.fluxc.store.WCProductStore;
import org.wordpress.android.fluxc.store.WCTaxStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductDetailRepository_Factory implements Factory<ProductDetailRepository> {
  private final Provider<Dispatcher> dispatcherProvider;

  private final Provider<WCProductStore> productStoreProvider;

  private final Provider<WCGlobalAttributeStore> globalAttributeStoreProvider;

  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<WCTaxStore> taxStoreProvider;

  private final Provider<CoroutineDispatchers> coroutineDispatchersProvider;

  public ProductDetailRepository_Factory(Provider<Dispatcher> dispatcherProvider,
      Provider<WCProductStore> productStoreProvider,
      Provider<WCGlobalAttributeStore> globalAttributeStoreProvider,
      Provider<SelectedSite> selectedSiteProvider, Provider<WCTaxStore> taxStoreProvider,
      Provider<CoroutineDispatchers> coroutineDispatchersProvider) {
    this.dispatcherProvider = dispatcherProvider;
    this.productStoreProvider = productStoreProvider;
    this.globalAttributeStoreProvider = globalAttributeStoreProvider;
    this.selectedSiteProvider = selectedSiteProvider;
    this.taxStoreProvider = taxStoreProvider;
    this.coroutineDispatchersProvider = coroutineDispatchersProvider;
  }

  @Override
  public ProductDetailRepository get() {
    return newInstance(dispatcherProvider.get(), productStoreProvider.get(), globalAttributeStoreProvider.get(), selectedSiteProvider.get(), taxStoreProvider.get(), coroutineDispatchersProvider.get());
  }

  public static ProductDetailRepository_Factory create(Provider<Dispatcher> dispatcherProvider,
      Provider<WCProductStore> productStoreProvider,
      Provider<WCGlobalAttributeStore> globalAttributeStoreProvider,
      Provider<SelectedSite> selectedSiteProvider, Provider<WCTaxStore> taxStoreProvider,
      Provider<CoroutineDispatchers> coroutineDispatchersProvider) {
    return new ProductDetailRepository_Factory(dispatcherProvider, productStoreProvider, globalAttributeStoreProvider, selectedSiteProvider, taxStoreProvider, coroutineDispatchersProvider);
  }

  public static ProductDetailRepository newInstance(Dispatcher dispatcher,
      WCProductStore productStore, WCGlobalAttributeStore globalAttributeStore,
      SelectedSite selectedSite, WCTaxStore taxStore, CoroutineDispatchers coroutineDispatchers) {
    return new ProductDetailRepository(dispatcher, productStore, globalAttributeStore, selectedSite, taxStore, coroutineDispatchers);
  }
}
