// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.ui.prefs.WCSettingsOptionValueView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHelpBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final WCSettingsOptionValueView appLogContainer;

  @NonNull
  public final WCSettingsOptionValueView contactContainer;

  @NonNull
  public final WCSettingsOptionValueView contactPaymentsContainer;

  @NonNull
  public final WCSettingsOptionValueView faqContainer;

  @NonNull
  public final WCSettingsOptionValueView identityContainer;

  @NonNull
  public final WCSettingsOptionValueView myTicketsContainer;

  @NonNull
  public final WCSettingsOptionValueView ssrContainer;

  @NonNull
  public final MaterialTextView textVersion;

  @NonNull
  public final ViewToolbarBinding toolbar;

  private ActivityHelpBinding(@NonNull LinearLayout rootView, @NonNull AppBarLayout appBarLayout,
      @NonNull WCSettingsOptionValueView appLogContainer,
      @NonNull WCSettingsOptionValueView contactContainer,
      @NonNull WCSettingsOptionValueView contactPaymentsContainer,
      @NonNull WCSettingsOptionValueView faqContainer,
      @NonNull WCSettingsOptionValueView identityContainer,
      @NonNull WCSettingsOptionValueView myTicketsContainer,
      @NonNull WCSettingsOptionValueView ssrContainer, @NonNull MaterialTextView textVersion,
      @NonNull ViewToolbarBinding toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.appLogContainer = appLogContainer;
    this.contactContainer = contactContainer;
    this.contactPaymentsContainer = contactPaymentsContainer;
    this.faqContainer = faqContainer;
    this.identityContainer = identityContainer;
    this.myTicketsContainer = myTicketsContainer;
    this.ssrContainer = ssrContainer;
    this.textVersion = textVersion;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHelpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHelpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_help, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHelpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.appLogContainer;
      WCSettingsOptionValueView appLogContainer = ViewBindings.findChildViewById(rootView, id);
      if (appLogContainer == null) {
        break missingId;
      }

      id = R.id.contactContainer;
      WCSettingsOptionValueView contactContainer = ViewBindings.findChildViewById(rootView, id);
      if (contactContainer == null) {
        break missingId;
      }

      id = R.id.contactPaymentsContainer;
      WCSettingsOptionValueView contactPaymentsContainer = ViewBindings.findChildViewById(rootView, id);
      if (contactPaymentsContainer == null) {
        break missingId;
      }

      id = R.id.faqContainer;
      WCSettingsOptionValueView faqContainer = ViewBindings.findChildViewById(rootView, id);
      if (faqContainer == null) {
        break missingId;
      }

      id = R.id.identityContainer;
      WCSettingsOptionValueView identityContainer = ViewBindings.findChildViewById(rootView, id);
      if (identityContainer == null) {
        break missingId;
      }

      id = R.id.myTicketsContainer;
      WCSettingsOptionValueView myTicketsContainer = ViewBindings.findChildViewById(rootView, id);
      if (myTicketsContainer == null) {
        break missingId;
      }

      id = R.id.ssrContainer;
      WCSettingsOptionValueView ssrContainer = ViewBindings.findChildViewById(rootView, id);
      if (ssrContainer == null) {
        break missingId;
      }

      id = R.id.textVersion;
      MaterialTextView textVersion = ViewBindings.findChildViewById(rootView, id);
      if (textVersion == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ViewToolbarBinding binding_toolbar = ViewToolbarBinding.bind(toolbar);

      return new ActivityHelpBinding((LinearLayout) rootView, appBarLayout, appLogContainer,
          contactContainer, contactPaymentsContainer, faqContainer, identityContainer,
          myTicketsContainer, ssrContainer, textVersion, binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
