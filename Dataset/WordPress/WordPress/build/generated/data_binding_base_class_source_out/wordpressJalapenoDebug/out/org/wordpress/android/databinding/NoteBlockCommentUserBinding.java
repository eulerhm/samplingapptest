// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.WPTextView;

public final class NoteBlockCommentUserBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final View dividerView;

  @NonNull
  public final ImageView userAvatar;

  @NonNull
  public final WPTextView userComment;

  @NonNull
  public final WPTextView userCommentAgo;

  @NonNull
  public final WPTextView userCommentBullet;

  @NonNull
  public final WPTextView userCommentSite;

  @NonNull
  public final WPTextView userName;

  @NonNull
  public final LinearLayout userNameWrapper;

  private NoteBlockCommentUserBinding(@NonNull LinearLayout rootView, @NonNull View dividerView,
      @NonNull ImageView userAvatar, @NonNull WPTextView userComment,
      @NonNull WPTextView userCommentAgo, @NonNull WPTextView userCommentBullet,
      @NonNull WPTextView userCommentSite, @NonNull WPTextView userName,
      @NonNull LinearLayout userNameWrapper) {
    this.rootView = rootView;
    this.dividerView = dividerView;
    this.userAvatar = userAvatar;
    this.userComment = userComment;
    this.userCommentAgo = userCommentAgo;
    this.userCommentBullet = userCommentBullet;
    this.userCommentSite = userCommentSite;
    this.userName = userName;
    this.userNameWrapper = userNameWrapper;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NoteBlockCommentUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NoteBlockCommentUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.note_block_comment_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NoteBlockCommentUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider_view;
      View dividerView = ViewBindings.findChildViewById(rootView, id);
      if (dividerView == null) {
        break missingId;
      }

      id = R.id.user_avatar;
      ImageView userAvatar = ViewBindings.findChildViewById(rootView, id);
      if (userAvatar == null) {
        break missingId;
      }

      id = R.id.user_comment;
      WPTextView userComment = ViewBindings.findChildViewById(rootView, id);
      if (userComment == null) {
        break missingId;
      }

      id = R.id.user_comment_ago;
      WPTextView userCommentAgo = ViewBindings.findChildViewById(rootView, id);
      if (userCommentAgo == null) {
        break missingId;
      }

      id = R.id.user_comment_bullet;
      WPTextView userCommentBullet = ViewBindings.findChildViewById(rootView, id);
      if (userCommentBullet == null) {
        break missingId;
      }

      id = R.id.user_comment_site;
      WPTextView userCommentSite = ViewBindings.findChildViewById(rootView, id);
      if (userCommentSite == null) {
        break missingId;
      }

      id = R.id.user_name;
      WPTextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      id = R.id.user_name_wrapper;
      LinearLayout userNameWrapper = ViewBindings.findChildViewById(rootView, id);
      if (userNameWrapper == null) {
        break missingId;
      }

      return new NoteBlockCommentUserBinding((LinearLayout) rootView, dividerView, userAvatar,
          userComment, userCommentAgo, userCommentBullet, userCommentSite, userName,
          userNameWrapper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
