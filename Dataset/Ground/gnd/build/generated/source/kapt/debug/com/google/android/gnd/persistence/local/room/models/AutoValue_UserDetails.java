package com.google.android.gnd.persistence.local.room.models;

import androidx.annotation.NonNull;
import androidx.room.ColumnInfo;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_UserDetails extends UserDetails {

  @NonNull
  @ColumnInfo(name = "id")
  private final String id;

  @NonNull
  @ColumnInfo(name = "email")
  private final String email;

  @NonNull
  @ColumnInfo(name = "display_name")
  private final String displayName;

  private AutoValue_UserDetails(
      String id,
      String email,
      String displayName) {
    this.id = id;
    this.email = email;
    this.displayName = displayName;
  }

  @NonNull
  @ColumnInfo(name = "id")
  @Override
  public String getId() {
    return id;
  }

  @NonNull
  @ColumnInfo(name = "email")
  @Override
  public String getEmail() {
    return email;
  }

  @NonNull
  @ColumnInfo(name = "display_name")
  @Override
  public String getDisplayName() {
    return displayName;
  }

  @Override
  public String toString() {
    return "UserDetails{"
        + "id=" + id + ", "
        + "email=" + email + ", "
        + "displayName=" + displayName
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof UserDetails) {
      UserDetails that = (UserDetails) o;
      return this.id.equals(that.getId())
          && this.email.equals(that.getEmail())
          && this.displayName.equals(that.getDisplayName());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= id.hashCode();
    h$ *= 1000003;
    h$ ^= email.hashCode();
    h$ *= 1000003;
    h$ ^= displayName.hashCode();
    return h$;
  }

  static final class Builder extends UserDetails.Builder {
    private String id;
    private String email;
    private String displayName;
    Builder() {
    }
    @Override
    public UserDetails.Builder setId(String id) {
      if (id == null) {
        throw new NullPointerException("Null id");
      }
      this.id = id;
      return this;
    }
    @Override
    public UserDetails.Builder setEmail(String email) {
      if (email == null) {
        throw new NullPointerException("Null email");
      }
      this.email = email;
      return this;
    }
    @Override
    public UserDetails.Builder setDisplayName(String displayName) {
      if (displayName == null) {
        throw new NullPointerException("Null displayName");
      }
      this.displayName = displayName;
      return this;
    }
    @Override
    public UserDetails build() {
      String missing = "";
      if (this.id == null) {
        missing += " id";
      }
      if (this.email == null) {
        missing += " email";
      }
      if (this.displayName == null) {
        missing += " displayName";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_UserDetails(
          this.id,
          this.email,
          this.displayName);
    }
  }

}
