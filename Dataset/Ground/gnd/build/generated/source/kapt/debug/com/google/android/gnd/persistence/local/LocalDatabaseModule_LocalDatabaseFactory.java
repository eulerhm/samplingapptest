// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.persistence.local;

import android.content.Context;
import com.google.android.gnd.persistence.local.room.LocalDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocalDatabaseModule_LocalDatabaseFactory implements Factory<LocalDatabase> {
  private final Provider<Context> contextProvider;

  public LocalDatabaseModule_LocalDatabaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public LocalDatabase get() {
    return localDatabase(contextProvider.get());
  }

  public static LocalDatabaseModule_LocalDatabaseFactory create(Provider<Context> contextProvider) {
    return new LocalDatabaseModule_LocalDatabaseFactory(contextProvider);
  }

  public static LocalDatabase localDatabase(Context context) {
    return Preconditions.checkNotNullFromProvides(LocalDatabaseModule.localDatabase(context));
  }
}
