// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.persistence.remote.firestore;

import com.google.firebase.storage.StorageReference;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FirestoreStorageManager_Factory implements Factory<FirestoreStorageManager> {
  private final Provider<StorageReference> storageReferenceProvider;

  public FirestoreStorageManager_Factory(Provider<StorageReference> storageReferenceProvider) {
    this.storageReferenceProvider = storageReferenceProvider;
  }

  @Override
  public FirestoreStorageManager get() {
    FirestoreStorageManager instance = newInstance();
    FirestoreStorageManager_MembersInjector.injectStorageReference(instance, storageReferenceProvider.get());
    return instance;
  }

  public static FirestoreStorageManager_Factory create(
      Provider<StorageReference> storageReferenceProvider) {
    return new FirestoreStorageManager_Factory(storageReferenceProvider);
  }

  public static FirestoreStorageManager newInstance() {
    return new FirestoreStorageManager();
  }
}
