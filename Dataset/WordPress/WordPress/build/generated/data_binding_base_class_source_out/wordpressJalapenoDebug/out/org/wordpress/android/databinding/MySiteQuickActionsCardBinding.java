// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class MySiteQuickActionsCardBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final QuickActionsCardBinding quickActionsCard;

  @NonNull
  public final MySiteCardToolbarBinding quickActionsToolbar;

  @NonNull
  public final MaterialCardView quickStart;

  private MySiteQuickActionsCardBinding(@NonNull MaterialCardView rootView,
      @NonNull QuickActionsCardBinding quickActionsCard,
      @NonNull MySiteCardToolbarBinding quickActionsToolbar, @NonNull MaterialCardView quickStart) {
    this.rootView = rootView;
    this.quickActionsCard = quickActionsCard;
    this.quickActionsToolbar = quickActionsToolbar;
    this.quickStart = quickStart;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MySiteQuickActionsCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MySiteQuickActionsCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.my_site_quick_actions_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MySiteQuickActionsCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.quick_actions_card;
      View quickActionsCard = ViewBindings.findChildViewById(rootView, id);
      if (quickActionsCard == null) {
        break missingId;
      }
      QuickActionsCardBinding binding_quickActionsCard = QuickActionsCardBinding.bind(quickActionsCard);

      id = R.id.quick_actions_toolbar;
      View quickActionsToolbar = ViewBindings.findChildViewById(rootView, id);
      if (quickActionsToolbar == null) {
        break missingId;
      }
      MySiteCardToolbarBinding binding_quickActionsToolbar = MySiteCardToolbarBinding.bind(quickActionsToolbar);

      MaterialCardView quickStart = (MaterialCardView) rootView;

      return new MySiteQuickActionsCardBinding((MaterialCardView) rootView,
          binding_quickActionsCard, binding_quickActionsToolbar, quickStart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
