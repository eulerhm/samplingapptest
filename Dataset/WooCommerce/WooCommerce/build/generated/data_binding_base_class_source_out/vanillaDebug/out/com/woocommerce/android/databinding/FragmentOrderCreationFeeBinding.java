// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.WCMaterialOutlinedCurrencyEditTextView;
import com.woocommerce.android.widgets.WCMaterialOutlinedEditTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOrderCreationFeeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final WCMaterialOutlinedCurrencyEditTextView feeAmountEditText;

  @NonNull
  public final AppCompatTextView feePercentageCalculatedAmount;

  @NonNull
  public final WCMaterialOutlinedEditTextView feePercentageEditText;

  @NonNull
  public final SwitchMaterial feeTypeSwitch;

  @NonNull
  public final MaterialButton removeFeeButton;

  private FragmentOrderCreationFeeBinding(@NonNull ScrollView rootView,
      @NonNull WCMaterialOutlinedCurrencyEditTextView feeAmountEditText,
      @NonNull AppCompatTextView feePercentageCalculatedAmount,
      @NonNull WCMaterialOutlinedEditTextView feePercentageEditText,
      @NonNull SwitchMaterial feeTypeSwitch, @NonNull MaterialButton removeFeeButton) {
    this.rootView = rootView;
    this.feeAmountEditText = feeAmountEditText;
    this.feePercentageCalculatedAmount = feePercentageCalculatedAmount;
    this.feePercentageEditText = feePercentageEditText;
    this.feeTypeSwitch = feeTypeSwitch;
    this.removeFeeButton = removeFeeButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOrderCreationFeeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOrderCreationFeeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_order_creation_fee, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOrderCreationFeeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fee_amount_edit_text;
      WCMaterialOutlinedCurrencyEditTextView feeAmountEditText = ViewBindings.findChildViewById(rootView, id);
      if (feeAmountEditText == null) {
        break missingId;
      }

      id = R.id.fee_percentage_calculated_amount;
      AppCompatTextView feePercentageCalculatedAmount = ViewBindings.findChildViewById(rootView, id);
      if (feePercentageCalculatedAmount == null) {
        break missingId;
      }

      id = R.id.fee_percentage_edit_text;
      WCMaterialOutlinedEditTextView feePercentageEditText = ViewBindings.findChildViewById(rootView, id);
      if (feePercentageEditText == null) {
        break missingId;
      }

      id = R.id.fee_type_switch;
      SwitchMaterial feeTypeSwitch = ViewBindings.findChildViewById(rootView, id);
      if (feeTypeSwitch == null) {
        break missingId;
      }

      id = R.id.removeFeeButton;
      MaterialButton removeFeeButton = ViewBindings.findChildViewById(rootView, id);
      if (removeFeeButton == null) {
        break missingId;
      }

      return new FragmentOrderCreationFeeBinding((ScrollView) rootView, feeAmountEditText,
          feePercentageCalculatedAmount, feePercentageEditText, feeTypeSwitch, removeFeeButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
