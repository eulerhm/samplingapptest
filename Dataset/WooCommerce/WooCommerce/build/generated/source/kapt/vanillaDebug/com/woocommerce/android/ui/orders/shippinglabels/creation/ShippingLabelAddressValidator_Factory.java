// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.orders.shippinglabels.creation;

import com.woocommerce.android.model.ShippingLabelAddressMapper;
import com.woocommerce.android.tools.SelectedSite;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.WCShippingLabelStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ShippingLabelAddressValidator_Factory implements Factory<ShippingLabelAddressValidator> {
  private final Provider<WCShippingLabelStore> shippingLabelStoreProvider;

  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<ShippingLabelAddressMapper> shippingLabelAddressMapperProvider;

  public ShippingLabelAddressValidator_Factory(
      Provider<WCShippingLabelStore> shippingLabelStoreProvider,
      Provider<SelectedSite> selectedSiteProvider,
      Provider<ShippingLabelAddressMapper> shippingLabelAddressMapperProvider) {
    this.shippingLabelStoreProvider = shippingLabelStoreProvider;
    this.selectedSiteProvider = selectedSiteProvider;
    this.shippingLabelAddressMapperProvider = shippingLabelAddressMapperProvider;
  }

  @Override
  public ShippingLabelAddressValidator get() {
    return newInstance(shippingLabelStoreProvider.get(), selectedSiteProvider.get(), shippingLabelAddressMapperProvider.get());
  }

  public static ShippingLabelAddressValidator_Factory create(
      Provider<WCShippingLabelStore> shippingLabelStoreProvider,
      Provider<SelectedSite> selectedSiteProvider,
      Provider<ShippingLabelAddressMapper> shippingLabelAddressMapperProvider) {
    return new ShippingLabelAddressValidator_Factory(shippingLabelStoreProvider, selectedSiteProvider, shippingLabelAddressMapperProvider);
  }

  public static ShippingLabelAddressValidator newInstance(WCShippingLabelStore shippingLabelStore,
      SelectedSite selectedSite, ShippingLabelAddressMapper shippingLabelAddressMapper) {
    return new ShippingLabelAddressValidator(shippingLabelStore, selectedSite, shippingLabelAddressMapper);
  }
}
