// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.persistence.sync;

import androidx.work.WorkManager;
import com.google.android.gnd.persistence.local.LocalValueStore;
import com.google.android.gnd.repository.UserMediaRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PhotoSyncWorkManager_Factory implements Factory<PhotoSyncWorkManager> {
  private final Provider<WorkManager> workManagerProvider;

  private final Provider<LocalValueStore> localValueStoreProvider;

  private final Provider<UserMediaRepository> userMediaRepositoryProvider;

  public PhotoSyncWorkManager_Factory(Provider<WorkManager> workManagerProvider,
      Provider<LocalValueStore> localValueStoreProvider,
      Provider<UserMediaRepository> userMediaRepositoryProvider) {
    this.workManagerProvider = workManagerProvider;
    this.localValueStoreProvider = localValueStoreProvider;
    this.userMediaRepositoryProvider = userMediaRepositoryProvider;
  }

  @Override
  public PhotoSyncWorkManager get() {
    return newInstance(workManagerProvider.get(), localValueStoreProvider.get(), userMediaRepositoryProvider.get());
  }

  public static PhotoSyncWorkManager_Factory create(Provider<WorkManager> workManagerProvider,
      Provider<LocalValueStore> localValueStoreProvider,
      Provider<UserMediaRepository> userMediaRepositoryProvider) {
    return new PhotoSyncWorkManager_Factory(workManagerProvider, localValueStoreProvider, userMediaRepositoryProvider);
  }

  public static PhotoSyncWorkManager newInstance(WorkManager workManager,
      LocalValueStore localValueStore, UserMediaRepository userMediaRepository) {
    return new PhotoSyncWorkManager(workManager, localValueStore, userMediaRepository);
  }
}
