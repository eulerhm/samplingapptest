// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.sitepicker;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.Dispatcher;
import org.wordpress.android.fluxc.store.AccountStore;
import org.wordpress.android.fluxc.store.SiteStore;
import org.wordpress.android.fluxc.store.WooCommerceStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SitePickerRepository_Factory implements Factory<SitePickerRepository> {
  private final Provider<SiteStore> siteStoreProvider;

  private final Provider<Dispatcher> dispatcherProvider;

  private final Provider<AccountStore> accountStoreProvider;

  private final Provider<WooCommerceStore> wooCommerceStoreProvider;

  public SitePickerRepository_Factory(Provider<SiteStore> siteStoreProvider,
      Provider<Dispatcher> dispatcherProvider, Provider<AccountStore> accountStoreProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider) {
    this.siteStoreProvider = siteStoreProvider;
    this.dispatcherProvider = dispatcherProvider;
    this.accountStoreProvider = accountStoreProvider;
    this.wooCommerceStoreProvider = wooCommerceStoreProvider;
  }

  @Override
  public SitePickerRepository get() {
    return newInstance(siteStoreProvider.get(), dispatcherProvider.get(), accountStoreProvider.get(), wooCommerceStoreProvider.get());
  }

  public static SitePickerRepository_Factory create(Provider<SiteStore> siteStoreProvider,
      Provider<Dispatcher> dispatcherProvider, Provider<AccountStore> accountStoreProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider) {
    return new SitePickerRepository_Factory(siteStoreProvider, dispatcherProvider, accountStoreProvider, wooCommerceStoreProvider);
  }

  public static SitePickerRepository newInstance(SiteStore siteStore, Dispatcher dispatcher,
      AccountStore accountStore, WooCommerceStore wooCommerceStore) {
    return new SitePickerRepository(siteStore, dispatcher, accountStore, wooCommerceStore);
  }
}
