package com.google.android.gnd.model.task;

import com.google.common.collect.ImmutableList;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_Task extends Task {

  private final String id;

  private final ImmutableList<Step> steps;

  private AutoValue_Task(
      String id,
      ImmutableList<Step> steps) {
    this.id = id;
    this.steps = steps;
  }

  @Override
  public String getId() {
    return id;
  }

  @Override
  public ImmutableList<Step> getSteps() {
    return steps;
  }

  @Override
  public String toString() {
    return "Task{"
        + "id=" + id + ", "
        + "steps=" + steps
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof Task) {
      Task that = (Task) o;
      return this.id.equals(that.getId())
          && this.steps.equals(that.getSteps());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= id.hashCode();
    h$ *= 1000003;
    h$ ^= steps.hashCode();
    return h$;
  }

  static final class Builder extends Task.Builder {
    private String id;
    private ImmutableList<Step> steps;
    Builder() {
    }
    @Override
    public Task.Builder setId(String id) {
      if (id == null) {
        throw new NullPointerException("Null id");
      }
      this.id = id;
      return this;
    }
    @Override
    public Task.Builder setSteps(ImmutableList<Step> steps) {
      if (steps == null) {
        throw new NullPointerException("Null steps");
      }
      this.steps = steps;
      return this;
    }
    @Override
    public Task build() {
      String missing = "";
      if (this.id == null) {
        missing += " id";
      }
      if (this.steps == null) {
        missing += " steps";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_Task(
          this.id,
          this.steps);
    }
  }

}
