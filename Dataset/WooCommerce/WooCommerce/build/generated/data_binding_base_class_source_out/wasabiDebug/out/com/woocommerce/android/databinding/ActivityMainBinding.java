// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.woocommerce.android.R;
import com.woocommerce.android.ui.main.MainBottomNavigationView;
import com.woocommerce.android.ui.network.OfflineStatusBarView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View appBarDivider;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final MainBottomNavigationView bottomNav;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final FragmentContainerView navHostFragmentMain;

  @NonNull
  public final OfflineStatusBarView offlineBar;

  @NonNull
  public final CoordinatorLayout snackRoot;

  @NonNull
  public final ViewToolbarBinding toolbar;

  @NonNull
  public final TextView toolbarSubtitle;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull View appBarDivider,
      @NonNull AppBarLayout appBarLayout, @NonNull MainBottomNavigationView bottomNav,
      @NonNull CollapsingToolbarLayout collapsingToolbar,
      @NonNull FragmentContainerView navHostFragmentMain, @NonNull OfflineStatusBarView offlineBar,
      @NonNull CoordinatorLayout snackRoot, @NonNull ViewToolbarBinding toolbar,
      @NonNull TextView toolbarSubtitle) {
    this.rootView = rootView;
    this.appBarDivider = appBarDivider;
    this.appBarLayout = appBarLayout;
    this.bottomNav = bottomNav;
    this.collapsingToolbar = collapsingToolbar;
    this.navHostFragmentMain = navHostFragmentMain;
    this.offlineBar = offlineBar;
    this.snackRoot = snackRoot;
    this.toolbar = toolbar;
    this.toolbarSubtitle = toolbarSubtitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar_divider;
      View appBarDivider = ViewBindings.findChildViewById(rootView, id);
      if (appBarDivider == null) {
        break missingId;
      }

      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.bottom_nav;
      MainBottomNavigationView bottomNav = ViewBindings.findChildViewById(rootView, id);
      if (bottomNav == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.nav_host_fragment_main;
      FragmentContainerView navHostFragmentMain = ViewBindings.findChildViewById(rootView, id);
      if (navHostFragmentMain == null) {
        break missingId;
      }

      id = R.id.offline_bar;
      OfflineStatusBarView offlineBar = ViewBindings.findChildViewById(rootView, id);
      if (offlineBar == null) {
        break missingId;
      }

      id = R.id.snack_root;
      CoordinatorLayout snackRoot = ViewBindings.findChildViewById(rootView, id);
      if (snackRoot == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ViewToolbarBinding binding_toolbar = ViewToolbarBinding.bind(toolbar);

      id = R.id.toolbar_subtitle;
      TextView toolbarSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (toolbarSubtitle == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, appBarDivider, appBarLayout,
          bottomNav, collapsingToolbar, navHostFragmentMain, offlineBar, snackRoot, binding_toolbar,
          toolbarSubtitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
