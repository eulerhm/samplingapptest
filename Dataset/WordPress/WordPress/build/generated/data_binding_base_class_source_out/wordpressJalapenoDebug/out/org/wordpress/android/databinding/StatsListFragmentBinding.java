// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.NestedCoordinatorLayout;

public final class StatsListFragmentBinding implements ViewBinding {
  @NonNull
  private final NestedCoordinatorLayout rootView;

  @NonNull
  public final NestedCoordinatorLayout coordinatorLayout;

  @NonNull
  public final AppBarLayout dateSelectionToolbar;

  @NonNull
  public final StatsDateSelectorBinding dateSelector;

  @NonNull
  public final StatsEmptyViewBinding emptyView;

  @NonNull
  public final StatsErrorViewBinding errorView;

  @NonNull
  public final ShimmerFrameLayout loadingContainer;

  @NonNull
  public final RecyclerView loadingRecyclerView;

  @NonNull
  public final LinearLayout pageContainer;

  @NonNull
  public final RecyclerView recyclerView;

  private StatsListFragmentBinding(@NonNull NestedCoordinatorLayout rootView,
      @NonNull NestedCoordinatorLayout coordinatorLayout,
      @NonNull AppBarLayout dateSelectionToolbar, @NonNull StatsDateSelectorBinding dateSelector,
      @NonNull StatsEmptyViewBinding emptyView, @NonNull StatsErrorViewBinding errorView,
      @NonNull ShimmerFrameLayout loadingContainer, @NonNull RecyclerView loadingRecyclerView,
      @NonNull LinearLayout pageContainer, @NonNull RecyclerView recyclerView) {
    this.rootView = rootView;
    this.coordinatorLayout = coordinatorLayout;
    this.dateSelectionToolbar = dateSelectionToolbar;
    this.dateSelector = dateSelector;
    this.emptyView = emptyView;
    this.errorView = errorView;
    this.loadingContainer = loadingContainer;
    this.loadingRecyclerView = loadingRecyclerView;
    this.pageContainer = pageContainer;
    this.recyclerView = recyclerView;
  }

  @Override
  @NonNull
  public NestedCoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StatsListFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StatsListFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.stats_list_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StatsListFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      NestedCoordinatorLayout coordinatorLayout = (NestedCoordinatorLayout) rootView;

      id = R.id.date_selection_toolbar;
      AppBarLayout dateSelectionToolbar = ViewBindings.findChildViewById(rootView, id);
      if (dateSelectionToolbar == null) {
        break missingId;
      }

      id = R.id.date_selector;
      View dateSelector = ViewBindings.findChildViewById(rootView, id);
      if (dateSelector == null) {
        break missingId;
      }
      StatsDateSelectorBinding binding_dateSelector = StatsDateSelectorBinding.bind(dateSelector);

      id = R.id.empty_view;
      View emptyView = ViewBindings.findChildViewById(rootView, id);
      if (emptyView == null) {
        break missingId;
      }
      StatsEmptyViewBinding binding_emptyView = StatsEmptyViewBinding.bind(emptyView);

      id = R.id.error_view;
      View errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }
      StatsErrorViewBinding binding_errorView = StatsErrorViewBinding.bind(errorView);

      id = R.id.loadingContainer;
      ShimmerFrameLayout loadingContainer = ViewBindings.findChildViewById(rootView, id);
      if (loadingContainer == null) {
        break missingId;
      }

      id = R.id.loadingRecyclerView;
      RecyclerView loadingRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (loadingRecyclerView == null) {
        break missingId;
      }

      id = R.id.page_container;
      LinearLayout pageContainer = ViewBindings.findChildViewById(rootView, id);
      if (pageContainer == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      return new StatsListFragmentBinding((NestedCoordinatorLayout) rootView, coordinatorLayout,
          dateSelectionToolbar, binding_dateSelector, binding_emptyView, binding_errorView,
          loadingContainer, loadingRecyclerView, pageContainer, recyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
