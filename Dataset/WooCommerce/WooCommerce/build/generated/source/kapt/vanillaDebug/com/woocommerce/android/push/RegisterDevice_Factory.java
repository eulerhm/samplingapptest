// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.push;

import com.woocommerce.android.AppPrefsWrapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.AccountStore;
import org.wordpress.android.fluxc.store.GetDeviceRegistrationStatus;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RegisterDevice_Factory implements Factory<RegisterDevice> {
  private final Provider<AppPrefsWrapper> appPrefsWrapperProvider;

  private final Provider<AccountStore> accountStoreProvider;

  private final Provider<NotificationRepository> notificationRepositoryProvider;

  private final Provider<GetDeviceRegistrationStatus> getDeviceRegistrationStatusProvider;

  public RegisterDevice_Factory(Provider<AppPrefsWrapper> appPrefsWrapperProvider,
      Provider<AccountStore> accountStoreProvider,
      Provider<NotificationRepository> notificationRepositoryProvider,
      Provider<GetDeviceRegistrationStatus> getDeviceRegistrationStatusProvider) {
    this.appPrefsWrapperProvider = appPrefsWrapperProvider;
    this.accountStoreProvider = accountStoreProvider;
    this.notificationRepositoryProvider = notificationRepositoryProvider;
    this.getDeviceRegistrationStatusProvider = getDeviceRegistrationStatusProvider;
  }

  @Override
  public RegisterDevice get() {
    return newInstance(appPrefsWrapperProvider.get(), accountStoreProvider.get(), notificationRepositoryProvider.get(), getDeviceRegistrationStatusProvider.get());
  }

  public static RegisterDevice_Factory create(Provider<AppPrefsWrapper> appPrefsWrapperProvider,
      Provider<AccountStore> accountStoreProvider,
      Provider<NotificationRepository> notificationRepositoryProvider,
      Provider<GetDeviceRegistrationStatus> getDeviceRegistrationStatusProvider) {
    return new RegisterDevice_Factory(appPrefsWrapperProvider, accountStoreProvider, notificationRepositoryProvider, getDeviceRegistrationStatusProvider);
  }

  public static RegisterDevice newInstance(AppPrefsWrapper appPrefsWrapper,
      AccountStore accountStore, NotificationRepository notificationRepository,
      GetDeviceRegistrationStatus getDeviceRegistrationStatus) {
    return new RegisterDevice(appPrefsWrapper, accountStore, notificationRepository, getDeviceRegistrationStatus);
  }
}
