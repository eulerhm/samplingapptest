// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.persistence.sync;

import android.content.Context;
import androidx.work.WorkerParameters;
import com.google.android.gnd.persistence.local.LocalDataStore;
import com.google.android.gnd.persistence.remote.RemoteDataStore;
import com.google.android.gnd.system.NotificationManager;
import dagger.internal.DaggerGenerated;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocalMutationSyncWorker_Factory {
  private final Provider<LocalDataStore> localDataStoreProvider;

  private final Provider<RemoteDataStore> remoteDataStoreProvider;

  private final Provider<NotificationManager> notificationManagerProvider;

  private final Provider<PhotoSyncWorkManager> photoSyncWorkManagerProvider;

  public LocalMutationSyncWorker_Factory(Provider<LocalDataStore> localDataStoreProvider,
      Provider<RemoteDataStore> remoteDataStoreProvider,
      Provider<NotificationManager> notificationManagerProvider,
      Provider<PhotoSyncWorkManager> photoSyncWorkManagerProvider) {
    this.localDataStoreProvider = localDataStoreProvider;
    this.remoteDataStoreProvider = remoteDataStoreProvider;
    this.notificationManagerProvider = notificationManagerProvider;
    this.photoSyncWorkManagerProvider = photoSyncWorkManagerProvider;
  }

  public LocalMutationSyncWorker get(Context context, WorkerParameters params) {
    return newInstance(context, params, localDataStoreProvider.get(), remoteDataStoreProvider.get(), notificationManagerProvider.get(), photoSyncWorkManagerProvider.get());
  }

  public static LocalMutationSyncWorker_Factory create(
      Provider<LocalDataStore> localDataStoreProvider,
      Provider<RemoteDataStore> remoteDataStoreProvider,
      Provider<NotificationManager> notificationManagerProvider,
      Provider<PhotoSyncWorkManager> photoSyncWorkManagerProvider) {
    return new LocalMutationSyncWorker_Factory(localDataStoreProvider, remoteDataStoreProvider, notificationManagerProvider, photoSyncWorkManagerProvider);
  }

  public static LocalMutationSyncWorker newInstance(Context context, WorkerParameters params,
      LocalDataStore localDataStore, RemoteDataStore remoteDataStore,
      NotificationManager notificationManager, PhotoSyncWorkManager photoSyncWorkManager) {
    return new LocalMutationSyncWorker(context, params, localDataStore, remoteDataStore, notificationManager, photoSyncWorkManager);
  }
}
