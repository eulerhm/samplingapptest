// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.ui.offlinebasemap.viewer;

import android.content.Context;
import com.google.android.gnd.repository.OfflineAreaRepository;
import com.google.android.gnd.ui.common.Navigator;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OfflineAreaViewerViewModel_Factory implements Factory<OfflineAreaViewerViewModel> {
  private final Provider<OfflineAreaRepository> offlineAreaRepositoryProvider;

  private final Provider<Context> contextProvider;

  private final Provider<Navigator> navigatorProvider;

  private final Provider<Navigator> navigatorProvider2;

  public OfflineAreaViewerViewModel_Factory(
      Provider<OfflineAreaRepository> offlineAreaRepositoryProvider,
      Provider<Context> contextProvider, Provider<Navigator> navigatorProvider,
      Provider<Navigator> navigatorProvider2) {
    this.offlineAreaRepositoryProvider = offlineAreaRepositoryProvider;
    this.contextProvider = contextProvider;
    this.navigatorProvider = navigatorProvider;
    this.navigatorProvider2 = navigatorProvider2;
  }

  @Override
  public OfflineAreaViewerViewModel get() {
    OfflineAreaViewerViewModel instance = newInstance(offlineAreaRepositoryProvider.get(), contextProvider.get(), navigatorProvider.get());
    OfflineAreaViewerViewModel_MembersInjector.injectNavigator(instance, navigatorProvider2.get());
    return instance;
  }

  public static OfflineAreaViewerViewModel_Factory create(
      Provider<OfflineAreaRepository> offlineAreaRepositoryProvider,
      Provider<Context> contextProvider, Provider<Navigator> navigatorProvider,
      Provider<Navigator> navigatorProvider2) {
    return new OfflineAreaViewerViewModel_Factory(offlineAreaRepositoryProvider, contextProvider, navigatorProvider, navigatorProvider2);
  }

  public static OfflineAreaViewerViewModel newInstance(OfflineAreaRepository offlineAreaRepository,
      Context context, Navigator navigator) {
    return new OfflineAreaViewerViewModel(offlineAreaRepository, context, navigator);
  }
}
