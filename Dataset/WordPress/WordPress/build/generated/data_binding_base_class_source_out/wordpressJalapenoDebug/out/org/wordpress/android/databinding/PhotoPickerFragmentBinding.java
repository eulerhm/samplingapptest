// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.ActionableEmptyView;
import org.wordpress.android.ui.prefs.EmptyViewRecyclerView;

public final class PhotoPickerFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ActionableEmptyView actionableEmptyView;

  @NonNull
  public final ConstraintLayout containerInsertEditBar;

  @NonNull
  public final MaterialCardView containerMediaSourceBar;

  @NonNull
  public final ImageView iconCamera;

  @NonNull
  public final ImageView iconPicker;

  @NonNull
  public final ImageView iconWpmedia;

  @NonNull
  public final EmptyViewRecyclerView recycler;

  @NonNull
  public final ActionableEmptyView softAskView;

  @NonNull
  public final TextView textEdit;

  @NonNull
  public final TextView textInsert;

  @NonNull
  public final FloatingActionButton wpStoriesTakePicture;

  private PhotoPickerFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ActionableEmptyView actionableEmptyView,
      @NonNull ConstraintLayout containerInsertEditBar,
      @NonNull MaterialCardView containerMediaSourceBar, @NonNull ImageView iconCamera,
      @NonNull ImageView iconPicker, @NonNull ImageView iconWpmedia,
      @NonNull EmptyViewRecyclerView recycler, @NonNull ActionableEmptyView softAskView,
      @NonNull TextView textEdit, @NonNull TextView textInsert,
      @NonNull FloatingActionButton wpStoriesTakePicture) {
    this.rootView = rootView;
    this.actionableEmptyView = actionableEmptyView;
    this.containerInsertEditBar = containerInsertEditBar;
    this.containerMediaSourceBar = containerMediaSourceBar;
    this.iconCamera = iconCamera;
    this.iconPicker = iconPicker;
    this.iconWpmedia = iconWpmedia;
    this.recycler = recycler;
    this.softAskView = softAskView;
    this.textEdit = textEdit;
    this.textInsert = textInsert;
    this.wpStoriesTakePicture = wpStoriesTakePicture;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PhotoPickerFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PhotoPickerFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.photo_picker_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PhotoPickerFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionable_empty_view;
      ActionableEmptyView actionableEmptyView = ViewBindings.findChildViewById(rootView, id);
      if (actionableEmptyView == null) {
        break missingId;
      }

      id = R.id.container_insert_edit_bar;
      ConstraintLayout containerInsertEditBar = ViewBindings.findChildViewById(rootView, id);
      if (containerInsertEditBar == null) {
        break missingId;
      }

      id = R.id.container_media_source_bar;
      MaterialCardView containerMediaSourceBar = ViewBindings.findChildViewById(rootView, id);
      if (containerMediaSourceBar == null) {
        break missingId;
      }

      id = R.id.icon_camera;
      ImageView iconCamera = ViewBindings.findChildViewById(rootView, id);
      if (iconCamera == null) {
        break missingId;
      }

      id = R.id.icon_picker;
      ImageView iconPicker = ViewBindings.findChildViewById(rootView, id);
      if (iconPicker == null) {
        break missingId;
      }

      id = R.id.icon_wpmedia;
      ImageView iconWpmedia = ViewBindings.findChildViewById(rootView, id);
      if (iconWpmedia == null) {
        break missingId;
      }

      id = R.id.recycler;
      EmptyViewRecyclerView recycler = ViewBindings.findChildViewById(rootView, id);
      if (recycler == null) {
        break missingId;
      }

      id = R.id.soft_ask_view;
      ActionableEmptyView softAskView = ViewBindings.findChildViewById(rootView, id);
      if (softAskView == null) {
        break missingId;
      }

      id = R.id.text_edit;
      TextView textEdit = ViewBindings.findChildViewById(rootView, id);
      if (textEdit == null) {
        break missingId;
      }

      id = R.id.text_insert;
      TextView textInsert = ViewBindings.findChildViewById(rootView, id);
      if (textInsert == null) {
        break missingId;
      }

      id = R.id.wp_stories_take_picture;
      FloatingActionButton wpStoriesTakePicture = ViewBindings.findChildViewById(rootView, id);
      if (wpStoriesTakePicture == null) {
        break missingId;
      }

      return new PhotoPickerFragmentBinding((CoordinatorLayout) rootView, actionableEmptyView,
          containerInsertEditBar, containerMediaSourceBar, iconCamera, iconPicker, iconWpmedia,
          recycler, softAskView, textEdit, textInsert, wpStoriesTakePicture);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
