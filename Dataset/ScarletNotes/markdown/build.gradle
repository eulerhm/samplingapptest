apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.appconfig_compile_sdk_version

    defaultConfig {
        minSdkVersion rootProject.ext.appconfig_min_os_version
        targetSdkVersion rootProject.ext.appconfig_target_os_version
        versionCode rootProject.ext.appconfig_version_code
        versionName rootProject.ext.appconfig_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        animationsDisabled = true
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1"
    androidTestImplementation project(path: ':markdown')

    androidTestUtil 'androidx.test:orchestrator:1.3.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    implementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    implementation 'org.javatuples:javatuples:1.2'
}


project.gradle.taskGraph.whenReady {
    -> project.tasks.findAll { it.name =~ /connected.+AndroidTest/ }.each {
        it.ignoreFailures = true
    }
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed" //, "standardOut", "standardError"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        showStandardStreams = false
    }
}
