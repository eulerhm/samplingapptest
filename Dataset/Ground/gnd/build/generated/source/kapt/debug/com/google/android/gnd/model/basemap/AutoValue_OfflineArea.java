package com.google.android.gnd.model.basemap;

import com.google.android.gms.maps.model.LatLngBounds;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_OfflineArea extends OfflineArea {

  private final String id;

  private final OfflineArea.State state;

  private final LatLngBounds bounds;

  private final String name;

  private AutoValue_OfflineArea(
      String id,
      OfflineArea.State state,
      LatLngBounds bounds,
      String name) {
    this.id = id;
    this.state = state;
    this.bounds = bounds;
    this.name = name;
  }

  @Override
  public String getId() {
    return id;
  }

  @Override
  public OfflineArea.State getState() {
    return state;
  }

  @Override
  public LatLngBounds getBounds() {
    return bounds;
  }

  @Override
  public String getName() {
    return name;
  }

  @Override
  public String toString() {
    return "OfflineArea{"
        + "id=" + id + ", "
        + "state=" + state + ", "
        + "bounds=" + bounds + ", "
        + "name=" + name
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof OfflineArea) {
      OfflineArea that = (OfflineArea) o;
      return this.id.equals(that.getId())
          && this.state.equals(that.getState())
          && this.bounds.equals(that.getBounds())
          && this.name.equals(that.getName());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= id.hashCode();
    h$ *= 1000003;
    h$ ^= state.hashCode();
    h$ *= 1000003;
    h$ ^= bounds.hashCode();
    h$ *= 1000003;
    h$ ^= name.hashCode();
    return h$;
  }

  @Override
  public OfflineArea.Builder toBuilder() {
    return new Builder(this);
  }

  static final class Builder extends OfflineArea.Builder {
    private String id;
    private OfflineArea.State state;
    private LatLngBounds bounds;
    private String name;
    Builder() {
    }
    private Builder(OfflineArea source) {
      this.id = source.getId();
      this.state = source.getState();
      this.bounds = source.getBounds();
      this.name = source.getName();
    }
    @Override
    public OfflineArea.Builder setId(String id) {
      if (id == null) {
        throw new NullPointerException("Null id");
      }
      this.id = id;
      return this;
    }
    @Override
    public OfflineArea.Builder setState(OfflineArea.State state) {
      if (state == null) {
        throw new NullPointerException("Null state");
      }
      this.state = state;
      return this;
    }
    @Override
    public OfflineArea.Builder setBounds(LatLngBounds bounds) {
      if (bounds == null) {
        throw new NullPointerException("Null bounds");
      }
      this.bounds = bounds;
      return this;
    }
    @Override
    public OfflineArea.Builder setName(String name) {
      if (name == null) {
        throw new NullPointerException("Null name");
      }
      this.name = name;
      return this;
    }
    @Override
    public OfflineArea build() {
      String missing = "";
      if (this.id == null) {
        missing += " id";
      }
      if (this.state == null) {
        missing += " state";
      }
      if (this.bounds == null) {
        missing += " bounds";
      }
      if (this.name == null) {
        missing += " name";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_OfflineArea(
          this.id,
          this.state,
          this.bounds,
          this.name);
    }
  }

}
