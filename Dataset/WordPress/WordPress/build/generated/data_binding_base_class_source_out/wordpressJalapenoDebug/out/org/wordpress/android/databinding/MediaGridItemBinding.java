// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.WPTextView;

public final class MediaGridItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout containerRetryDelete;

  @NonNull
  public final FrameLayout frameSelectionCount;

  @NonNull
  public final FrameLayout frameVideoOverlay;

  @NonNull
  public final ImageView imageRetry;

  @NonNull
  public final ImageView imageTrash;

  @NonNull
  public final ImageView imageVideoOverlay;

  @NonNull
  public final RelativeLayout mediaGridItemFileContainer;

  @NonNull
  public final WPTextView mediaGridItemFiletype;

  @NonNull
  public final ImageView mediaGridItemFiletypeImage;

  @NonNull
  public final ImageView mediaGridItemImage;

  @NonNull
  public final WPTextView mediaGridItemName;

  @NonNull
  public final ProgressBar mediaGridItemUploadProgress;

  @NonNull
  public final WPTextView mediaGridItemUploadState;

  @NonNull
  public final FrameLayout mediaGridItemUploadStateContainer;

  @NonNull
  public final TextView textSelectionCount;

  private MediaGridItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout containerRetryDelete, @NonNull FrameLayout frameSelectionCount,
      @NonNull FrameLayout frameVideoOverlay, @NonNull ImageView imageRetry,
      @NonNull ImageView imageTrash, @NonNull ImageView imageVideoOverlay,
      @NonNull RelativeLayout mediaGridItemFileContainer, @NonNull WPTextView mediaGridItemFiletype,
      @NonNull ImageView mediaGridItemFiletypeImage, @NonNull ImageView mediaGridItemImage,
      @NonNull WPTextView mediaGridItemName, @NonNull ProgressBar mediaGridItemUploadProgress,
      @NonNull WPTextView mediaGridItemUploadState,
      @NonNull FrameLayout mediaGridItemUploadStateContainer,
      @NonNull TextView textSelectionCount) {
    this.rootView = rootView;
    this.containerRetryDelete = containerRetryDelete;
    this.frameSelectionCount = frameSelectionCount;
    this.frameVideoOverlay = frameVideoOverlay;
    this.imageRetry = imageRetry;
    this.imageTrash = imageTrash;
    this.imageVideoOverlay = imageVideoOverlay;
    this.mediaGridItemFileContainer = mediaGridItemFileContainer;
    this.mediaGridItemFiletype = mediaGridItemFiletype;
    this.mediaGridItemFiletypeImage = mediaGridItemFiletypeImage;
    this.mediaGridItemImage = mediaGridItemImage;
    this.mediaGridItemName = mediaGridItemName;
    this.mediaGridItemUploadProgress = mediaGridItemUploadProgress;
    this.mediaGridItemUploadState = mediaGridItemUploadState;
    this.mediaGridItemUploadStateContainer = mediaGridItemUploadStateContainer;
    this.textSelectionCount = textSelectionCount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MediaGridItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MediaGridItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.media_grid_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MediaGridItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container_retry_delete;
      LinearLayout containerRetryDelete = ViewBindings.findChildViewById(rootView, id);
      if (containerRetryDelete == null) {
        break missingId;
      }

      id = R.id.frame_selection_count;
      FrameLayout frameSelectionCount = ViewBindings.findChildViewById(rootView, id);
      if (frameSelectionCount == null) {
        break missingId;
      }

      id = R.id.frame_video_overlay;
      FrameLayout frameVideoOverlay = ViewBindings.findChildViewById(rootView, id);
      if (frameVideoOverlay == null) {
        break missingId;
      }

      id = R.id.image_retry;
      ImageView imageRetry = ViewBindings.findChildViewById(rootView, id);
      if (imageRetry == null) {
        break missingId;
      }

      id = R.id.image_trash;
      ImageView imageTrash = ViewBindings.findChildViewById(rootView, id);
      if (imageTrash == null) {
        break missingId;
      }

      id = R.id.image_video_overlay;
      ImageView imageVideoOverlay = ViewBindings.findChildViewById(rootView, id);
      if (imageVideoOverlay == null) {
        break missingId;
      }

      id = R.id.media_grid_item_file_container;
      RelativeLayout mediaGridItemFileContainer = ViewBindings.findChildViewById(rootView, id);
      if (mediaGridItemFileContainer == null) {
        break missingId;
      }

      id = R.id.media_grid_item_filetype;
      WPTextView mediaGridItemFiletype = ViewBindings.findChildViewById(rootView, id);
      if (mediaGridItemFiletype == null) {
        break missingId;
      }

      id = R.id.media_grid_item_filetype_image;
      ImageView mediaGridItemFiletypeImage = ViewBindings.findChildViewById(rootView, id);
      if (mediaGridItemFiletypeImage == null) {
        break missingId;
      }

      id = R.id.media_grid_item_image;
      ImageView mediaGridItemImage = ViewBindings.findChildViewById(rootView, id);
      if (mediaGridItemImage == null) {
        break missingId;
      }

      id = R.id.media_grid_item_name;
      WPTextView mediaGridItemName = ViewBindings.findChildViewById(rootView, id);
      if (mediaGridItemName == null) {
        break missingId;
      }

      id = R.id.media_grid_item_upload_progress;
      ProgressBar mediaGridItemUploadProgress = ViewBindings.findChildViewById(rootView, id);
      if (mediaGridItemUploadProgress == null) {
        break missingId;
      }

      id = R.id.media_grid_item_upload_state;
      WPTextView mediaGridItemUploadState = ViewBindings.findChildViewById(rootView, id);
      if (mediaGridItemUploadState == null) {
        break missingId;
      }

      id = R.id.media_grid_item_upload_state_container;
      FrameLayout mediaGridItemUploadStateContainer = ViewBindings.findChildViewById(rootView, id);
      if (mediaGridItemUploadStateContainer == null) {
        break missingId;
      }

      id = R.id.text_selection_count;
      TextView textSelectionCount = ViewBindings.findChildViewById(rootView, id);
      if (textSelectionCount == null) {
        break missingId;
      }

      return new MediaGridItemBinding((ConstraintLayout) rootView, containerRetryDelete,
          frameSelectionCount, frameVideoOverlay, imageRetry, imageTrash, imageVideoOverlay,
          mediaGridItemFileContainer, mediaGridItemFiletype, mediaGridItemFiletypeImage,
          mediaGridItemImage, mediaGridItemName, mediaGridItemUploadProgress,
          mediaGridItemUploadState, mediaGridItemUploadStateContainer, textSelectionCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
