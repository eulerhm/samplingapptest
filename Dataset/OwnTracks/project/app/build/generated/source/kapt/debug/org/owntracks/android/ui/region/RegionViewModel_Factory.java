// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.ui.region;

import dagger.internal.Factory;
import javax.inject.Provider;
import org.owntracks.android.data.repos.LocationRepo;
import org.owntracks.android.data.repos.WaypointsRepo;
import org.owntracks.android.ui.base.navigator.Navigator;
import org.owntracks.android.ui.base.viewmodel.BaseViewModel_MembersInjector;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RegionViewModel_Factory implements Factory<RegionViewModel> {
  private final Provider<WaypointsRepo> waypointsRepoProvider;

  private final Provider<LocationRepo> locationRepoProvider;

  private final Provider<Navigator> navigatorProvider;

  public RegionViewModel_Factory(Provider<WaypointsRepo> waypointsRepoProvider,
      Provider<LocationRepo> locationRepoProvider, Provider<Navigator> navigatorProvider) {
    this.waypointsRepoProvider = waypointsRepoProvider;
    this.locationRepoProvider = locationRepoProvider;
    this.navigatorProvider = navigatorProvider;
  }

  @Override
  public RegionViewModel get() {
    RegionViewModel instance = newInstance(waypointsRepoProvider.get(), locationRepoProvider.get());
    BaseViewModel_MembersInjector.injectNavigator(instance, navigatorProvider.get());
    return instance;
  }

  public static RegionViewModel_Factory create(Provider<WaypointsRepo> waypointsRepoProvider,
      Provider<LocationRepo> locationRepoProvider, Provider<Navigator> navigatorProvider) {
    return new RegionViewModel_Factory(waypointsRepoProvider, locationRepoProvider, navigatorProvider);
  }

  public static RegionViewModel newInstance(WaypointsRepo waypointsRepo,
      LocationRepo locationRepo) {
    return new RegionViewModel(waypointsRepo, locationRepo);
  }
}
