// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.cardreader.payment;

import com.woocommerce.android.ui.orders.details.OrderDetailRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CardReaderInteracRefundableChecker_Factory implements Factory<CardReaderInteracRefundableChecker> {
  private final Provider<OrderDetailRepository> orderDetailRepositoryProvider;

  private final Provider<CardReaderPaymentCurrencySupportedChecker> cardReaderPaymentCurrencySupportedCheckerProvider;

  public CardReaderInteracRefundableChecker_Factory(
      Provider<OrderDetailRepository> orderDetailRepositoryProvider,
      Provider<CardReaderPaymentCurrencySupportedChecker> cardReaderPaymentCurrencySupportedCheckerProvider) {
    this.orderDetailRepositoryProvider = orderDetailRepositoryProvider;
    this.cardReaderPaymentCurrencySupportedCheckerProvider = cardReaderPaymentCurrencySupportedCheckerProvider;
  }

  @Override
  public CardReaderInteracRefundableChecker get() {
    return newInstance(orderDetailRepositoryProvider.get(), cardReaderPaymentCurrencySupportedCheckerProvider.get());
  }

  public static CardReaderInteracRefundableChecker_Factory create(
      Provider<OrderDetailRepository> orderDetailRepositoryProvider,
      Provider<CardReaderPaymentCurrencySupportedChecker> cardReaderPaymentCurrencySupportedCheckerProvider) {
    return new CardReaderInteracRefundableChecker_Factory(orderDetailRepositoryProvider, cardReaderPaymentCurrencySupportedCheckerProvider);
  }

  public static CardReaderInteracRefundableChecker newInstance(
      OrderDetailRepository orderDetailRepository,
      CardReaderPaymentCurrencySupportedChecker cardReaderPaymentCurrencySupportedChecker) {
    return new CardReaderInteracRefundableChecker(orderDetailRepository, cardReaderPaymentCurrencySupportedChecker);
  }
}
