// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class LoginPrologueBackgroundSecondBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView blueCircle;

  @NonNull
  public final ImageView greenCircle;

  @NonNull
  public final Guideline guidelineBlueCircleBottom;

  @NonNull
  public final Guideline guidelineBlueCircleStart;

  @NonNull
  public final Guideline guidelineGreenCircleEnd;

  @NonNull
  public final Guideline guidelineGreenCircleTop;

  @NonNull
  public final Guideline guidelineYellowCircleBottom;

  @NonNull
  public final Guideline guidelineYellowCircleStart;

  @NonNull
  public final ImageView yellowCircle;

  private LoginPrologueBackgroundSecondBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView blueCircle, @NonNull ImageView greenCircle,
      @NonNull Guideline guidelineBlueCircleBottom, @NonNull Guideline guidelineBlueCircleStart,
      @NonNull Guideline guidelineGreenCircleEnd, @NonNull Guideline guidelineGreenCircleTop,
      @NonNull Guideline guidelineYellowCircleBottom, @NonNull Guideline guidelineYellowCircleStart,
      @NonNull ImageView yellowCircle) {
    this.rootView = rootView;
    this.blueCircle = blueCircle;
    this.greenCircle = greenCircle;
    this.guidelineBlueCircleBottom = guidelineBlueCircleBottom;
    this.guidelineBlueCircleStart = guidelineBlueCircleStart;
    this.guidelineGreenCircleEnd = guidelineGreenCircleEnd;
    this.guidelineGreenCircleTop = guidelineGreenCircleTop;
    this.guidelineYellowCircleBottom = guidelineYellowCircleBottom;
    this.guidelineYellowCircleStart = guidelineYellowCircleStart;
    this.yellowCircle = yellowCircle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginPrologueBackgroundSecondBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginPrologueBackgroundSecondBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.login_prologue_background_second, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginPrologueBackgroundSecondBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blue_circle;
      ImageView blueCircle = ViewBindings.findChildViewById(rootView, id);
      if (blueCircle == null) {
        break missingId;
      }

      id = R.id.green_circle;
      ImageView greenCircle = ViewBindings.findChildViewById(rootView, id);
      if (greenCircle == null) {
        break missingId;
      }

      id = R.id.guideline_blue_circle_bottom;
      Guideline guidelineBlueCircleBottom = ViewBindings.findChildViewById(rootView, id);
      if (guidelineBlueCircleBottom == null) {
        break missingId;
      }

      id = R.id.guideline_blue_circle_start;
      Guideline guidelineBlueCircleStart = ViewBindings.findChildViewById(rootView, id);
      if (guidelineBlueCircleStart == null) {
        break missingId;
      }

      id = R.id.guideline_green_circle_end;
      Guideline guidelineGreenCircleEnd = ViewBindings.findChildViewById(rootView, id);
      if (guidelineGreenCircleEnd == null) {
        break missingId;
      }

      id = R.id.guideline_green_circle_top;
      Guideline guidelineGreenCircleTop = ViewBindings.findChildViewById(rootView, id);
      if (guidelineGreenCircleTop == null) {
        break missingId;
      }

      id = R.id.guideline_yellow_circle_bottom;
      Guideline guidelineYellowCircleBottom = ViewBindings.findChildViewById(rootView, id);
      if (guidelineYellowCircleBottom == null) {
        break missingId;
      }

      id = R.id.guideline_yellow_circle_start;
      Guideline guidelineYellowCircleStart = ViewBindings.findChildViewById(rootView, id);
      if (guidelineYellowCircleStart == null) {
        break missingId;
      }

      id = R.id.yellow_circle;
      ImageView yellowCircle = ViewBindings.findChildViewById(rootView, id);
      if (yellowCircle == null) {
        break missingId;
      }

      return new LoginPrologueBackgroundSecondBinding((ConstraintLayout) rootView, blueCircle,
          greenCircle, guidelineBlueCircleBottom, guidelineBlueCircleStart, guidelineGreenCircleEnd,
          guidelineGreenCircleTop, guidelineYellowCircleBottom, guidelineYellowCircleStart,
          yellowCircle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
