// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class PluginBrowserRowBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialTextView pluginAuthor;

  @NonNull
  public final ImageView pluginIcon;

  @NonNull
  public final MaterialTextView pluginName;

  @NonNull
  public final LinearLayout pluginStatusContainer;

  @NonNull
  public final ImageView pluginStatusIcon;

  @NonNull
  public final MaterialTextView pluginStatusText;

  @NonNull
  public final RatingBar ratingBar;

  private PluginBrowserRowBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialTextView pluginAuthor, @NonNull ImageView pluginIcon,
      @NonNull MaterialTextView pluginName, @NonNull LinearLayout pluginStatusContainer,
      @NonNull ImageView pluginStatusIcon, @NonNull MaterialTextView pluginStatusText,
      @NonNull RatingBar ratingBar) {
    this.rootView = rootView;
    this.pluginAuthor = pluginAuthor;
    this.pluginIcon = pluginIcon;
    this.pluginName = pluginName;
    this.pluginStatusContainer = pluginStatusContainer;
    this.pluginStatusIcon = pluginStatusIcon;
    this.pluginStatusText = pluginStatusText;
    this.ratingBar = ratingBar;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static PluginBrowserRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PluginBrowserRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.plugin_browser_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PluginBrowserRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.plugin_author;
      MaterialTextView pluginAuthor = ViewBindings.findChildViewById(rootView, id);
      if (pluginAuthor == null) {
        break missingId;
      }

      id = R.id.plugin_icon;
      ImageView pluginIcon = ViewBindings.findChildViewById(rootView, id);
      if (pluginIcon == null) {
        break missingId;
      }

      id = R.id.plugin_name;
      MaterialTextView pluginName = ViewBindings.findChildViewById(rootView, id);
      if (pluginName == null) {
        break missingId;
      }

      id = R.id.plugin_status_container;
      LinearLayout pluginStatusContainer = ViewBindings.findChildViewById(rootView, id);
      if (pluginStatusContainer == null) {
        break missingId;
      }

      id = R.id.plugin_status_icon;
      ImageView pluginStatusIcon = ViewBindings.findChildViewById(rootView, id);
      if (pluginStatusIcon == null) {
        break missingId;
      }

      id = R.id.plugin_status_text;
      MaterialTextView pluginStatusText = ViewBindings.findChildViewById(rootView, id);
      if (pluginStatusText == null) {
        break missingId;
      }

      id = R.id.rating_bar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      return new PluginBrowserRowBinding((MaterialCardView) rootView, pluginAuthor, pluginIcon,
          pluginName, pluginStatusContainer, pluginStatusIcon, pluginStatusText, ratingBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
