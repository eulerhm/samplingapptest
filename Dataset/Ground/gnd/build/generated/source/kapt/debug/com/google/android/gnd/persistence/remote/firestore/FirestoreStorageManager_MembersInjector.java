// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.persistence.remote.firestore;

import com.google.firebase.storage.StorageReference;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FirestoreStorageManager_MembersInjector implements MembersInjector<FirestoreStorageManager> {
  private final Provider<StorageReference> storageReferenceProvider;

  public FirestoreStorageManager_MembersInjector(
      Provider<StorageReference> storageReferenceProvider) {
    this.storageReferenceProvider = storageReferenceProvider;
  }

  public static MembersInjector<FirestoreStorageManager> create(
      Provider<StorageReference> storageReferenceProvider) {
    return new FirestoreStorageManager_MembersInjector(storageReferenceProvider);
  }

  @Override
  public void injectMembers(FirestoreStorageManager instance) {
    injectStorageReference(instance, storageReferenceProvider.get());
  }

  @InjectedFieldSignature("com.google.android.gnd.persistence.remote.firestore.FirestoreStorageManager.storageReference")
  public static void injectStorageReference(FirestoreStorageManager instance,
      StorageReference storageReference) {
    instance.storageReference = storageReference;
  }
}
