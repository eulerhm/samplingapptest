// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.reader.views.ReaderFollowButton;

public final class ReaderSiteHeaderViewBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ReaderFollowButton followButton;

  @NonNull
  public final AppCompatImageView imageBlavatar;

  @NonNull
  public final ConstraintLayout layoutBlogInfo;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final MaterialTextView textBlogDescription;

  @NonNull
  public final MaterialTextView textBlogFollowCount;

  @NonNull
  public final MaterialTextView textBlogName;

  @NonNull
  public final MaterialTextView textDomain;

  private ReaderSiteHeaderViewBinding(@NonNull MaterialCardView rootView,
      @NonNull ReaderFollowButton followButton, @NonNull AppCompatImageView imageBlavatar,
      @NonNull ConstraintLayout layoutBlogInfo, @NonNull RelativeLayout relativeLayout,
      @NonNull MaterialTextView textBlogDescription, @NonNull MaterialTextView textBlogFollowCount,
      @NonNull MaterialTextView textBlogName, @NonNull MaterialTextView textDomain) {
    this.rootView = rootView;
    this.followButton = followButton;
    this.imageBlavatar = imageBlavatar;
    this.layoutBlogInfo = layoutBlogInfo;
    this.relativeLayout = relativeLayout;
    this.textBlogDescription = textBlogDescription;
    this.textBlogFollowCount = textBlogFollowCount;
    this.textBlogName = textBlogName;
    this.textDomain = textDomain;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ReaderSiteHeaderViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReaderSiteHeaderViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reader_site_header_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReaderSiteHeaderViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.follow_button;
      ReaderFollowButton followButton = ViewBindings.findChildViewById(rootView, id);
      if (followButton == null) {
        break missingId;
      }

      id = R.id.image_blavatar;
      AppCompatImageView imageBlavatar = ViewBindings.findChildViewById(rootView, id);
      if (imageBlavatar == null) {
        break missingId;
      }

      id = R.id.layout_blog_info;
      ConstraintLayout layoutBlogInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutBlogInfo == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      RelativeLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.text_blog_description;
      MaterialTextView textBlogDescription = ViewBindings.findChildViewById(rootView, id);
      if (textBlogDescription == null) {
        break missingId;
      }

      id = R.id.text_blog_follow_count;
      MaterialTextView textBlogFollowCount = ViewBindings.findChildViewById(rootView, id);
      if (textBlogFollowCount == null) {
        break missingId;
      }

      id = R.id.text_blog_name;
      MaterialTextView textBlogName = ViewBindings.findChildViewById(rootView, id);
      if (textBlogName == null) {
        break missingId;
      }

      id = R.id.text_domain;
      MaterialTextView textDomain = ViewBindings.findChildViewById(rootView, id);
      if (textDomain == null) {
        break missingId;
      }

      return new ReaderSiteHeaderViewBinding((MaterialCardView) rootView, followButton,
          imageBlavatar, layoutBlogInfo, relativeLayout, textBlogDescription, textBlogFollowCount,
          textBlogName, textDomain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
