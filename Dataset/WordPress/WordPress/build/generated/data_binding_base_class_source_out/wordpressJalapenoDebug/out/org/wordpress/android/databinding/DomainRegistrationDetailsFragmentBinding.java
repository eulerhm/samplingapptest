// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.radiobutton.MaterialRadioButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.WPTextView;

public final class DomainRegistrationDetailsFragmentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextInputEditText addressFirstLineInput;

  @NonNull
  public final TextInputEditText addressSecondLineInput;

  @NonNull
  public final TextInputEditText cityInput;

  @NonNull
  public final TextInputEditText countryCodeInput;

  @NonNull
  public final TextInputEditText countryInput;

  @NonNull
  public final MaterialRadioButton domainPrivacyOffRadioButton;

  @NonNull
  public final MaterialRadioButton domainPrivacyOnRadioButton;

  @NonNull
  public final RadioGroup domainPrivacyOptionsRadiogroup;

  @NonNull
  public final NestedScrollView domainRegistrationDetailsContainer;

  @NonNull
  public final TextInputEditText emailInput;

  @NonNull
  public final TextInputEditText firstNameInput;

  @NonNull
  public final RelativeLayout formProgressIndicator;

  @NonNull
  public final TextInputEditText lastNameInput;

  @NonNull
  public final TextInputEditText organizationInput;

  @NonNull
  public final TextInputEditText phoneNumberInput;

  @NonNull
  public final TextInputEditText postalCodeInput;

  @NonNull
  public final TextInputLayout postalCodeInputContainer;

  @NonNull
  public final MaterialButton registerDomainButton;

  @NonNull
  public final MaterialCardView registerDomainButtonContainer;

  @NonNull
  public final RelativeLayout stateContainer;

  @NonNull
  public final TextInputEditText stateInput;

  @NonNull
  public final TextInputLayout stateInputContainer;

  @NonNull
  public final ProgressBar statesLoadingProgressIndicator;

  @NonNull
  public final WPTextView tosExplanation;

  private DomainRegistrationDetailsFragmentBinding(@NonNull RelativeLayout rootView,
      @NonNull TextInputEditText addressFirstLineInput,
      @NonNull TextInputEditText addressSecondLineInput, @NonNull TextInputEditText cityInput,
      @NonNull TextInputEditText countryCodeInput, @NonNull TextInputEditText countryInput,
      @NonNull MaterialRadioButton domainPrivacyOffRadioButton,
      @NonNull MaterialRadioButton domainPrivacyOnRadioButton,
      @NonNull RadioGroup domainPrivacyOptionsRadiogroup,
      @NonNull NestedScrollView domainRegistrationDetailsContainer,
      @NonNull TextInputEditText emailInput, @NonNull TextInputEditText firstNameInput,
      @NonNull RelativeLayout formProgressIndicator, @NonNull TextInputEditText lastNameInput,
      @NonNull TextInputEditText organizationInput, @NonNull TextInputEditText phoneNumberInput,
      @NonNull TextInputEditText postalCodeInput, @NonNull TextInputLayout postalCodeInputContainer,
      @NonNull MaterialButton registerDomainButton,
      @NonNull MaterialCardView registerDomainButtonContainer,
      @NonNull RelativeLayout stateContainer, @NonNull TextInputEditText stateInput,
      @NonNull TextInputLayout stateInputContainer,
      @NonNull ProgressBar statesLoadingProgressIndicator, @NonNull WPTextView tosExplanation) {
    this.rootView = rootView;
    this.addressFirstLineInput = addressFirstLineInput;
    this.addressSecondLineInput = addressSecondLineInput;
    this.cityInput = cityInput;
    this.countryCodeInput = countryCodeInput;
    this.countryInput = countryInput;
    this.domainPrivacyOffRadioButton = domainPrivacyOffRadioButton;
    this.domainPrivacyOnRadioButton = domainPrivacyOnRadioButton;
    this.domainPrivacyOptionsRadiogroup = domainPrivacyOptionsRadiogroup;
    this.domainRegistrationDetailsContainer = domainRegistrationDetailsContainer;
    this.emailInput = emailInput;
    this.firstNameInput = firstNameInput;
    this.formProgressIndicator = formProgressIndicator;
    this.lastNameInput = lastNameInput;
    this.organizationInput = organizationInput;
    this.phoneNumberInput = phoneNumberInput;
    this.postalCodeInput = postalCodeInput;
    this.postalCodeInputContainer = postalCodeInputContainer;
    this.registerDomainButton = registerDomainButton;
    this.registerDomainButtonContainer = registerDomainButtonContainer;
    this.stateContainer = stateContainer;
    this.stateInput = stateInput;
    this.stateInputContainer = stateInputContainer;
    this.statesLoadingProgressIndicator = statesLoadingProgressIndicator;
    this.tosExplanation = tosExplanation;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DomainRegistrationDetailsFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DomainRegistrationDetailsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.domain_registration_details_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DomainRegistrationDetailsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address_first_line_input;
      TextInputEditText addressFirstLineInput = ViewBindings.findChildViewById(rootView, id);
      if (addressFirstLineInput == null) {
        break missingId;
      }

      id = R.id.address_second_line_input;
      TextInputEditText addressSecondLineInput = ViewBindings.findChildViewById(rootView, id);
      if (addressSecondLineInput == null) {
        break missingId;
      }

      id = R.id.city_input;
      TextInputEditText cityInput = ViewBindings.findChildViewById(rootView, id);
      if (cityInput == null) {
        break missingId;
      }

      id = R.id.country_code_input;
      TextInputEditText countryCodeInput = ViewBindings.findChildViewById(rootView, id);
      if (countryCodeInput == null) {
        break missingId;
      }

      id = R.id.country_input;
      TextInputEditText countryInput = ViewBindings.findChildViewById(rootView, id);
      if (countryInput == null) {
        break missingId;
      }

      id = R.id.domain_privacy_off_radio_button;
      MaterialRadioButton domainPrivacyOffRadioButton = ViewBindings.findChildViewById(rootView, id);
      if (domainPrivacyOffRadioButton == null) {
        break missingId;
      }

      id = R.id.domain_privacy_on_radio_button;
      MaterialRadioButton domainPrivacyOnRadioButton = ViewBindings.findChildViewById(rootView, id);
      if (domainPrivacyOnRadioButton == null) {
        break missingId;
      }

      id = R.id.domain_privacy_options_radiogroup;
      RadioGroup domainPrivacyOptionsRadiogroup = ViewBindings.findChildViewById(rootView, id);
      if (domainPrivacyOptionsRadiogroup == null) {
        break missingId;
      }

      id = R.id.domain_registration_details_container;
      NestedScrollView domainRegistrationDetailsContainer = ViewBindings.findChildViewById(rootView, id);
      if (domainRegistrationDetailsContainer == null) {
        break missingId;
      }

      id = R.id.email_input;
      TextInputEditText emailInput = ViewBindings.findChildViewById(rootView, id);
      if (emailInput == null) {
        break missingId;
      }

      id = R.id.first_name_input;
      TextInputEditText firstNameInput = ViewBindings.findChildViewById(rootView, id);
      if (firstNameInput == null) {
        break missingId;
      }

      id = R.id.form_progress_indicator;
      RelativeLayout formProgressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (formProgressIndicator == null) {
        break missingId;
      }

      id = R.id.last_name_input;
      TextInputEditText lastNameInput = ViewBindings.findChildViewById(rootView, id);
      if (lastNameInput == null) {
        break missingId;
      }

      id = R.id.organization_input;
      TextInputEditText organizationInput = ViewBindings.findChildViewById(rootView, id);
      if (organizationInput == null) {
        break missingId;
      }

      id = R.id.phone_number_input;
      TextInputEditText phoneNumberInput = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumberInput == null) {
        break missingId;
      }

      id = R.id.postal_code_input;
      TextInputEditText postalCodeInput = ViewBindings.findChildViewById(rootView, id);
      if (postalCodeInput == null) {
        break missingId;
      }

      id = R.id.postal_code_input_container;
      TextInputLayout postalCodeInputContainer = ViewBindings.findChildViewById(rootView, id);
      if (postalCodeInputContainer == null) {
        break missingId;
      }

      id = R.id.register_domain_button;
      MaterialButton registerDomainButton = ViewBindings.findChildViewById(rootView, id);
      if (registerDomainButton == null) {
        break missingId;
      }

      id = R.id.register_domain_button_container;
      MaterialCardView registerDomainButtonContainer = ViewBindings.findChildViewById(rootView, id);
      if (registerDomainButtonContainer == null) {
        break missingId;
      }

      id = R.id.state_container;
      RelativeLayout stateContainer = ViewBindings.findChildViewById(rootView, id);
      if (stateContainer == null) {
        break missingId;
      }

      id = R.id.state_input;
      TextInputEditText stateInput = ViewBindings.findChildViewById(rootView, id);
      if (stateInput == null) {
        break missingId;
      }

      id = R.id.state_input_container;
      TextInputLayout stateInputContainer = ViewBindings.findChildViewById(rootView, id);
      if (stateInputContainer == null) {
        break missingId;
      }

      id = R.id.states_loading_progress_indicator;
      ProgressBar statesLoadingProgressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (statesLoadingProgressIndicator == null) {
        break missingId;
      }

      id = R.id.tos_explanation;
      WPTextView tosExplanation = ViewBindings.findChildViewById(rootView, id);
      if (tosExplanation == null) {
        break missingId;
      }

      return new DomainRegistrationDetailsFragmentBinding((RelativeLayout) rootView,
          addressFirstLineInput, addressSecondLineInput, cityInput, countryCodeInput, countryInput,
          domainPrivacyOffRadioButton, domainPrivacyOnRadioButton, domainPrivacyOptionsRadiogroup,
          domainRegistrationDetailsContainer, emailInput, firstNameInput, formProgressIndicator,
          lastNameInput, organizationInput, phoneNumberInput, postalCodeInput,
          postalCodeInputContainer, registerDomainButton, registerDomainButtonContainer,
          stateContainer, stateInput, stateInputContainer, statesLoadingProgressIndicator,
          tosExplanation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
