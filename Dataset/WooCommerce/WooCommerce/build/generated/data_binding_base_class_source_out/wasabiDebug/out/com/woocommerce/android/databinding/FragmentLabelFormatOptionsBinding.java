// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLabelFormatOptionsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView labelFormatOptionLabel;

  @NonNull
  public final MaterialTextView labelFormatOptionLabelTxt;

  @NonNull
  public final LinearLayout labelFormatOptionLabelView;

  @NonNull
  public final ImageView labelFormatOptionLegal;

  @NonNull
  public final MaterialTextView labelFormatOptionLegalTxt;

  @NonNull
  public final LinearLayout labelFormatOptionLegalView;

  @NonNull
  public final ImageView labelFormatOptionLetter;

  @NonNull
  public final MaterialTextView labelFormatOptionLetterTxt;

  @NonNull
  public final LinearLayout labelFormatOptionLetterView;

  private FragmentLabelFormatOptionsBinding(@NonNull ScrollView rootView,
      @NonNull ImageView labelFormatOptionLabel,
      @NonNull MaterialTextView labelFormatOptionLabelTxt,
      @NonNull LinearLayout labelFormatOptionLabelView, @NonNull ImageView labelFormatOptionLegal,
      @NonNull MaterialTextView labelFormatOptionLegalTxt,
      @NonNull LinearLayout labelFormatOptionLegalView, @NonNull ImageView labelFormatOptionLetter,
      @NonNull MaterialTextView labelFormatOptionLetterTxt,
      @NonNull LinearLayout labelFormatOptionLetterView) {
    this.rootView = rootView;
    this.labelFormatOptionLabel = labelFormatOptionLabel;
    this.labelFormatOptionLabelTxt = labelFormatOptionLabelTxt;
    this.labelFormatOptionLabelView = labelFormatOptionLabelView;
    this.labelFormatOptionLegal = labelFormatOptionLegal;
    this.labelFormatOptionLegalTxt = labelFormatOptionLegalTxt;
    this.labelFormatOptionLegalView = labelFormatOptionLegalView;
    this.labelFormatOptionLetter = labelFormatOptionLetter;
    this.labelFormatOptionLetterTxt = labelFormatOptionLetterTxt;
    this.labelFormatOptionLetterView = labelFormatOptionLetterView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLabelFormatOptionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLabelFormatOptionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_label_format_options, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLabelFormatOptionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.labelFormatOption_label;
      ImageView labelFormatOptionLabel = ViewBindings.findChildViewById(rootView, id);
      if (labelFormatOptionLabel == null) {
        break missingId;
      }

      id = R.id.labelFormatOption_labelTxt;
      MaterialTextView labelFormatOptionLabelTxt = ViewBindings.findChildViewById(rootView, id);
      if (labelFormatOptionLabelTxt == null) {
        break missingId;
      }

      id = R.id.labelFormatOption_labelView;
      LinearLayout labelFormatOptionLabelView = ViewBindings.findChildViewById(rootView, id);
      if (labelFormatOptionLabelView == null) {
        break missingId;
      }

      id = R.id.labelFormatOption_legal;
      ImageView labelFormatOptionLegal = ViewBindings.findChildViewById(rootView, id);
      if (labelFormatOptionLegal == null) {
        break missingId;
      }

      id = R.id.labelFormatOption_legalTxt;
      MaterialTextView labelFormatOptionLegalTxt = ViewBindings.findChildViewById(rootView, id);
      if (labelFormatOptionLegalTxt == null) {
        break missingId;
      }

      id = R.id.labelFormatOption_legalView;
      LinearLayout labelFormatOptionLegalView = ViewBindings.findChildViewById(rootView, id);
      if (labelFormatOptionLegalView == null) {
        break missingId;
      }

      id = R.id.labelFormatOption_letter;
      ImageView labelFormatOptionLetter = ViewBindings.findChildViewById(rootView, id);
      if (labelFormatOptionLetter == null) {
        break missingId;
      }

      id = R.id.labelFormatOption_letterTxt;
      MaterialTextView labelFormatOptionLetterTxt = ViewBindings.findChildViewById(rootView, id);
      if (labelFormatOptionLetterTxt == null) {
        break missingId;
      }

      id = R.id.labelFormatOption_letterView;
      LinearLayout labelFormatOptionLetterView = ViewBindings.findChildViewById(rootView, id);
      if (labelFormatOptionLetterView == null) {
        break missingId;
      }

      return new FragmentLabelFormatOptionsBinding((ScrollView) rootView, labelFormatOptionLabel,
          labelFormatOptionLabelTxt, labelFormatOptionLabelView, labelFormatOptionLegal,
          labelFormatOptionLegalTxt, labelFormatOptionLegalView, labelFormatOptionLetter,
          labelFormatOptionLetterTxt, labelFormatOptionLetterView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
