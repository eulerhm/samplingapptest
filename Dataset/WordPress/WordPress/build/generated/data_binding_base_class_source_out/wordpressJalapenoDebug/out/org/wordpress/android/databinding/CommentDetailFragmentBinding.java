// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.WPTextView;

public final class CommentDetailFragmentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout commentContent;

  @NonNull
  public final LinearLayout commentContentContainer;

  @NonNull
  public final ImageView imageAvatar;

  @NonNull
  public final LinearLayout layoutBottom;

  @NonNull
  public final ReaderIncludeCommentBoxBinding layoutCommentBox;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final ProgressBar progressLoading;

  @NonNull
  public final WPTextView textContent;

  @NonNull
  public final WPTextView textDate;

  @NonNull
  public final WPTextView textName;

  @NonNull
  public final WPTextView textPostTitle;

  @NonNull
  public final WPTextView textStatus;

  private CommentDetailFragmentBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout commentContent, @NonNull LinearLayout commentContentContainer,
      @NonNull ImageView imageAvatar, @NonNull LinearLayout layoutBottom,
      @NonNull ReaderIncludeCommentBoxBinding layoutCommentBox,
      @NonNull NestedScrollView nestedScrollView, @NonNull ProgressBar progressLoading,
      @NonNull WPTextView textContent, @NonNull WPTextView textDate, @NonNull WPTextView textName,
      @NonNull WPTextView textPostTitle, @NonNull WPTextView textStatus) {
    this.rootView = rootView;
    this.commentContent = commentContent;
    this.commentContentContainer = commentContentContainer;
    this.imageAvatar = imageAvatar;
    this.layoutBottom = layoutBottom;
    this.layoutCommentBox = layoutCommentBox;
    this.nestedScrollView = nestedScrollView;
    this.progressLoading = progressLoading;
    this.textContent = textContent;
    this.textDate = textDate;
    this.textName = textName;
    this.textPostTitle = textPostTitle;
    this.textStatus = textStatus;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CommentDetailFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CommentDetailFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.comment_detail_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CommentDetailFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comment_content;
      RelativeLayout commentContent = ViewBindings.findChildViewById(rootView, id);
      if (commentContent == null) {
        break missingId;
      }

      id = R.id.comment_content_container;
      LinearLayout commentContentContainer = ViewBindings.findChildViewById(rootView, id);
      if (commentContentContainer == null) {
        break missingId;
      }

      id = R.id.image_avatar;
      ImageView imageAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imageAvatar == null) {
        break missingId;
      }

      id = R.id.layout_bottom;
      LinearLayout layoutBottom = ViewBindings.findChildViewById(rootView, id);
      if (layoutBottom == null) {
        break missingId;
      }

      id = R.id.layout_comment_box;
      View layoutCommentBox = ViewBindings.findChildViewById(rootView, id);
      if (layoutCommentBox == null) {
        break missingId;
      }
      ReaderIncludeCommentBoxBinding binding_layoutCommentBox = ReaderIncludeCommentBoxBinding.bind(layoutCommentBox);

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.progress_loading;
      ProgressBar progressLoading = ViewBindings.findChildViewById(rootView, id);
      if (progressLoading == null) {
        break missingId;
      }

      id = R.id.text_content;
      WPTextView textContent = ViewBindings.findChildViewById(rootView, id);
      if (textContent == null) {
        break missingId;
      }

      id = R.id.text_date;
      WPTextView textDate = ViewBindings.findChildViewById(rootView, id);
      if (textDate == null) {
        break missingId;
      }

      id = R.id.text_name;
      WPTextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.text_post_title;
      WPTextView textPostTitle = ViewBindings.findChildViewById(rootView, id);
      if (textPostTitle == null) {
        break missingId;
      }

      id = R.id.text_status;
      WPTextView textStatus = ViewBindings.findChildViewById(rootView, id);
      if (textStatus == null) {
        break missingId;
      }

      return new CommentDetailFragmentBinding((RelativeLayout) rootView, commentContent,
          commentContentContainer, imageAvatar, layoutBottom, binding_layoutCommentBox,
          nestedScrollView, progressLoading, textContent, textDate, textName, textPostTitle,
          textStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
