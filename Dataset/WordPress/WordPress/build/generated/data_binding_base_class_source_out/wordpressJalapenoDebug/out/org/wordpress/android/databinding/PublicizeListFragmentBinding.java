// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.reader.views.ReaderRecyclerView;
import org.wordpress.android.widgets.WPTextView;

public final class PublicizeListFragmentBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final WPTextView emptyView;

  @NonNull
  public final ImageView imageManage;

  @NonNull
  public final LinearLayout manageButton;

  @NonNull
  public final RelativeLayout manageContainer;

  @NonNull
  public final NestedScrollView publicizeListNestedScrollView;

  @NonNull
  public final RelativeLayout publicizeScrollViewChild;

  @NonNull
  public final ReaderRecyclerView recyclerView;

  @NonNull
  public final WPTextView textManageButton;

  @NonNull
  public final WPTextView textManageLabel;

  private PublicizeListFragmentBinding(@NonNull NestedScrollView rootView,
      @NonNull WPTextView emptyView, @NonNull ImageView imageManage,
      @NonNull LinearLayout manageButton, @NonNull RelativeLayout manageContainer,
      @NonNull NestedScrollView publicizeListNestedScrollView,
      @NonNull RelativeLayout publicizeScrollViewChild, @NonNull ReaderRecyclerView recyclerView,
      @NonNull WPTextView textManageButton, @NonNull WPTextView textManageLabel) {
    this.rootView = rootView;
    this.emptyView = emptyView;
    this.imageManage = imageManage;
    this.manageButton = manageButton;
    this.manageContainer = manageContainer;
    this.publicizeListNestedScrollView = publicizeListNestedScrollView;
    this.publicizeScrollViewChild = publicizeScrollViewChild;
    this.recyclerView = recyclerView;
    this.textManageButton = textManageButton;
    this.textManageLabel = textManageLabel;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static PublicizeListFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PublicizeListFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.publicize_list_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PublicizeListFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.empty_view;
      WPTextView emptyView = ViewBindings.findChildViewById(rootView, id);
      if (emptyView == null) {
        break missingId;
      }

      id = R.id.image_manage;
      ImageView imageManage = ViewBindings.findChildViewById(rootView, id);
      if (imageManage == null) {
        break missingId;
      }

      id = R.id.manage_button;
      LinearLayout manageButton = ViewBindings.findChildViewById(rootView, id);
      if (manageButton == null) {
        break missingId;
      }

      id = R.id.manage_container;
      RelativeLayout manageContainer = ViewBindings.findChildViewById(rootView, id);
      if (manageContainer == null) {
        break missingId;
      }

      NestedScrollView publicizeListNestedScrollView = (NestedScrollView) rootView;

      id = R.id.publicize_scroll_view_child;
      RelativeLayout publicizeScrollViewChild = ViewBindings.findChildViewById(rootView, id);
      if (publicizeScrollViewChild == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      ReaderRecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.text_manage_button;
      WPTextView textManageButton = ViewBindings.findChildViewById(rootView, id);
      if (textManageButton == null) {
        break missingId;
      }

      id = R.id.text_manage_label;
      WPTextView textManageLabel = ViewBindings.findChildViewById(rootView, id);
      if (textManageLabel == null) {
        break missingId;
      }

      return new PublicizeListFragmentBinding((NestedScrollView) rootView, emptyView, imageManage,
          manageButton, manageContainer, publicizeListNestedScrollView, publicizeScrollViewChild,
          recyclerView, textManageButton, textManageLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
