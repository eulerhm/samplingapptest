// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewLoginEpilogueButtonBarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonPrimary;

  @NonNull
  public final MaterialButton buttonSecondary;

  @NonNull
  public final LinearLayout loginEpilogueButtonBar;

  private ViewLoginEpilogueButtonBarBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton buttonPrimary, @NonNull MaterialButton buttonSecondary,
      @NonNull LinearLayout loginEpilogueButtonBar) {
    this.rootView = rootView;
    this.buttonPrimary = buttonPrimary;
    this.buttonSecondary = buttonSecondary;
    this.loginEpilogueButtonBar = loginEpilogueButtonBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewLoginEpilogueButtonBarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewLoginEpilogueButtonBarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_login_epilogue_button_bar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewLoginEpilogueButtonBarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_primary;
      MaterialButton buttonPrimary = ViewBindings.findChildViewById(rootView, id);
      if (buttonPrimary == null) {
        break missingId;
      }

      id = R.id.button_secondary;
      MaterialButton buttonSecondary = ViewBindings.findChildViewById(rootView, id);
      if (buttonSecondary == null) {
        break missingId;
      }

      LinearLayout loginEpilogueButtonBar = (LinearLayout) rootView;

      return new ViewLoginEpilogueButtonBarBinding((LinearLayout) rootView, buttonPrimary,
          buttonSecondary, loginEpilogueButtonBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
