// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.WPTextView;

public final class NoteBlockHeaderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView headerAvatar;

  @NonNull
  public final LinearLayout headerFooter;

  @NonNull
  public final LinearLayout headerFooterComment;

  @NonNull
  public final LinearLayout headerRootView;

  @NonNull
  public final WPTextView headerSnippet;

  @NonNull
  public final WPTextView headerUser;

  private NoteBlockHeaderBinding(@NonNull LinearLayout rootView, @NonNull ImageView headerAvatar,
      @NonNull LinearLayout headerFooter, @NonNull LinearLayout headerFooterComment,
      @NonNull LinearLayout headerRootView, @NonNull WPTextView headerSnippet,
      @NonNull WPTextView headerUser) {
    this.rootView = rootView;
    this.headerAvatar = headerAvatar;
    this.headerFooter = headerFooter;
    this.headerFooterComment = headerFooterComment;
    this.headerRootView = headerRootView;
    this.headerSnippet = headerSnippet;
    this.headerUser = headerUser;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NoteBlockHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NoteBlockHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.note_block_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NoteBlockHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.header_avatar;
      ImageView headerAvatar = ViewBindings.findChildViewById(rootView, id);
      if (headerAvatar == null) {
        break missingId;
      }

      id = R.id.header_footer;
      LinearLayout headerFooter = ViewBindings.findChildViewById(rootView, id);
      if (headerFooter == null) {
        break missingId;
      }

      id = R.id.header_footer_comment;
      LinearLayout headerFooterComment = ViewBindings.findChildViewById(rootView, id);
      if (headerFooterComment == null) {
        break missingId;
      }

      id = R.id.header_root_view;
      LinearLayout headerRootView = ViewBindings.findChildViewById(rootView, id);
      if (headerRootView == null) {
        break missingId;
      }

      id = R.id.header_snippet;
      WPTextView headerSnippet = ViewBindings.findChildViewById(rootView, id);
      if (headerSnippet == null) {
        break missingId;
      }

      id = R.id.header_user;
      WPTextView headerUser = ViewBindings.findChildViewById(rootView, id);
      if (headerUser == null) {
        break missingId;
      }

      return new NoteBlockHeaderBinding((LinearLayout) rootView, headerAvatar, headerFooter,
          headerFooterComment, headerRootView, headerSnippet, headerUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
