// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.WCEmptyView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOrderCreationProductSelectionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final WCEmptyView emptyView;

  @NonNull
  public final RecyclerView productsList;

  @NonNull
  public final ConstraintLayout selectProductRoot;

  private FragmentOrderCreationProductSelectionBinding(@NonNull ConstraintLayout rootView,
      @NonNull WCEmptyView emptyView, @NonNull RecyclerView productsList,
      @NonNull ConstraintLayout selectProductRoot) {
    this.rootView = rootView;
    this.emptyView = emptyView;
    this.productsList = productsList;
    this.selectProductRoot = selectProductRoot;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOrderCreationProductSelectionBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOrderCreationProductSelectionBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_order_creation_product_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOrderCreationProductSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.empty_view;
      WCEmptyView emptyView = ViewBindings.findChildViewById(rootView, id);
      if (emptyView == null) {
        break missingId;
      }

      id = R.id.products_list;
      RecyclerView productsList = ViewBindings.findChildViewById(rootView, id);
      if (productsList == null) {
        break missingId;
      }

      ConstraintLayout selectProductRoot = (ConstraintLayout) rootView;

      return new FragmentOrderCreationProductSelectionBinding((ConstraintLayout) rootView,
          emptyView, productsList, selectProductRoot);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
