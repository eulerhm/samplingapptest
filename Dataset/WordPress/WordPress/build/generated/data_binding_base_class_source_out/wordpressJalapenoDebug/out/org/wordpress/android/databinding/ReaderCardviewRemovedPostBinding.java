// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class ReaderCardviewRemovedPostBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView postContainer;

  @NonNull
  public final ConstraintLayout removedItemContainer;

  @NonNull
  public final MaterialTextView removedPostTitle;

  @NonNull
  public final MaterialTextView undoRemove;

  private ReaderCardviewRemovedPostBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialCardView postContainer, @NonNull ConstraintLayout removedItemContainer,
      @NonNull MaterialTextView removedPostTitle, @NonNull MaterialTextView undoRemove) {
    this.rootView = rootView;
    this.postContainer = postContainer;
    this.removedItemContainer = removedItemContainer;
    this.removedPostTitle = removedPostTitle;
    this.undoRemove = undoRemove;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ReaderCardviewRemovedPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReaderCardviewRemovedPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reader_cardview_removed_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReaderCardviewRemovedPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      MaterialCardView postContainer = (MaterialCardView) rootView;

      id = R.id.removed_item_container;
      ConstraintLayout removedItemContainer = ViewBindings.findChildViewById(rootView, id);
      if (removedItemContainer == null) {
        break missingId;
      }

      id = R.id.removed_post_title;
      MaterialTextView removedPostTitle = ViewBindings.findChildViewById(rootView, id);
      if (removedPostTitle == null) {
        break missingId;
      }

      id = R.id.undo_remove;
      MaterialTextView undoRemove = ViewBindings.findChildViewById(rootView, id);
      if (undoRemove == null) {
        break missingId;
      }

      return new ReaderCardviewRemovedPostBinding((MaterialCardView) rootView, postContainer,
          removedItemContainer, removedPostTitle, undoRemove);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
