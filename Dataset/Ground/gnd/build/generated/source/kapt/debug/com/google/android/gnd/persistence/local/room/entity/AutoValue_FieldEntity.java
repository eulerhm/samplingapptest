package com.google.android.gnd.persistence.local.room.entity;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.room.ColumnInfo;
import androidx.room.PrimaryKey;
import com.google.android.gnd.persistence.local.room.models.FieldEntityType;
import com.google.android.gnd.persistence.local.room.models.StepEntityType;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_FieldEntity extends FieldEntity {

  @NonNull
  @PrimaryKey
  @ColumnInfo(name = "id")
  private final String id;

  @ColumnInfo(name = "index")
  private final int index;

  @NonNull
  @ColumnInfo(name = "step_type")
  private final StepEntityType stepType;

  @NonNull
  @ColumnInfo(name = "field_type")
  private final FieldEntityType fieldType;

  @Nullable
  @ColumnInfo(name = "label")
  private final String label;

  @ColumnInfo(name = "is_required")
  private final boolean required;

  @Nullable
  @ColumnInfo(name = "task_id")
  private final String taskId;

  private AutoValue_FieldEntity(
      String id,
      int index,
      StepEntityType stepType,
      FieldEntityType fieldType,
      @Nullable String label,
      boolean required,
      @Nullable String taskId) {
    this.id = id;
    this.index = index;
    this.stepType = stepType;
    this.fieldType = fieldType;
    this.label = label;
    this.required = required;
    this.taskId = taskId;
  }

  @NonNull
  @PrimaryKey
  @ColumnInfo(name = "id")
  @Override
  public String getId() {
    return id;
  }

  @ColumnInfo(name = "index")
  @Override
  public int getIndex() {
    return index;
  }

  @NonNull
  @ColumnInfo(name = "step_type")
  @Override
  public StepEntityType getStepType() {
    return stepType;
  }

  @NonNull
  @ColumnInfo(name = "field_type")
  @Override
  public FieldEntityType getFieldType() {
    return fieldType;
  }

  @Nullable
  @ColumnInfo(name = "label")
  @Override
  public String getLabel() {
    return label;
  }

  @ColumnInfo(name = "is_required")
  @Override
  public boolean isRequired() {
    return required;
  }

  @Nullable
  @ColumnInfo(name = "task_id")
  @Override
  public String getTaskId() {
    return taskId;
  }

  @Override
  public String toString() {
    return "FieldEntity{"
        + "id=" + id + ", "
        + "index=" + index + ", "
        + "stepType=" + stepType + ", "
        + "fieldType=" + fieldType + ", "
        + "label=" + label + ", "
        + "required=" + required + ", "
        + "taskId=" + taskId
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof FieldEntity) {
      FieldEntity that = (FieldEntity) o;
      return this.id.equals(that.getId())
          && this.index == that.getIndex()
          && this.stepType.equals(that.getStepType())
          && this.fieldType.equals(that.getFieldType())
          && (this.label == null ? that.getLabel() == null : this.label.equals(that.getLabel()))
          && this.required == that.isRequired()
          && (this.taskId == null ? that.getTaskId() == null : this.taskId.equals(that.getTaskId()));
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= id.hashCode();
    h$ *= 1000003;
    h$ ^= index;
    h$ *= 1000003;
    h$ ^= stepType.hashCode();
    h$ *= 1000003;
    h$ ^= fieldType.hashCode();
    h$ *= 1000003;
    h$ ^= (label == null) ? 0 : label.hashCode();
    h$ *= 1000003;
    h$ ^= required ? 1231 : 1237;
    h$ *= 1000003;
    h$ ^= (taskId == null) ? 0 : taskId.hashCode();
    return h$;
  }

  static final class Builder extends FieldEntity.Builder {
    private String id;
    private Integer index;
    private StepEntityType stepType;
    private FieldEntityType fieldType;
    private String label;
    private Boolean required;
    private String taskId;
    Builder() {
    }
    @Override
    public FieldEntity.Builder setId(String id) {
      if (id == null) {
        throw new NullPointerException("Null id");
      }
      this.id = id;
      return this;
    }
    @Override
    public FieldEntity.Builder setIndex(int index) {
      this.index = index;
      return this;
    }
    @Override
    public FieldEntity.Builder setStepType(StepEntityType stepType) {
      if (stepType == null) {
        throw new NullPointerException("Null stepType");
      }
      this.stepType = stepType;
      return this;
    }
    @Override
    public FieldEntity.Builder setFieldType(FieldEntityType fieldType) {
      if (fieldType == null) {
        throw new NullPointerException("Null fieldType");
      }
      this.fieldType = fieldType;
      return this;
    }
    @Override
    public FieldEntity.Builder setLabel(String label) {
      this.label = label;
      return this;
    }
    @Override
    public FieldEntity.Builder setRequired(boolean required) {
      this.required = required;
      return this;
    }
    @Override
    public FieldEntity.Builder setTaskId(String taskId) {
      this.taskId = taskId;
      return this;
    }
    @Override
    public FieldEntity build() {
      String missing = "";
      if (this.id == null) {
        missing += " id";
      }
      if (this.index == null) {
        missing += " index";
      }
      if (this.stepType == null) {
        missing += " stepType";
      }
      if (this.fieldType == null) {
        missing += " fieldType";
      }
      if (this.required == null) {
        missing += " required";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_FieldEntity(
          this.id,
          this.index,
          this.stepType,
          this.fieldType,
          this.label,
          this.required,
          this.taskId);
    }
  }

}
