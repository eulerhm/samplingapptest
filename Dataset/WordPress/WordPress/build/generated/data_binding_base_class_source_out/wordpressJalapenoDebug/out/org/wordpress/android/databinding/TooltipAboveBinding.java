// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class TooltipAboveBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView_;

  @NonNull
  public final LinearLayout rootView;

  @NonNull
  public final View tooltipArrow;

  @NonNull
  public final TextView tooltipMessage;

  private TooltipAboveBinding(@NonNull LinearLayout rootView_, @NonNull LinearLayout rootView,
      @NonNull View tooltipArrow, @NonNull TextView tooltipMessage) {
    this.rootView_ = rootView_;
    this.rootView = rootView;
    this.tooltipArrow = tooltipArrow;
    this.tooltipMessage = tooltipMessage;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView_;
  }

  @NonNull
  public static TooltipAboveBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TooltipAboveBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tooltip_above, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TooltipAboveBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout rootView_ = (LinearLayout) rootView;

      id = R.id.tooltip_arrow;
      View tooltipArrow = ViewBindings.findChildViewById(rootView, id);
      if (tooltipArrow == null) {
        break missingId;
      }

      id = R.id.tooltip_message;
      TextView tooltipMessage = ViewBindings.findChildViewById(rootView, id);
      if (tooltipMessage == null) {
        break missingId;
      }

      return new TooltipAboveBinding((LinearLayout) rootView, rootView_, tooltipArrow,
          tooltipMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
