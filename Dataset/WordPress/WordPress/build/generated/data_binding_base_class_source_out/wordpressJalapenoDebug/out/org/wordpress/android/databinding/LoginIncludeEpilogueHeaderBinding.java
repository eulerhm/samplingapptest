// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.WPTextView;

public final class LoginIncludeEpilogueHeaderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView loginEpilogueHeaderAvatar;

  @NonNull
  public final ImageView loginEpilogueHeaderAvatarAdd;

  @NonNull
  public final FrameLayout loginEpilogueHeaderAvatarLayout;

  @NonNull
  public final WPTextView loginEpilogueHeaderSubtitle;

  @NonNull
  public final WPTextView loginEpilogueHeaderTitle;

  private LoginIncludeEpilogueHeaderBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView loginEpilogueHeaderAvatar, @NonNull ImageView loginEpilogueHeaderAvatarAdd,
      @NonNull FrameLayout loginEpilogueHeaderAvatarLayout,
      @NonNull WPTextView loginEpilogueHeaderSubtitle,
      @NonNull WPTextView loginEpilogueHeaderTitle) {
    this.rootView = rootView;
    this.loginEpilogueHeaderAvatar = loginEpilogueHeaderAvatar;
    this.loginEpilogueHeaderAvatarAdd = loginEpilogueHeaderAvatarAdd;
    this.loginEpilogueHeaderAvatarLayout = loginEpilogueHeaderAvatarLayout;
    this.loginEpilogueHeaderSubtitle = loginEpilogueHeaderSubtitle;
    this.loginEpilogueHeaderTitle = loginEpilogueHeaderTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginIncludeEpilogueHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginIncludeEpilogueHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.login_include_epilogue_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginIncludeEpilogueHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login_epilogue_header_avatar;
      ImageView loginEpilogueHeaderAvatar = ViewBindings.findChildViewById(rootView, id);
      if (loginEpilogueHeaderAvatar == null) {
        break missingId;
      }

      id = R.id.login_epilogue_header_avatar_add;
      ImageView loginEpilogueHeaderAvatarAdd = ViewBindings.findChildViewById(rootView, id);
      if (loginEpilogueHeaderAvatarAdd == null) {
        break missingId;
      }

      id = R.id.login_epilogue_header_avatar_layout;
      FrameLayout loginEpilogueHeaderAvatarLayout = ViewBindings.findChildViewById(rootView, id);
      if (loginEpilogueHeaderAvatarLayout == null) {
        break missingId;
      }

      id = R.id.login_epilogue_header_subtitle;
      WPTextView loginEpilogueHeaderSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (loginEpilogueHeaderSubtitle == null) {
        break missingId;
      }

      id = R.id.login_epilogue_header_title;
      WPTextView loginEpilogueHeaderTitle = ViewBindings.findChildViewById(rootView, id);
      if (loginEpilogueHeaderTitle == null) {
        break missingId;
      }

      return new LoginIncludeEpilogueHeaderBinding((LinearLayout) rootView,
          loginEpilogueHeaderAvatar, loginEpilogueHeaderAvatarAdd, loginEpilogueHeaderAvatarLayout,
          loginEpilogueHeaderSubtitle, loginEpilogueHeaderTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
