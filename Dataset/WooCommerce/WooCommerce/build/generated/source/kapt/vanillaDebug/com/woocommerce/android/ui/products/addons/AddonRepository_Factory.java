// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.products.addons;

import com.woocommerce.android.tools.SelectedSite;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.WCAddonsStore;
import org.wordpress.android.fluxc.store.WCOrderStore;
import org.wordpress.android.fluxc.store.WCProductStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddonRepository_Factory implements Factory<AddonRepository> {
  private final Provider<WCOrderStore> orderStoreProvider;

  private final Provider<WCProductStore> productStoreProvider;

  private final Provider<WCAddonsStore> addonsStoreProvider;

  private final Provider<SelectedSite> selectedSiteProvider;

  public AddonRepository_Factory(Provider<WCOrderStore> orderStoreProvider,
      Provider<WCProductStore> productStoreProvider, Provider<WCAddonsStore> addonsStoreProvider,
      Provider<SelectedSite> selectedSiteProvider) {
    this.orderStoreProvider = orderStoreProvider;
    this.productStoreProvider = productStoreProvider;
    this.addonsStoreProvider = addonsStoreProvider;
    this.selectedSiteProvider = selectedSiteProvider;
  }

  @Override
  public AddonRepository get() {
    return newInstance(orderStoreProvider.get(), productStoreProvider.get(), addonsStoreProvider.get(), selectedSiteProvider.get());
  }

  public static AddonRepository_Factory create(Provider<WCOrderStore> orderStoreProvider,
      Provider<WCProductStore> productStoreProvider, Provider<WCAddonsStore> addonsStoreProvider,
      Provider<SelectedSite> selectedSiteProvider) {
    return new AddonRepository_Factory(orderStoreProvider, productStoreProvider, addonsStoreProvider, selectedSiteProvider);
  }

  public static AddonRepository newInstance(WCOrderStore orderStore, WCProductStore productStore,
      WCAddonsStore addonsStore, SelectedSite selectedSite) {
    return new AddonRepository(orderStore, productStore, addonsStore, selectedSite);
  }
}
