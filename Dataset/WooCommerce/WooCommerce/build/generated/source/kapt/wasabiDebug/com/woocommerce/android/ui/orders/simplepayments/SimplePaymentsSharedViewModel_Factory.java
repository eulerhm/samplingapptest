// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.orders.simplepayments;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.tools.SelectedSite;
import com.woocommerce.android.util.CurrencyFormatter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.WooCommerceStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SimplePaymentsSharedViewModel_Factory implements Factory<SimplePaymentsSharedViewModel> {
  private final Provider<SavedStateHandle> savedStateProvider;

  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<WooCommerceStore> wooCommerceStoreProvider;

  private final Provider<CurrencyFormatter> currencyFormatterProvider;

  public SimplePaymentsSharedViewModel_Factory(Provider<SavedStateHandle> savedStateProvider,
      Provider<SelectedSite> selectedSiteProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider,
      Provider<CurrencyFormatter> currencyFormatterProvider) {
    this.savedStateProvider = savedStateProvider;
    this.selectedSiteProvider = selectedSiteProvider;
    this.wooCommerceStoreProvider = wooCommerceStoreProvider;
    this.currencyFormatterProvider = currencyFormatterProvider;
  }

  @Override
  public SimplePaymentsSharedViewModel get() {
    return newInstance(savedStateProvider.get(), selectedSiteProvider.get(), wooCommerceStoreProvider.get(), currencyFormatterProvider.get());
  }

  public static SimplePaymentsSharedViewModel_Factory create(
      Provider<SavedStateHandle> savedStateProvider, Provider<SelectedSite> selectedSiteProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider,
      Provider<CurrencyFormatter> currencyFormatterProvider) {
    return new SimplePaymentsSharedViewModel_Factory(savedStateProvider, selectedSiteProvider, wooCommerceStoreProvider, currencyFormatterProvider);
  }

  public static SimplePaymentsSharedViewModel newInstance(SavedStateHandle savedState,
      SelectedSite selectedSite, WooCommerceStore wooCommerceStore,
      CurrencyFormatter currencyFormatter) {
    return new SimplePaymentsSharedViewModel(savedState, selectedSite, wooCommerceStore, currencyFormatter);
  }
}
