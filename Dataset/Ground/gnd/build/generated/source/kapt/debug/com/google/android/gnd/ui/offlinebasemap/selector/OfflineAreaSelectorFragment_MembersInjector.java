// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.ui.offlinebasemap.selector;

import com.google.android.gnd.ui.common.AbstractFragment_MembersInjector;
import com.google.android.gnd.ui.common.AbstractMapViewerFragment_MembersInjector;
import com.google.android.gnd.ui.common.EphemeralPopups;
import com.google.android.gnd.ui.common.Navigator;
import com.google.android.gnd.ui.common.ViewModelFactory;
import com.google.android.gnd.ui.map.MapFragment;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OfflineAreaSelectorFragment_MembersInjector implements MembersInjector<OfflineAreaSelectorFragment> {
  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  private final Provider<MapFragment> mapFragmentProvider;

  private final Provider<Navigator> navigatorProvider;

  private final Provider<EphemeralPopups> popupsProvider;

  public OfflineAreaSelectorFragment_MembersInjector(
      Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<MapFragment> mapFragmentProvider, Provider<Navigator> navigatorProvider,
      Provider<EphemeralPopups> popupsProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.mapFragmentProvider = mapFragmentProvider;
    this.navigatorProvider = navigatorProvider;
    this.popupsProvider = popupsProvider;
  }

  public static MembersInjector<OfflineAreaSelectorFragment> create(
      Provider<ViewModelFactory> viewModelFactoryProvider,
      Provider<MapFragment> mapFragmentProvider, Provider<Navigator> navigatorProvider,
      Provider<EphemeralPopups> popupsProvider) {
    return new OfflineAreaSelectorFragment_MembersInjector(viewModelFactoryProvider, mapFragmentProvider, navigatorProvider, popupsProvider);
  }

  @Override
  public void injectMembers(OfflineAreaSelectorFragment instance) {
    AbstractFragment_MembersInjector.injectViewModelFactory(instance, viewModelFactoryProvider.get());
    AbstractMapViewerFragment_MembersInjector.injectMapFragment(instance, mapFragmentProvider.get());
    injectNavigator(instance, navigatorProvider.get());
    injectPopups(instance, popupsProvider.get());
  }

  @InjectedFieldSignature("com.google.android.gnd.ui.offlinebasemap.selector.OfflineAreaSelectorFragment.navigator")
  public static void injectNavigator(OfflineAreaSelectorFragment instance, Navigator navigator) {
    instance.navigator = navigator;
  }

  @InjectedFieldSignature("com.google.android.gnd.ui.offlinebasemap.selector.OfflineAreaSelectorFragment.popups")
  public static void injectPopups(OfflineAreaSelectorFragment instance, EphemeralPopups popups) {
    instance.popups = popups;
  }
}
