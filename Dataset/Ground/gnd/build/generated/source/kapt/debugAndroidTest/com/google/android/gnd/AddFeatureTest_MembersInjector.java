// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd;

import com.google.android.gnd.system.auth.FakeAuthenticationManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddFeatureTest_MembersInjector implements MembersInjector<AddFeatureTest> {
  private final Provider<FakeAuthenticationManager> fakeAuthenticationManagerProvider;

  public AddFeatureTest_MembersInjector(
      Provider<FakeAuthenticationManager> fakeAuthenticationManagerProvider) {
    this.fakeAuthenticationManagerProvider = fakeAuthenticationManagerProvider;
  }

  public static MembersInjector<AddFeatureTest> create(
      Provider<FakeAuthenticationManager> fakeAuthenticationManagerProvider) {
    return new AddFeatureTest_MembersInjector(fakeAuthenticationManagerProvider);
  }

  @Override
  public void injectMembers(AddFeatureTest instance) {
    injectFakeAuthenticationManager(instance, fakeAuthenticationManagerProvider.get());
  }

  @InjectedFieldSignature("com.google.android.gnd.AddFeatureTest.fakeAuthenticationManager")
  public static void injectFakeAuthenticationManager(AddFeatureTest instance,
      FakeAuthenticationManager fakeAuthenticationManager) {
    instance.fakeAuthenticationManager = fakeAuthenticationManager;
  }
}
