// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.ui.orders.creation.views.OrderCreationSectionView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSimplePaymentsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonDone;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final LinearLayout containerAmount;

  @NonNull
  public final FrameLayout containerButton;

  @NonNull
  public final LinearLayout containerEmail;

  @NonNull
  public final LinearLayout containerSubtotal;

  @NonNull
  public final LinearLayout containerTotal;

  @NonNull
  public final View divider1;

  @NonNull
  public final View divider2;

  @NonNull
  public final View divider3;

  @NonNull
  public final View divider4;

  @NonNull
  public final TextInputEditText editEmail;

  @NonNull
  public final RecyclerView listTaxes;

  @NonNull
  public final OrderCreationSectionView notesSection;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final SwitchMaterial switchChargeTaxes;

  @NonNull
  public final MaterialTextView textCustomAmount;

  @NonNull
  public final MaterialTextView textCustomAmountLabel;

  @NonNull
  public final MaterialTextView textEmail;

  @NonNull
  public final MaterialTextView textPayment;

  @NonNull
  public final MaterialTextView textSubtotal;

  @NonNull
  public final MaterialTextView textTaxMessage;

  @NonNull
  public final MaterialTextView textTotal;

  @NonNull
  public final MaterialTextView textTotalLabel;

  private FragmentSimplePaymentsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonDone, @NonNull LinearLayout container,
      @NonNull LinearLayout containerAmount, @NonNull FrameLayout containerButton,
      @NonNull LinearLayout containerEmail, @NonNull LinearLayout containerSubtotal,
      @NonNull LinearLayout containerTotal, @NonNull View divider1, @NonNull View divider2,
      @NonNull View divider3, @NonNull View divider4, @NonNull TextInputEditText editEmail,
      @NonNull RecyclerView listTaxes, @NonNull OrderCreationSectionView notesSection,
      @NonNull ProgressBar progressBar, @NonNull ScrollView scrollView,
      @NonNull SwitchMaterial switchChargeTaxes, @NonNull MaterialTextView textCustomAmount,
      @NonNull MaterialTextView textCustomAmountLabel, @NonNull MaterialTextView textEmail,
      @NonNull MaterialTextView textPayment, @NonNull MaterialTextView textSubtotal,
      @NonNull MaterialTextView textTaxMessage, @NonNull MaterialTextView textTotal,
      @NonNull MaterialTextView textTotalLabel) {
    this.rootView = rootView;
    this.buttonDone = buttonDone;
    this.container = container;
    this.containerAmount = containerAmount;
    this.containerButton = containerButton;
    this.containerEmail = containerEmail;
    this.containerSubtotal = containerSubtotal;
    this.containerTotal = containerTotal;
    this.divider1 = divider1;
    this.divider2 = divider2;
    this.divider3 = divider3;
    this.divider4 = divider4;
    this.editEmail = editEmail;
    this.listTaxes = listTaxes;
    this.notesSection = notesSection;
    this.progressBar = progressBar;
    this.scrollView = scrollView;
    this.switchChargeTaxes = switchChargeTaxes;
    this.textCustomAmount = textCustomAmount;
    this.textCustomAmountLabel = textCustomAmountLabel;
    this.textEmail = textEmail;
    this.textPayment = textPayment;
    this.textSubtotal = textSubtotal;
    this.textTaxMessage = textTaxMessage;
    this.textTotal = textTotal;
    this.textTotalLabel = textTotalLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSimplePaymentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSimplePaymentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_simple_payments, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSimplePaymentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDone;
      MaterialButton buttonDone = ViewBindings.findChildViewById(rootView, id);
      if (buttonDone == null) {
        break missingId;
      }

      id = R.id.container;
      LinearLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.containerAmount;
      LinearLayout containerAmount = ViewBindings.findChildViewById(rootView, id);
      if (containerAmount == null) {
        break missingId;
      }

      id = R.id.containerButton;
      FrameLayout containerButton = ViewBindings.findChildViewById(rootView, id);
      if (containerButton == null) {
        break missingId;
      }

      id = R.id.containerEmail;
      LinearLayout containerEmail = ViewBindings.findChildViewById(rootView, id);
      if (containerEmail == null) {
        break missingId;
      }

      id = R.id.containerSubtotal;
      LinearLayout containerSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (containerSubtotal == null) {
        break missingId;
      }

      id = R.id.containerTotal;
      LinearLayout containerTotal = ViewBindings.findChildViewById(rootView, id);
      if (containerTotal == null) {
        break missingId;
      }

      id = R.id.divider1;
      View divider1 = ViewBindings.findChildViewById(rootView, id);
      if (divider1 == null) {
        break missingId;
      }

      id = R.id.divider2;
      View divider2 = ViewBindings.findChildViewById(rootView, id);
      if (divider2 == null) {
        break missingId;
      }

      id = R.id.divider3;
      View divider3 = ViewBindings.findChildViewById(rootView, id);
      if (divider3 == null) {
        break missingId;
      }

      id = R.id.divider4;
      View divider4 = ViewBindings.findChildViewById(rootView, id);
      if (divider4 == null) {
        break missingId;
      }

      id = R.id.editEmail;
      TextInputEditText editEmail = ViewBindings.findChildViewById(rootView, id);
      if (editEmail == null) {
        break missingId;
      }

      id = R.id.listTaxes;
      RecyclerView listTaxes = ViewBindings.findChildViewById(rootView, id);
      if (listTaxes == null) {
        break missingId;
      }

      id = R.id.notes_section;
      OrderCreationSectionView notesSection = ViewBindings.findChildViewById(rootView, id);
      if (notesSection == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.switchChargeTaxes;
      SwitchMaterial switchChargeTaxes = ViewBindings.findChildViewById(rootView, id);
      if (switchChargeTaxes == null) {
        break missingId;
      }

      id = R.id.textCustomAmount;
      MaterialTextView textCustomAmount = ViewBindings.findChildViewById(rootView, id);
      if (textCustomAmount == null) {
        break missingId;
      }

      id = R.id.textCustomAmountLabel;
      MaterialTextView textCustomAmountLabel = ViewBindings.findChildViewById(rootView, id);
      if (textCustomAmountLabel == null) {
        break missingId;
      }

      id = R.id.textEmail;
      MaterialTextView textEmail = ViewBindings.findChildViewById(rootView, id);
      if (textEmail == null) {
        break missingId;
      }

      id = R.id.textPayment;
      MaterialTextView textPayment = ViewBindings.findChildViewById(rootView, id);
      if (textPayment == null) {
        break missingId;
      }

      id = R.id.textSubtotal;
      MaterialTextView textSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (textSubtotal == null) {
        break missingId;
      }

      id = R.id.textTaxMessage;
      MaterialTextView textTaxMessage = ViewBindings.findChildViewById(rootView, id);
      if (textTaxMessage == null) {
        break missingId;
      }

      id = R.id.textTotal;
      MaterialTextView textTotal = ViewBindings.findChildViewById(rootView, id);
      if (textTotal == null) {
        break missingId;
      }

      id = R.id.textTotalLabel;
      MaterialTextView textTotalLabel = ViewBindings.findChildViewById(rootView, id);
      if (textTotalLabel == null) {
        break missingId;
      }

      return new FragmentSimplePaymentsBinding((ConstraintLayout) rootView, buttonDone, container,
          containerAmount, containerButton, containerEmail, containerSubtotal, containerTotal,
          divider1, divider2, divider3, divider4, editEmail, listTaxes, notesSection, progressBar,
          scrollView, switchChargeTaxes, textCustomAmount, textCustomAmountLabel, textEmail,
          textPayment, textSubtotal, textTaxMessage, textTotal, textTotalLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
