// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.persistence.local.room;

import com.google.android.gnd.persistence.local.room.dao.BaseMapDao;
import com.google.android.gnd.persistence.local.room.dao.FeatureDao;
import com.google.android.gnd.persistence.local.room.dao.FeatureMutationDao;
import com.google.android.gnd.persistence.local.room.dao.FieldDao;
import com.google.android.gnd.persistence.local.room.dao.JobDao;
import com.google.android.gnd.persistence.local.room.dao.MultipleChoiceDao;
import com.google.android.gnd.persistence.local.room.dao.OfflineAreaDao;
import com.google.android.gnd.persistence.local.room.dao.OptionDao;
import com.google.android.gnd.persistence.local.room.dao.SubmissionDao;
import com.google.android.gnd.persistence.local.room.dao.SubmissionMutationDao;
import com.google.android.gnd.persistence.local.room.dao.SurveyDao;
import com.google.android.gnd.persistence.local.room.dao.TaskDao;
import com.google.android.gnd.persistence.local.room.dao.TileSetDao;
import com.google.android.gnd.persistence.local.room.dao.UserDao;
import com.google.android.gnd.rx.Schedulers;
import com.google.android.gnd.ui.util.FileUtil;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomLocalDataStore_Factory implements Factory<RoomLocalDataStore> {
  private final Provider<OptionDao> optionDaoProvider;

  private final Provider<MultipleChoiceDao> multipleChoiceDaoProvider;

  private final Provider<FieldDao> fieldDaoProvider;

  private final Provider<TaskDao> taskDaoProvider;

  private final Provider<JobDao> jobDaoProvider;

  private final Provider<SurveyDao> surveyDaoProvider;

  private final Provider<FeatureDao> featureDaoProvider;

  private final Provider<FeatureMutationDao> featureMutationDaoProvider;

  private final Provider<SubmissionDao> submissionDaoProvider;

  private final Provider<SubmissionMutationDao> submissionMutationDaoProvider;

  private final Provider<TileSetDao> tileSetDaoProvider;

  private final Provider<UserDao> userDaoProvider;

  private final Provider<OfflineAreaDao> offlineAreaDaoProvider;

  private final Provider<BaseMapDao> baseMapDaoProvider;

  private final Provider<Schedulers> schedulersProvider;

  private final Provider<FileUtil> fileUtilProvider;

  public RoomLocalDataStore_Factory(Provider<OptionDao> optionDaoProvider,
      Provider<MultipleChoiceDao> multipleChoiceDaoProvider, Provider<FieldDao> fieldDaoProvider,
      Provider<TaskDao> taskDaoProvider, Provider<JobDao> jobDaoProvider,
      Provider<SurveyDao> surveyDaoProvider, Provider<FeatureDao> featureDaoProvider,
      Provider<FeatureMutationDao> featureMutationDaoProvider,
      Provider<SubmissionDao> submissionDaoProvider,
      Provider<SubmissionMutationDao> submissionMutationDaoProvider,
      Provider<TileSetDao> tileSetDaoProvider, Provider<UserDao> userDaoProvider,
      Provider<OfflineAreaDao> offlineAreaDaoProvider, Provider<BaseMapDao> baseMapDaoProvider,
      Provider<Schedulers> schedulersProvider, Provider<FileUtil> fileUtilProvider) {
    this.optionDaoProvider = optionDaoProvider;
    this.multipleChoiceDaoProvider = multipleChoiceDaoProvider;
    this.fieldDaoProvider = fieldDaoProvider;
    this.taskDaoProvider = taskDaoProvider;
    this.jobDaoProvider = jobDaoProvider;
    this.surveyDaoProvider = surveyDaoProvider;
    this.featureDaoProvider = featureDaoProvider;
    this.featureMutationDaoProvider = featureMutationDaoProvider;
    this.submissionDaoProvider = submissionDaoProvider;
    this.submissionMutationDaoProvider = submissionMutationDaoProvider;
    this.tileSetDaoProvider = tileSetDaoProvider;
    this.userDaoProvider = userDaoProvider;
    this.offlineAreaDaoProvider = offlineAreaDaoProvider;
    this.baseMapDaoProvider = baseMapDaoProvider;
    this.schedulersProvider = schedulersProvider;
    this.fileUtilProvider = fileUtilProvider;
  }

  @Override
  public RoomLocalDataStore get() {
    RoomLocalDataStore instance = newInstance();
    RoomLocalDataStore_MembersInjector.injectOptionDao(instance, optionDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectMultipleChoiceDao(instance, multipleChoiceDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectFieldDao(instance, fieldDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectTaskDao(instance, taskDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectJobDao(instance, jobDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectSurveyDao(instance, surveyDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectFeatureDao(instance, featureDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectFeatureMutationDao(instance, featureMutationDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectSubmissionDao(instance, submissionDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectSubmissionMutationDao(instance, submissionMutationDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectTileSetDao(instance, tileSetDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectUserDao(instance, userDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectOfflineAreaDao(instance, offlineAreaDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectBaseMapDao(instance, baseMapDaoProvider.get());
    RoomLocalDataStore_MembersInjector.injectSchedulers(instance, schedulersProvider.get());
    RoomLocalDataStore_MembersInjector.injectFileUtil(instance, fileUtilProvider.get());
    return instance;
  }

  public static RoomLocalDataStore_Factory create(Provider<OptionDao> optionDaoProvider,
      Provider<MultipleChoiceDao> multipleChoiceDaoProvider, Provider<FieldDao> fieldDaoProvider,
      Provider<TaskDao> taskDaoProvider, Provider<JobDao> jobDaoProvider,
      Provider<SurveyDao> surveyDaoProvider, Provider<FeatureDao> featureDaoProvider,
      Provider<FeatureMutationDao> featureMutationDaoProvider,
      Provider<SubmissionDao> submissionDaoProvider,
      Provider<SubmissionMutationDao> submissionMutationDaoProvider,
      Provider<TileSetDao> tileSetDaoProvider, Provider<UserDao> userDaoProvider,
      Provider<OfflineAreaDao> offlineAreaDaoProvider, Provider<BaseMapDao> baseMapDaoProvider,
      Provider<Schedulers> schedulersProvider, Provider<FileUtil> fileUtilProvider) {
    return new RoomLocalDataStore_Factory(optionDaoProvider, multipleChoiceDaoProvider, fieldDaoProvider, taskDaoProvider, jobDaoProvider, surveyDaoProvider, featureDaoProvider, featureMutationDaoProvider, submissionDaoProvider, submissionMutationDaoProvider, tileSetDaoProvider, userDaoProvider, offlineAreaDaoProvider, baseMapDaoProvider, schedulersProvider, fileUtilProvider);
  }

  public static RoomLocalDataStore newInstance() {
    return new RoomLocalDataStore();
  }
}
