// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRefundDetailBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final View dividerReason;

  @NonNull
  public final RefundByItemsProductsBinding issueRefundProductsList;

  @NonNull
  public final MaterialCardView refundDetailDetailsCard;

  @NonNull
  public final MaterialTextView refundDetailProductTitle;

  @NonNull
  public final MaterialTextView refundDetailQuantityTitle;

  @NonNull
  public final ImageView refundDetailQuoteImage;

  @NonNull
  public final MaterialCardView refundDetailReasonCard;

  @NonNull
  public final MaterialTextView refundDetailReasonTitle;

  @NonNull
  public final MaterialTextView refundDetailRefundAmount;

  @NonNull
  public final MaterialCardView refundDetailRefundItems;

  @NonNull
  public final MaterialTextView refundDetailRefundMethod;

  @NonNull
  public final MaterialTextView refundDetailRefundReason;

  @NonNull
  public final NestedScrollView scrollView;

  private FragmentRefundDetailBinding(@NonNull NestedScrollView rootView,
      @NonNull View dividerReason, @NonNull RefundByItemsProductsBinding issueRefundProductsList,
      @NonNull MaterialCardView refundDetailDetailsCard,
      @NonNull MaterialTextView refundDetailProductTitle,
      @NonNull MaterialTextView refundDetailQuantityTitle,
      @NonNull ImageView refundDetailQuoteImage, @NonNull MaterialCardView refundDetailReasonCard,
      @NonNull MaterialTextView refundDetailReasonTitle,
      @NonNull MaterialTextView refundDetailRefundAmount,
      @NonNull MaterialCardView refundDetailRefundItems,
      @NonNull MaterialTextView refundDetailRefundMethod,
      @NonNull MaterialTextView refundDetailRefundReason, @NonNull NestedScrollView scrollView) {
    this.rootView = rootView;
    this.dividerReason = dividerReason;
    this.issueRefundProductsList = issueRefundProductsList;
    this.refundDetailDetailsCard = refundDetailDetailsCard;
    this.refundDetailProductTitle = refundDetailProductTitle;
    this.refundDetailQuantityTitle = refundDetailQuantityTitle;
    this.refundDetailQuoteImage = refundDetailQuoteImage;
    this.refundDetailReasonCard = refundDetailReasonCard;
    this.refundDetailReasonTitle = refundDetailReasonTitle;
    this.refundDetailRefundAmount = refundDetailRefundAmount;
    this.refundDetailRefundItems = refundDetailRefundItems;
    this.refundDetailRefundMethod = refundDetailRefundMethod;
    this.refundDetailRefundReason = refundDetailRefundReason;
    this.scrollView = scrollView;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRefundDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRefundDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_refund_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRefundDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider_reason;
      View dividerReason = ViewBindings.findChildViewById(rootView, id);
      if (dividerReason == null) {
        break missingId;
      }

      id = R.id.issueRefund_productsList;
      View issueRefundProductsList = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundProductsList == null) {
        break missingId;
      }
      RefundByItemsProductsBinding binding_issueRefundProductsList = RefundByItemsProductsBinding.bind(issueRefundProductsList);

      id = R.id.refundDetail_detailsCard;
      MaterialCardView refundDetailDetailsCard = ViewBindings.findChildViewById(rootView, id);
      if (refundDetailDetailsCard == null) {
        break missingId;
      }

      id = R.id.refundDetail_productTitle;
      MaterialTextView refundDetailProductTitle = ViewBindings.findChildViewById(rootView, id);
      if (refundDetailProductTitle == null) {
        break missingId;
      }

      id = R.id.refundDetail_quantityTitle;
      MaterialTextView refundDetailQuantityTitle = ViewBindings.findChildViewById(rootView, id);
      if (refundDetailQuantityTitle == null) {
        break missingId;
      }

      id = R.id.refundDetail_quoteImage;
      ImageView refundDetailQuoteImage = ViewBindings.findChildViewById(rootView, id);
      if (refundDetailQuoteImage == null) {
        break missingId;
      }

      id = R.id.refundDetail_reasonCard;
      MaterialCardView refundDetailReasonCard = ViewBindings.findChildViewById(rootView, id);
      if (refundDetailReasonCard == null) {
        break missingId;
      }

      id = R.id.refundDetail_reasonTitle;
      MaterialTextView refundDetailReasonTitle = ViewBindings.findChildViewById(rootView, id);
      if (refundDetailReasonTitle == null) {
        break missingId;
      }

      id = R.id.refundDetail_refundAmount;
      MaterialTextView refundDetailRefundAmount = ViewBindings.findChildViewById(rootView, id);
      if (refundDetailRefundAmount == null) {
        break missingId;
      }

      id = R.id.refundDetail_refundItems;
      MaterialCardView refundDetailRefundItems = ViewBindings.findChildViewById(rootView, id);
      if (refundDetailRefundItems == null) {
        break missingId;
      }

      id = R.id.refundDetail_refundMethod;
      MaterialTextView refundDetailRefundMethod = ViewBindings.findChildViewById(rootView, id);
      if (refundDetailRefundMethod == null) {
        break missingId;
      }

      id = R.id.refundDetail_refundReason;
      MaterialTextView refundDetailRefundReason = ViewBindings.findChildViewById(rootView, id);
      if (refundDetailRefundReason == null) {
        break missingId;
      }

      NestedScrollView scrollView = (NestedScrollView) rootView;

      return new FragmentRefundDetailBinding((NestedScrollView) rootView, dividerReason,
          binding_issueRefundProductsList, refundDetailDetailsCard, refundDetailProductTitle,
          refundDetailQuantityTitle, refundDetailQuoteImage, refundDetailReasonCard,
          refundDetailReasonTitle, refundDetailRefundAmount, refundDetailRefundItems,
          refundDetailRefundMethod, refundDetailRefundReason, scrollView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
