// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.ui.editsubmission;

import androidx.fragment.app.Fragment;
import com.google.android.gnd.ui.common.ViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FieldViewFactory_MembersInjector implements MembersInjector<FieldViewFactory> {
  private final Provider<Fragment> fragmentProvider;

  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  public FieldViewFactory_MembersInjector(Provider<Fragment> fragmentProvider,
      Provider<ViewModelFactory> viewModelFactoryProvider) {
    this.fragmentProvider = fragmentProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<FieldViewFactory> create(Provider<Fragment> fragmentProvider,
      Provider<ViewModelFactory> viewModelFactoryProvider) {
    return new FieldViewFactory_MembersInjector(fragmentProvider, viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(FieldViewFactory instance) {
    injectFragment(instance, fragmentProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.google.android.gnd.ui.editsubmission.FieldViewFactory.fragment")
  public static void injectFragment(FieldViewFactory instance, Fragment fragment) {
    instance.fragment = fragment;
  }

  @InjectedFieldSignature("com.google.android.gnd.ui.editsubmission.FieldViewFactory.viewModelFactory")
  public static void injectViewModelFactory(FieldViewFactory instance,
      ViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
