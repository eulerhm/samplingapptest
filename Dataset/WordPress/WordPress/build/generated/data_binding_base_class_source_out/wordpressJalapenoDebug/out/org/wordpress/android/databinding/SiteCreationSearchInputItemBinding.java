// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class SiteCreationSearchInputItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout clearAllLayout;

  @NonNull
  public final View divider;

  @NonNull
  public final TextInputEditText input;

  @NonNull
  public final TextInputLayout inputContainer;

  @NonNull
  public final FrameLayout progressBar;

  private SiteCreationSearchInputItemBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout clearAllLayout, @NonNull View divider, @NonNull TextInputEditText input,
      @NonNull TextInputLayout inputContainer, @NonNull FrameLayout progressBar) {
    this.rootView = rootView;
    this.clearAllLayout = clearAllLayout;
    this.divider = divider;
    this.input = input;
    this.inputContainer = inputContainer;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SiteCreationSearchInputItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SiteCreationSearchInputItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.site_creation_search_input_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SiteCreationSearchInputItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clear_all_layout;
      LinearLayout clearAllLayout = ViewBindings.findChildViewById(rootView, id);
      if (clearAllLayout == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.input;
      TextInputEditText input = ViewBindings.findChildViewById(rootView, id);
      if (input == null) {
        break missingId;
      }

      id = R.id.input_container;
      TextInputLayout inputContainer = ViewBindings.findChildViewById(rootView, id);
      if (inputContainer == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      FrameLayout progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      return new SiteCreationSearchInputItemBinding((RelativeLayout) rootView, clearAllLayout,
          divider, input, inputContainer, progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
