// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class MySiteCardToolbarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout mySiteCardToolbar;

  @NonNull
  public final ImageView mySiteCardToolbarIcon;

  @NonNull
  public final ImageView mySiteCardToolbarMore;

  @NonNull
  public final MaterialTextView mySiteCardToolbarTitle;

  private MySiteCardToolbarBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout mySiteCardToolbar, @NonNull ImageView mySiteCardToolbarIcon,
      @NonNull ImageView mySiteCardToolbarMore, @NonNull MaterialTextView mySiteCardToolbarTitle) {
    this.rootView = rootView;
    this.mySiteCardToolbar = mySiteCardToolbar;
    this.mySiteCardToolbarIcon = mySiteCardToolbarIcon;
    this.mySiteCardToolbarMore = mySiteCardToolbarMore;
    this.mySiteCardToolbarTitle = mySiteCardToolbarTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MySiteCardToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MySiteCardToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.my_site_card_toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MySiteCardToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout mySiteCardToolbar = (ConstraintLayout) rootView;

      id = R.id.my_site_card_toolbar_icon;
      ImageView mySiteCardToolbarIcon = ViewBindings.findChildViewById(rootView, id);
      if (mySiteCardToolbarIcon == null) {
        break missingId;
      }

      id = R.id.my_site_card_toolbar_more;
      ImageView mySiteCardToolbarMore = ViewBindings.findChildViewById(rootView, id);
      if (mySiteCardToolbarMore == null) {
        break missingId;
      }

      id = R.id.my_site_card_toolbar_title;
      MaterialTextView mySiteCardToolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (mySiteCardToolbarTitle == null) {
        break missingId;
      }

      return new MySiteCardToolbarBinding((ConstraintLayout) rootView, mySiteCardToolbar,
          mySiteCardToolbarIcon, mySiteCardToolbarMore, mySiteCardToolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
