// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class PrepublishingStoryTitleListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomSheetHandleViewBinding bottomSheetHandle;

  @NonNull
  public final ImageView storyThumbnail;

  @NonNull
  public final FrameLayout storyThumbnailLayout;

  @NonNull
  public final EditText storyTitle;

  @NonNull
  public final ConstraintLayout storyTitleContent;

  private PrepublishingStoryTitleListItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomSheetHandleViewBinding bottomSheetHandle, @NonNull ImageView storyThumbnail,
      @NonNull FrameLayout storyThumbnailLayout, @NonNull EditText storyTitle,
      @NonNull ConstraintLayout storyTitleContent) {
    this.rootView = rootView;
    this.bottomSheetHandle = bottomSheetHandle;
    this.storyThumbnail = storyThumbnail;
    this.storyThumbnailLayout = storyThumbnailLayout;
    this.storyTitle = storyTitle;
    this.storyTitleContent = storyTitleContent;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PrepublishingStoryTitleListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PrepublishingStoryTitleListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.prepublishing_story_title_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PrepublishingStoryTitleListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_sheet_handle;
      View bottomSheetHandle = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheetHandle == null) {
        break missingId;
      }
      BottomSheetHandleViewBinding binding_bottomSheetHandle = BottomSheetHandleViewBinding.bind(bottomSheetHandle);

      id = R.id.story_thumbnail;
      ImageView storyThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (storyThumbnail == null) {
        break missingId;
      }

      id = R.id.story_thumbnail_layout;
      FrameLayout storyThumbnailLayout = ViewBindings.findChildViewById(rootView, id);
      if (storyThumbnailLayout == null) {
        break missingId;
      }

      id = R.id.story_title;
      EditText storyTitle = ViewBindings.findChildViewById(rootView, id);
      if (storyTitle == null) {
        break missingId;
      }

      id = R.id.story_title_content;
      ConstraintLayout storyTitleContent = ViewBindings.findChildViewById(rootView, id);
      if (storyTitleContent == null) {
        break missingId;
      }

      return new PrepublishingStoryTitleListItemBinding((ConstraintLayout) rootView,
          binding_bottomSheetHandle, storyThumbnail, storyThumbnailLayout, storyTitle,
          storyTitleContent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
