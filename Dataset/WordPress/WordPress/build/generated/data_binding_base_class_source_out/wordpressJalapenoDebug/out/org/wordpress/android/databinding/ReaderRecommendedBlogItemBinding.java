// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.reader.views.ReaderFollowButton;

public final class ReaderRecommendedBlogItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guidelineBottom;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineStart;

  @NonNull
  public final Guideline guidelineTop;

  @NonNull
  public final MaterialTextView siteDescription;

  @NonNull
  public final ReaderFollowButton siteFollowIcon;

  @NonNull
  public final AppCompatImageView siteIcon;

  @NonNull
  public final MaterialTextView siteName;

  @NonNull
  public final MaterialTextView siteUrl;

  private ReaderRecommendedBlogItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline guidelineBottom, @NonNull Guideline guidelineEnd,
      @NonNull Guideline guidelineStart, @NonNull Guideline guidelineTop,
      @NonNull MaterialTextView siteDescription, @NonNull ReaderFollowButton siteFollowIcon,
      @NonNull AppCompatImageView siteIcon, @NonNull MaterialTextView siteName,
      @NonNull MaterialTextView siteUrl) {
    this.rootView = rootView;
    this.guidelineBottom = guidelineBottom;
    this.guidelineEnd = guidelineEnd;
    this.guidelineStart = guidelineStart;
    this.guidelineTop = guidelineTop;
    this.siteDescription = siteDescription;
    this.siteFollowIcon = siteFollowIcon;
    this.siteIcon = siteIcon;
    this.siteName = siteName;
    this.siteUrl = siteUrl;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReaderRecommendedBlogItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReaderRecommendedBlogItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reader_recommended_blog_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReaderRecommendedBlogItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline_bottom;
      Guideline guidelineBottom = ViewBindings.findChildViewById(rootView, id);
      if (guidelineBottom == null) {
        break missingId;
      }

      id = R.id.guideline_end;
      Guideline guidelineEnd = ViewBindings.findChildViewById(rootView, id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guideline_start;
      Guideline guidelineStart = ViewBindings.findChildViewById(rootView, id);
      if (guidelineStart == null) {
        break missingId;
      }

      id = R.id.guideline_top;
      Guideline guidelineTop = ViewBindings.findChildViewById(rootView, id);
      if (guidelineTop == null) {
        break missingId;
      }

      id = R.id.site_description;
      MaterialTextView siteDescription = ViewBindings.findChildViewById(rootView, id);
      if (siteDescription == null) {
        break missingId;
      }

      id = R.id.site_follow_icon;
      ReaderFollowButton siteFollowIcon = ViewBindings.findChildViewById(rootView, id);
      if (siteFollowIcon == null) {
        break missingId;
      }

      id = R.id.site_icon;
      AppCompatImageView siteIcon = ViewBindings.findChildViewById(rootView, id);
      if (siteIcon == null) {
        break missingId;
      }

      id = R.id.site_name;
      MaterialTextView siteName = ViewBindings.findChildViewById(rootView, id);
      if (siteName == null) {
        break missingId;
      }

      id = R.id.site_url;
      MaterialTextView siteUrl = ViewBindings.findChildViewById(rootView, id);
      if (siteUrl == null) {
        break missingId;
      }

      return new ReaderRecommendedBlogItemBinding((ConstraintLayout) rootView, guidelineBottom,
          guidelineEnd, guidelineStart, guidelineTop, siteDescription, siteFollowIcon, siteIcon,
          siteName, siteUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
