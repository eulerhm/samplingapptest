// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.WCMaterialOutlinedEditTextView;
import com.woocommerce.android.widgets.WCMaterialOutlinedSpinnerView;
import com.woocommerce.android.widgets.WCToggleSingleOptionView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductPricingBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final MaterialTextView productPriceHeading;

  @NonNull
  public final WCMaterialOutlinedEditTextView productRegularPrice;

  @NonNull
  public final WCMaterialOutlinedEditTextView productSalePrice;

  @NonNull
  public final MaterialTextView productTax;

  @NonNull
  public final WCMaterialOutlinedSpinnerView productTaxClass;

  @NonNull
  public final Group productTaxSection;

  @NonNull
  public final WCMaterialOutlinedSpinnerView productTaxStatus;

  @NonNull
  public final Barrier scheduleSaleBarrier;

  @NonNull
  public final WCMaterialOutlinedSpinnerView scheduleSaleEndDate;

  @NonNull
  public final ConstraintLayout scheduleSaleMorePanel;

  @NonNull
  public final MaterialButton scheduleSaleRemoveEndDateButton;

  @NonNull
  public final WCMaterialOutlinedSpinnerView scheduleSaleStartDate;

  @NonNull
  public final WCToggleSingleOptionView scheduleSaleSwitch;

  private FragmentProductPricingBinding(@NonNull ScrollView rootView, @NonNull View divider,
      @NonNull MaterialTextView productPriceHeading,
      @NonNull WCMaterialOutlinedEditTextView productRegularPrice,
      @NonNull WCMaterialOutlinedEditTextView productSalePrice,
      @NonNull MaterialTextView productTax, @NonNull WCMaterialOutlinedSpinnerView productTaxClass,
      @NonNull Group productTaxSection, @NonNull WCMaterialOutlinedSpinnerView productTaxStatus,
      @NonNull Barrier scheduleSaleBarrier,
      @NonNull WCMaterialOutlinedSpinnerView scheduleSaleEndDate,
      @NonNull ConstraintLayout scheduleSaleMorePanel,
      @NonNull MaterialButton scheduleSaleRemoveEndDateButton,
      @NonNull WCMaterialOutlinedSpinnerView scheduleSaleStartDate,
      @NonNull WCToggleSingleOptionView scheduleSaleSwitch) {
    this.rootView = rootView;
    this.divider = divider;
    this.productPriceHeading = productPriceHeading;
    this.productRegularPrice = productRegularPrice;
    this.productSalePrice = productSalePrice;
    this.productTax = productTax;
    this.productTaxClass = productTaxClass;
    this.productTaxSection = productTaxSection;
    this.productTaxStatus = productTaxStatus;
    this.scheduleSaleBarrier = scheduleSaleBarrier;
    this.scheduleSaleEndDate = scheduleSaleEndDate;
    this.scheduleSaleMorePanel = scheduleSaleMorePanel;
    this.scheduleSaleRemoveEndDateButton = scheduleSaleRemoveEndDateButton;
    this.scheduleSaleStartDate = scheduleSaleStartDate;
    this.scheduleSaleSwitch = scheduleSaleSwitch;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductPricingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductPricingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_product_pricing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductPricingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.product_price_heading;
      MaterialTextView productPriceHeading = ViewBindings.findChildViewById(rootView, id);
      if (productPriceHeading == null) {
        break missingId;
      }

      id = R.id.product_regular_price;
      WCMaterialOutlinedEditTextView productRegularPrice = ViewBindings.findChildViewById(rootView, id);
      if (productRegularPrice == null) {
        break missingId;
      }

      id = R.id.product_sale_price;
      WCMaterialOutlinedEditTextView productSalePrice = ViewBindings.findChildViewById(rootView, id);
      if (productSalePrice == null) {
        break missingId;
      }

      id = R.id.product_tax;
      MaterialTextView productTax = ViewBindings.findChildViewById(rootView, id);
      if (productTax == null) {
        break missingId;
      }

      id = R.id.product_tax_class;
      WCMaterialOutlinedSpinnerView productTaxClass = ViewBindings.findChildViewById(rootView, id);
      if (productTaxClass == null) {
        break missingId;
      }

      id = R.id.product_tax_section;
      Group productTaxSection = ViewBindings.findChildViewById(rootView, id);
      if (productTaxSection == null) {
        break missingId;
      }

      id = R.id.product_tax_status;
      WCMaterialOutlinedSpinnerView productTaxStatus = ViewBindings.findChildViewById(rootView, id);
      if (productTaxStatus == null) {
        break missingId;
      }

      id = R.id.scheduleSale_barrier;
      Barrier scheduleSaleBarrier = ViewBindings.findChildViewById(rootView, id);
      if (scheduleSaleBarrier == null) {
        break missingId;
      }

      id = R.id.scheduleSale_endDate;
      WCMaterialOutlinedSpinnerView scheduleSaleEndDate = ViewBindings.findChildViewById(rootView, id);
      if (scheduleSaleEndDate == null) {
        break missingId;
      }

      id = R.id.scheduleSale_morePanel;
      ConstraintLayout scheduleSaleMorePanel = ViewBindings.findChildViewById(rootView, id);
      if (scheduleSaleMorePanel == null) {
        break missingId;
      }

      id = R.id.scheduleSale_RemoveEndDateButton;
      MaterialButton scheduleSaleRemoveEndDateButton = ViewBindings.findChildViewById(rootView, id);
      if (scheduleSaleRemoveEndDateButton == null) {
        break missingId;
      }

      id = R.id.scheduleSale_startDate;
      WCMaterialOutlinedSpinnerView scheduleSaleStartDate = ViewBindings.findChildViewById(rootView, id);
      if (scheduleSaleStartDate == null) {
        break missingId;
      }

      id = R.id.scheduleSale_switch;
      WCToggleSingleOptionView scheduleSaleSwitch = ViewBindings.findChildViewById(rootView, id);
      if (scheduleSaleSwitch == null) {
        break missingId;
      }

      return new FragmentProductPricingBinding((ScrollView) rootView, divider, productPriceHeading,
          productRegularPrice, productSalePrice, productTax, productTaxClass, productTaxSection,
          productTaxStatus, scheduleSaleBarrier, scheduleSaleEndDate, scheduleSaleMorePanel,
          scheduleSaleRemoveEndDateButton, scheduleSaleStartDate, scheduleSaleSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
