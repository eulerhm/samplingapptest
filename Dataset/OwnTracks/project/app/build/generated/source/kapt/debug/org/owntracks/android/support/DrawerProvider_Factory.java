// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.support;

import androidx.appcompat.app.AppCompatActivity;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.owntracks.android.services.worker.Scheduler;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DrawerProvider_Factory implements Factory<DrawerProvider> {
  private final Provider<AppCompatActivity> activityProvider;

  private final Provider<Scheduler> schedulerProvider;

  public DrawerProvider_Factory(Provider<AppCompatActivity> activityProvider,
      Provider<Scheduler> schedulerProvider) {
    this.activityProvider = activityProvider;
    this.schedulerProvider = schedulerProvider;
  }

  @Override
  public DrawerProvider get() {
    return newInstance(activityProvider.get(), schedulerProvider.get());
  }

  public static DrawerProvider_Factory create(Provider<AppCompatActivity> activityProvider,
      Provider<Scheduler> schedulerProvider) {
    return new DrawerProvider_Factory(activityProvider, schedulerProvider);
  }

  public static DrawerProvider newInstance(AppCompatActivity activity, Scheduler scheduler) {
    return new DrawerProvider(activity, scheduler);
  }
}
