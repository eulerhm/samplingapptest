// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RefundByItemsProductsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View issueRefundDividerBelowList;

  @NonNull
  public final View issueRefundDividerBelowTaxes;

  @NonNull
  public final MaterialTextView issueRefundLblProductsTotal;

  @NonNull
  public final MaterialTextView issueRefundLblSubtotal;

  @NonNull
  public final MaterialTextView issueRefundLblTaxes;

  @NonNull
  public final RecyclerView issueRefundProducts;

  @NonNull
  public final MaterialTextView issueRefundProductsTotal;

  @NonNull
  public final MaterialTextView issueRefundRefundNotice;

  @NonNull
  public final MaterialTextView issueRefundSubtotal;

  @NonNull
  public final MaterialTextView issueRefundTaxesTotal;

  @NonNull
  public final Group issueRefundTotalsGroup;

  private RefundByItemsProductsBinding(@NonNull ConstraintLayout rootView,
      @NonNull View issueRefundDividerBelowList, @NonNull View issueRefundDividerBelowTaxes,
      @NonNull MaterialTextView issueRefundLblProductsTotal,
      @NonNull MaterialTextView issueRefundLblSubtotal,
      @NonNull MaterialTextView issueRefundLblTaxes, @NonNull RecyclerView issueRefundProducts,
      @NonNull MaterialTextView issueRefundProductsTotal,
      @NonNull MaterialTextView issueRefundRefundNotice,
      @NonNull MaterialTextView issueRefundSubtotal,
      @NonNull MaterialTextView issueRefundTaxesTotal, @NonNull Group issueRefundTotalsGroup) {
    this.rootView = rootView;
    this.issueRefundDividerBelowList = issueRefundDividerBelowList;
    this.issueRefundDividerBelowTaxes = issueRefundDividerBelowTaxes;
    this.issueRefundLblProductsTotal = issueRefundLblProductsTotal;
    this.issueRefundLblSubtotal = issueRefundLblSubtotal;
    this.issueRefundLblTaxes = issueRefundLblTaxes;
    this.issueRefundProducts = issueRefundProducts;
    this.issueRefundProductsTotal = issueRefundProductsTotal;
    this.issueRefundRefundNotice = issueRefundRefundNotice;
    this.issueRefundSubtotal = issueRefundSubtotal;
    this.issueRefundTaxesTotal = issueRefundTaxesTotal;
    this.issueRefundTotalsGroup = issueRefundTotalsGroup;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RefundByItemsProductsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RefundByItemsProductsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.refund_by_items_products, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RefundByItemsProductsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.issueRefund_dividerBelowList;
      View issueRefundDividerBelowList = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundDividerBelowList == null) {
        break missingId;
      }

      id = R.id.issueRefund_dividerBelowTaxes;
      View issueRefundDividerBelowTaxes = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundDividerBelowTaxes == null) {
        break missingId;
      }

      id = R.id.issueRefund_lblProductsTotal;
      MaterialTextView issueRefundLblProductsTotal = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundLblProductsTotal == null) {
        break missingId;
      }

      id = R.id.issueRefund_lblSubtotal;
      MaterialTextView issueRefundLblSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundLblSubtotal == null) {
        break missingId;
      }

      id = R.id.issueRefund_lblTaxes;
      MaterialTextView issueRefundLblTaxes = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundLblTaxes == null) {
        break missingId;
      }

      id = R.id.issueRefund_products;
      RecyclerView issueRefundProducts = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundProducts == null) {
        break missingId;
      }

      id = R.id.issueRefund_productsTotal;
      MaterialTextView issueRefundProductsTotal = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundProductsTotal == null) {
        break missingId;
      }

      id = R.id.issueRefund_refundNotice;
      MaterialTextView issueRefundRefundNotice = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundRefundNotice == null) {
        break missingId;
      }

      id = R.id.issueRefund_subtotal;
      MaterialTextView issueRefundSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundSubtotal == null) {
        break missingId;
      }

      id = R.id.issueRefund_taxesTotal;
      MaterialTextView issueRefundTaxesTotal = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundTaxesTotal == null) {
        break missingId;
      }

      id = R.id.issueRefund_totalsGroup;
      Group issueRefundTotalsGroup = ViewBindings.findChildViewById(rootView, id);
      if (issueRefundTotalsGroup == null) {
        break missingId;
      }

      return new RefundByItemsProductsBinding((ConstraintLayout) rootView,
          issueRefundDividerBelowList, issueRefundDividerBelowTaxes, issueRefundLblProductsTotal,
          issueRefundLblSubtotal, issueRefundLblTaxes, issueRefundProducts,
          issueRefundProductsTotal, issueRefundRefundNotice, issueRefundSubtotal,
          issueRefundTaxesTotal, issueRefundTotalsGroup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
