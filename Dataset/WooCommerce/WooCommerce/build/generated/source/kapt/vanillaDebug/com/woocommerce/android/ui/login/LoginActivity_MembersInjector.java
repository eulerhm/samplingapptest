// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.login;

import com.woocommerce.android.support.ZendeskHelper;
import com.woocommerce.android.util.UrlUtils;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.wordpress.android.login.LoginAnalyticsListener;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginActivity_MembersInjector implements MembersInjector<LoginActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<LoginAnalyticsListener> loginAnalyticsListenerProvider;

  private final Provider<UnifiedLoginTracker> unifiedLoginTrackerProvider;

  private final Provider<ZendeskHelper> zendeskHelperProvider;

  private final Provider<UrlUtils> urlUtilsProvider;

  public LoginActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<LoginAnalyticsListener> loginAnalyticsListenerProvider,
      Provider<UnifiedLoginTracker> unifiedLoginTrackerProvider,
      Provider<ZendeskHelper> zendeskHelperProvider, Provider<UrlUtils> urlUtilsProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.loginAnalyticsListenerProvider = loginAnalyticsListenerProvider;
    this.unifiedLoginTrackerProvider = unifiedLoginTrackerProvider;
    this.zendeskHelperProvider = zendeskHelperProvider;
    this.urlUtilsProvider = urlUtilsProvider;
  }

  public static MembersInjector<LoginActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<LoginAnalyticsListener> loginAnalyticsListenerProvider,
      Provider<UnifiedLoginTracker> unifiedLoginTrackerProvider,
      Provider<ZendeskHelper> zendeskHelperProvider, Provider<UrlUtils> urlUtilsProvider) {
    return new LoginActivity_MembersInjector(androidInjectorProvider, loginAnalyticsListenerProvider, unifiedLoginTrackerProvider, zendeskHelperProvider, urlUtilsProvider);
  }

  @Override
  public void injectMembers(LoginActivity instance) {
    injectAndroidInjector(instance, androidInjectorProvider.get());
    injectLoginAnalyticsListener(instance, loginAnalyticsListenerProvider.get());
    injectUnifiedLoginTracker(instance, unifiedLoginTrackerProvider.get());
    injectZendeskHelper(instance, zendeskHelperProvider.get());
    injectUrlUtils(instance, urlUtilsProvider.get());
  }

  @InjectedFieldSignature("com.woocommerce.android.ui.login.LoginActivity.androidInjector")
  public static void injectAndroidInjector(LoginActivity instance,
      DispatchingAndroidInjector<Object> androidInjector) {
    instance.androidInjector = androidInjector;
  }

  @InjectedFieldSignature("com.woocommerce.android.ui.login.LoginActivity.loginAnalyticsListener")
  public static void injectLoginAnalyticsListener(LoginActivity instance,
      LoginAnalyticsListener loginAnalyticsListener) {
    instance.loginAnalyticsListener = loginAnalyticsListener;
  }

  @InjectedFieldSignature("com.woocommerce.android.ui.login.LoginActivity.unifiedLoginTracker")
  public static void injectUnifiedLoginTracker(LoginActivity instance,
      UnifiedLoginTracker unifiedLoginTracker) {
    instance.unifiedLoginTracker = unifiedLoginTracker;
  }

  @InjectedFieldSignature("com.woocommerce.android.ui.login.LoginActivity.zendeskHelper")
  public static void injectZendeskHelper(LoginActivity instance, ZendeskHelper zendeskHelper) {
    instance.zendeskHelper = zendeskHelper;
  }

  @InjectedFieldSignature("com.woocommerce.android.ui.login.LoginActivity.urlUtils")
  public static void injectUrlUtils(LoginActivity instance, UrlUtils urlUtils) {
    instance.urlUtils = urlUtils;
  }
}
