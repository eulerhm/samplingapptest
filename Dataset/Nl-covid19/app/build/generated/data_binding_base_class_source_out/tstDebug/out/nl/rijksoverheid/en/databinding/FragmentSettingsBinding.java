// Generated by data binding compiler. Do not edit!
package nl.rijksoverheid.en.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.Deprecated;
import java.lang.Object;
import nl.rijksoverheid.en.R;
import nl.rijksoverheid.en.settings.SettingsViewModel;

public abstract class FragmentSettingsBinding extends ViewDataBinding {
  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final TextView pauseDescription;

  @NonNull
  public final View pauseDivider;

  @NonNull
  public final IncludeSettingsPauseStateBinding pauseState;

  @NonNull
  public final TextView pauseTitle;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final SwitchCompat useAppInDutchSwitch;

  @NonNull
  public final TextView useAppInnDutchSummary;

  @NonNull
  public final View wifiOnlyDivider;

  @NonNull
  public final TextView wifiOnlySummary;

  @NonNull
  public final SwitchCompat wifiOnlySwitch;

  @Bindable
  protected SettingsViewModel mViewModel;

  @Bindable
  protected Boolean mIsSystemLanguageDutch;

  protected FragmentSettingsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppBarLayout appbar, TextView pauseDescription, View pauseDivider,
      IncludeSettingsPauseStateBinding pauseState, TextView pauseTitle, Toolbar toolbar,
      SwitchCompat useAppInDutchSwitch, TextView useAppInnDutchSummary, View wifiOnlyDivider,
      TextView wifiOnlySummary, SwitchCompat wifiOnlySwitch) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appbar = appbar;
    this.pauseDescription = pauseDescription;
    this.pauseDivider = pauseDivider;
    this.pauseState = pauseState;
    this.pauseTitle = pauseTitle;
    this.toolbar = toolbar;
    this.useAppInDutchSwitch = useAppInDutchSwitch;
    this.useAppInnDutchSummary = useAppInnDutchSummary;
    this.wifiOnlyDivider = wifiOnlyDivider;
    this.wifiOnlySummary = wifiOnlySummary;
    this.wifiOnlySwitch = wifiOnlySwitch;
  }

  public abstract void setViewModel(@Nullable SettingsViewModel viewModel);

  @Nullable
  public SettingsViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setIsSystemLanguageDutch(@Nullable Boolean isSystemLanguageDutch);

  @Nullable
  public Boolean getIsSystemLanguageDutch() {
    return mIsSystemLanguageDutch;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_settings, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentSettingsBinding>inflateInternal(inflater, R.layout.fragment_settings, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_settings, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentSettingsBinding>inflateInternal(inflater, R.layout.fragment_settings, null, false, component);
  }

  public static FragmentSettingsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentSettingsBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentSettingsBinding)bind(component, view, R.layout.fragment_settings);
  }
}
