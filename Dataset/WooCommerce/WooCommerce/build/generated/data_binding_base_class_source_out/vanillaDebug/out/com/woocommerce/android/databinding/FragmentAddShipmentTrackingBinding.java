// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddShipmentTrackingBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextInputEditText carrier;

  @NonNull
  public final TextInputLayout carrierLayout;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final TextInputEditText customProviderName;

  @NonNull
  public final TextInputLayout customProviderNameLayout;

  @NonNull
  public final TextInputEditText customProviderUrl;

  @NonNull
  public final TextInputLayout customProviderUrlLayout;

  @NonNull
  public final TextInputEditText date;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final MaterialCardView snackRoot;

  @NonNull
  public final TextInputEditText trackingNumber;

  @NonNull
  public final TextInputLayout trackingNumberLayout;

  private FragmentAddShipmentTrackingBinding(@NonNull NestedScrollView rootView,
      @NonNull TextInputEditText carrier, @NonNull TextInputLayout carrierLayout,
      @NonNull LinearLayout container, @NonNull TextInputEditText customProviderName,
      @NonNull TextInputLayout customProviderNameLayout,
      @NonNull TextInputEditText customProviderUrl,
      @NonNull TextInputLayout customProviderUrlLayout, @NonNull TextInputEditText date,
      @NonNull NestedScrollView scrollView, @NonNull MaterialCardView snackRoot,
      @NonNull TextInputEditText trackingNumber, @NonNull TextInputLayout trackingNumberLayout) {
    this.rootView = rootView;
    this.carrier = carrier;
    this.carrierLayout = carrierLayout;
    this.container = container;
    this.customProviderName = customProviderName;
    this.customProviderNameLayout = customProviderNameLayout;
    this.customProviderUrl = customProviderUrl;
    this.customProviderUrlLayout = customProviderUrlLayout;
    this.date = date;
    this.scrollView = scrollView;
    this.snackRoot = snackRoot;
    this.trackingNumber = trackingNumber;
    this.trackingNumberLayout = trackingNumberLayout;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddShipmentTrackingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddShipmentTrackingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_shipment_tracking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddShipmentTrackingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.carrier;
      TextInputEditText carrier = ViewBindings.findChildViewById(rootView, id);
      if (carrier == null) {
        break missingId;
      }

      id = R.id.carrier_layout;
      TextInputLayout carrierLayout = ViewBindings.findChildViewById(rootView, id);
      if (carrierLayout == null) {
        break missingId;
      }

      id = R.id.container;
      LinearLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.custom_provider_name;
      TextInputEditText customProviderName = ViewBindings.findChildViewById(rootView, id);
      if (customProviderName == null) {
        break missingId;
      }

      id = R.id.custom_provider_name_layout;
      TextInputLayout customProviderNameLayout = ViewBindings.findChildViewById(rootView, id);
      if (customProviderNameLayout == null) {
        break missingId;
      }

      id = R.id.custom_provider_url;
      TextInputEditText customProviderUrl = ViewBindings.findChildViewById(rootView, id);
      if (customProviderUrl == null) {
        break missingId;
      }

      id = R.id.custom_provider_url_layout;
      TextInputLayout customProviderUrlLayout = ViewBindings.findChildViewById(rootView, id);
      if (customProviderUrlLayout == null) {
        break missingId;
      }

      id = R.id.date;
      TextInputEditText date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      NestedScrollView scrollView = (NestedScrollView) rootView;

      id = R.id.snack_root;
      MaterialCardView snackRoot = ViewBindings.findChildViewById(rootView, id);
      if (snackRoot == null) {
        break missingId;
      }

      id = R.id.tracking_number;
      TextInputEditText trackingNumber = ViewBindings.findChildViewById(rootView, id);
      if (trackingNumber == null) {
        break missingId;
      }

      id = R.id.tracking_number_layout;
      TextInputLayout trackingNumberLayout = ViewBindings.findChildViewById(rootView, id);
      if (trackingNumberLayout == null) {
        break missingId;
      }

      return new FragmentAddShipmentTrackingBinding((NestedScrollView) rootView, carrier,
          carrierLayout, container, customProviderName, customProviderNameLayout, customProviderUrl,
          customProviderUrlLayout, date, scrollView, snackRoot, trackingNumber,
          trackingNumberLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
