// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.util.crashlogging;

import com.automattic.android.tracks.crashlogging.CrashLogging;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import org.wordpress.android.fluxc.logging.FluxCCrashLogger;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CrashLoggingModule_Companion_ProvideFluxCCrashLoggerFactory implements Factory<FluxCCrashLogger> {
  private final Provider<CrashLogging> crashLoggingProvider;

  public CrashLoggingModule_Companion_ProvideFluxCCrashLoggerFactory(
      Provider<CrashLogging> crashLoggingProvider) {
    this.crashLoggingProvider = crashLoggingProvider;
  }

  @Override
  public FluxCCrashLogger get() {
    return provideFluxCCrashLogger(crashLoggingProvider.get());
  }

  public static CrashLoggingModule_Companion_ProvideFluxCCrashLoggerFactory create(
      Provider<CrashLogging> crashLoggingProvider) {
    return new CrashLoggingModule_Companion_ProvideFluxCCrashLoggerFactory(crashLoggingProvider);
  }

  public static FluxCCrashLogger provideFluxCCrashLogger(CrashLogging crashLogging) {
    return Preconditions.checkNotNullFromProvides(CrashLoggingModule.Companion.provideFluxCCrashLogger(crashLogging));
  }
}
