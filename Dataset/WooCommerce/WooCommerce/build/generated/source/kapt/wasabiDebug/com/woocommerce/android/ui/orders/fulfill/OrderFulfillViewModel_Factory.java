// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.orders.fulfill;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.AppPrefs;
import com.woocommerce.android.analytics.AnalyticsTrackerWrapper;
import com.woocommerce.android.tools.NetworkStatus;
import com.woocommerce.android.ui.orders.details.OrderDetailRepository;
import com.woocommerce.android.viewmodel.ResourceProvider;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OrderFulfillViewModel_Factory implements Factory<OrderFulfillViewModel> {
  private final Provider<SavedStateHandle> savedStateProvider;

  private final Provider<AppPrefs> appPrefsProvider;

  private final Provider<NetworkStatus> networkStatusProvider;

  private final Provider<ResourceProvider> resourceProvider;

  private final Provider<OrderDetailRepository> repositoryProvider;

  private final Provider<AnalyticsTrackerWrapper> analyticsTrackerWrapperProvider;

  public OrderFulfillViewModel_Factory(Provider<SavedStateHandle> savedStateProvider,
      Provider<AppPrefs> appPrefsProvider, Provider<NetworkStatus> networkStatusProvider,
      Provider<ResourceProvider> resourceProvider,
      Provider<OrderDetailRepository> repositoryProvider,
      Provider<AnalyticsTrackerWrapper> analyticsTrackerWrapperProvider) {
    this.savedStateProvider = savedStateProvider;
    this.appPrefsProvider = appPrefsProvider;
    this.networkStatusProvider = networkStatusProvider;
    this.resourceProvider = resourceProvider;
    this.repositoryProvider = repositoryProvider;
    this.analyticsTrackerWrapperProvider = analyticsTrackerWrapperProvider;
  }

  @Override
  public OrderFulfillViewModel get() {
    return newInstance(savedStateProvider.get(), appPrefsProvider.get(), networkStatusProvider.get(), resourceProvider.get(), repositoryProvider.get(), analyticsTrackerWrapperProvider.get());
  }

  public static OrderFulfillViewModel_Factory create(Provider<SavedStateHandle> savedStateProvider,
      Provider<AppPrefs> appPrefsProvider, Provider<NetworkStatus> networkStatusProvider,
      Provider<ResourceProvider> resourceProvider,
      Provider<OrderDetailRepository> repositoryProvider,
      Provider<AnalyticsTrackerWrapper> analyticsTrackerWrapperProvider) {
    return new OrderFulfillViewModel_Factory(savedStateProvider, appPrefsProvider, networkStatusProvider, resourceProvider, repositoryProvider, analyticsTrackerWrapperProvider);
  }

  public static OrderFulfillViewModel newInstance(SavedStateHandle savedState, AppPrefs appPrefs,
      NetworkStatus networkStatus, ResourceProvider resourceProvider,
      OrderDetailRepository repository, AnalyticsTrackerWrapper analyticsTrackerWrapper) {
    return new OrderFulfillViewModel(savedState, appPrefs, networkStatus, resourceProvider, repository, analyticsTrackerWrapper);
  }
}
