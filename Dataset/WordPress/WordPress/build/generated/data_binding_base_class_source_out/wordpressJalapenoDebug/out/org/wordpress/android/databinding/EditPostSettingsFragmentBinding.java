// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class EditPostSettingsFragmentBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final MaterialTextView featuredImageProgressDesc;

  @NonNull
  public final MaterialButton postAddFeaturedImageButton;

  @NonNull
  public final MaterialTextView postCategories;

  @NonNull
  public final LinearLayout postCategoriesAndTagsCard;

  @NonNull
  public final LinearLayout postCategoriesContainer;

  @NonNull
  public final MaterialTextView postExcerpt;

  @NonNull
  public final LinearLayout postExcerptContainer;

  @NonNull
  public final ImageView postFeaturedImage;

  @NonNull
  public final FrameLayout postFeaturedImageContainer;

  @NonNull
  public final ImageView postFeaturedImageLocal;

  @NonNull
  public final RelativeLayout postFeaturedImageProgressOverlay;

  @NonNull
  public final LinearLayout postFeaturedImageRetryOverlay;

  @NonNull
  public final MaterialTextView postFormat;

  @NonNull
  public final View postFormatBottomSeparator;

  @NonNull
  public final LinearLayout postFormatContainer;

  @NonNull
  public final MaterialTextView postPassword;

  @NonNull
  public final LinearLayout postPasswordContainer;

  @NonNull
  public final MaterialTextView postSettingsCategoriesAndTagsHeader;

  @NonNull
  public final MaterialTextView postSettingsFeaturedImageHeader;

  @NonNull
  public final LinearLayout postSettingsMarkAsStickyContainer;

  @NonNull
  public final MaterialTextView postSettingsMoreOptionsHeader;

  @NonNull
  public final MaterialTextView postSettingsPublish;

  @NonNull
  public final SwitchCompat postSettingsStickySwitch;

  @NonNull
  public final MaterialTextView postSlug;

  @NonNull
  public final LinearLayout postSlugContainer;

  @NonNull
  public final MaterialTextView postStatus;

  @NonNull
  public final LinearLayout postStatusContainer;

  @NonNull
  public final MaterialTextView postTags;

  @NonNull
  public final LinearLayout postTagsContainer;

  @NonNull
  public final MaterialTextView publishDate;

  @NonNull
  public final LinearLayout publishDateContainer;

  @NonNull
  public final MaterialTextView publishDateTitle;

  @NonNull
  public final NestedScrollView settingsFragmentRoot;

  private EditPostSettingsFragmentBinding(@NonNull NestedScrollView rootView,
      @NonNull MaterialTextView featuredImageProgressDesc,
      @NonNull MaterialButton postAddFeaturedImageButton, @NonNull MaterialTextView postCategories,
      @NonNull LinearLayout postCategoriesAndTagsCard,
      @NonNull LinearLayout postCategoriesContainer, @NonNull MaterialTextView postExcerpt,
      @NonNull LinearLayout postExcerptContainer, @NonNull ImageView postFeaturedImage,
      @NonNull FrameLayout postFeaturedImageContainer, @NonNull ImageView postFeaturedImageLocal,
      @NonNull RelativeLayout postFeaturedImageProgressOverlay,
      @NonNull LinearLayout postFeaturedImageRetryOverlay, @NonNull MaterialTextView postFormat,
      @NonNull View postFormatBottomSeparator, @NonNull LinearLayout postFormatContainer,
      @NonNull MaterialTextView postPassword, @NonNull LinearLayout postPasswordContainer,
      @NonNull MaterialTextView postSettingsCategoriesAndTagsHeader,
      @NonNull MaterialTextView postSettingsFeaturedImageHeader,
      @NonNull LinearLayout postSettingsMarkAsStickyContainer,
      @NonNull MaterialTextView postSettingsMoreOptionsHeader,
      @NonNull MaterialTextView postSettingsPublish, @NonNull SwitchCompat postSettingsStickySwitch,
      @NonNull MaterialTextView postSlug, @NonNull LinearLayout postSlugContainer,
      @NonNull MaterialTextView postStatus, @NonNull LinearLayout postStatusContainer,
      @NonNull MaterialTextView postTags, @NonNull LinearLayout postTagsContainer,
      @NonNull MaterialTextView publishDate, @NonNull LinearLayout publishDateContainer,
      @NonNull MaterialTextView publishDateTitle, @NonNull NestedScrollView settingsFragmentRoot) {
    this.rootView = rootView;
    this.featuredImageProgressDesc = featuredImageProgressDesc;
    this.postAddFeaturedImageButton = postAddFeaturedImageButton;
    this.postCategories = postCategories;
    this.postCategoriesAndTagsCard = postCategoriesAndTagsCard;
    this.postCategoriesContainer = postCategoriesContainer;
    this.postExcerpt = postExcerpt;
    this.postExcerptContainer = postExcerptContainer;
    this.postFeaturedImage = postFeaturedImage;
    this.postFeaturedImageContainer = postFeaturedImageContainer;
    this.postFeaturedImageLocal = postFeaturedImageLocal;
    this.postFeaturedImageProgressOverlay = postFeaturedImageProgressOverlay;
    this.postFeaturedImageRetryOverlay = postFeaturedImageRetryOverlay;
    this.postFormat = postFormat;
    this.postFormatBottomSeparator = postFormatBottomSeparator;
    this.postFormatContainer = postFormatContainer;
    this.postPassword = postPassword;
    this.postPasswordContainer = postPasswordContainer;
    this.postSettingsCategoriesAndTagsHeader = postSettingsCategoriesAndTagsHeader;
    this.postSettingsFeaturedImageHeader = postSettingsFeaturedImageHeader;
    this.postSettingsMarkAsStickyContainer = postSettingsMarkAsStickyContainer;
    this.postSettingsMoreOptionsHeader = postSettingsMoreOptionsHeader;
    this.postSettingsPublish = postSettingsPublish;
    this.postSettingsStickySwitch = postSettingsStickySwitch;
    this.postSlug = postSlug;
    this.postSlugContainer = postSlugContainer;
    this.postStatus = postStatus;
    this.postStatusContainer = postStatusContainer;
    this.postTags = postTags;
    this.postTagsContainer = postTagsContainer;
    this.publishDate = publishDate;
    this.publishDateContainer = publishDateContainer;
    this.publishDateTitle = publishDateTitle;
    this.settingsFragmentRoot = settingsFragmentRoot;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static EditPostSettingsFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditPostSettingsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit_post_settings_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditPostSettingsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.featured_image_progress_desc;
      MaterialTextView featuredImageProgressDesc = ViewBindings.findChildViewById(rootView, id);
      if (featuredImageProgressDesc == null) {
        break missingId;
      }

      id = R.id.post_add_featured_image_button;
      MaterialButton postAddFeaturedImageButton = ViewBindings.findChildViewById(rootView, id);
      if (postAddFeaturedImageButton == null) {
        break missingId;
      }

      id = R.id.post_categories;
      MaterialTextView postCategories = ViewBindings.findChildViewById(rootView, id);
      if (postCategories == null) {
        break missingId;
      }

      id = R.id.post_categories_and_tags_card;
      LinearLayout postCategoriesAndTagsCard = ViewBindings.findChildViewById(rootView, id);
      if (postCategoriesAndTagsCard == null) {
        break missingId;
      }

      id = R.id.post_categories_container;
      LinearLayout postCategoriesContainer = ViewBindings.findChildViewById(rootView, id);
      if (postCategoriesContainer == null) {
        break missingId;
      }

      id = R.id.post_excerpt;
      MaterialTextView postExcerpt = ViewBindings.findChildViewById(rootView, id);
      if (postExcerpt == null) {
        break missingId;
      }

      id = R.id.post_excerpt_container;
      LinearLayout postExcerptContainer = ViewBindings.findChildViewById(rootView, id);
      if (postExcerptContainer == null) {
        break missingId;
      }

      id = R.id.post_featured_image;
      ImageView postFeaturedImage = ViewBindings.findChildViewById(rootView, id);
      if (postFeaturedImage == null) {
        break missingId;
      }

      id = R.id.post_featured_image_container;
      FrameLayout postFeaturedImageContainer = ViewBindings.findChildViewById(rootView, id);
      if (postFeaturedImageContainer == null) {
        break missingId;
      }

      id = R.id.post_featured_image_local;
      ImageView postFeaturedImageLocal = ViewBindings.findChildViewById(rootView, id);
      if (postFeaturedImageLocal == null) {
        break missingId;
      }

      id = R.id.post_featured_image_progress_overlay;
      RelativeLayout postFeaturedImageProgressOverlay = ViewBindings.findChildViewById(rootView, id);
      if (postFeaturedImageProgressOverlay == null) {
        break missingId;
      }

      id = R.id.post_featured_image_retry_overlay;
      LinearLayout postFeaturedImageRetryOverlay = ViewBindings.findChildViewById(rootView, id);
      if (postFeaturedImageRetryOverlay == null) {
        break missingId;
      }

      id = R.id.post_format;
      MaterialTextView postFormat = ViewBindings.findChildViewById(rootView, id);
      if (postFormat == null) {
        break missingId;
      }

      id = R.id.post_format_bottom_separator;
      View postFormatBottomSeparator = ViewBindings.findChildViewById(rootView, id);
      if (postFormatBottomSeparator == null) {
        break missingId;
      }

      id = R.id.post_format_container;
      LinearLayout postFormatContainer = ViewBindings.findChildViewById(rootView, id);
      if (postFormatContainer == null) {
        break missingId;
      }

      id = R.id.post_password;
      MaterialTextView postPassword = ViewBindings.findChildViewById(rootView, id);
      if (postPassword == null) {
        break missingId;
      }

      id = R.id.post_password_container;
      LinearLayout postPasswordContainer = ViewBindings.findChildViewById(rootView, id);
      if (postPasswordContainer == null) {
        break missingId;
      }

      id = R.id.post_settings_categories_and_tags_header;
      MaterialTextView postSettingsCategoriesAndTagsHeader = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsCategoriesAndTagsHeader == null) {
        break missingId;
      }

      id = R.id.post_settings_featured_image_header;
      MaterialTextView postSettingsFeaturedImageHeader = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsFeaturedImageHeader == null) {
        break missingId;
      }

      id = R.id.post_settings_mark_as_sticky_container;
      LinearLayout postSettingsMarkAsStickyContainer = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsMarkAsStickyContainer == null) {
        break missingId;
      }

      id = R.id.post_settings_more_options_header;
      MaterialTextView postSettingsMoreOptionsHeader = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsMoreOptionsHeader == null) {
        break missingId;
      }

      id = R.id.post_settings_publish;
      MaterialTextView postSettingsPublish = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsPublish == null) {
        break missingId;
      }

      id = R.id.post_settings_sticky_switch;
      SwitchCompat postSettingsStickySwitch = ViewBindings.findChildViewById(rootView, id);
      if (postSettingsStickySwitch == null) {
        break missingId;
      }

      id = R.id.post_slug;
      MaterialTextView postSlug = ViewBindings.findChildViewById(rootView, id);
      if (postSlug == null) {
        break missingId;
      }

      id = R.id.post_slug_container;
      LinearLayout postSlugContainer = ViewBindings.findChildViewById(rootView, id);
      if (postSlugContainer == null) {
        break missingId;
      }

      id = R.id.post_status;
      MaterialTextView postStatus = ViewBindings.findChildViewById(rootView, id);
      if (postStatus == null) {
        break missingId;
      }

      id = R.id.post_status_container;
      LinearLayout postStatusContainer = ViewBindings.findChildViewById(rootView, id);
      if (postStatusContainer == null) {
        break missingId;
      }

      id = R.id.post_tags;
      MaterialTextView postTags = ViewBindings.findChildViewById(rootView, id);
      if (postTags == null) {
        break missingId;
      }

      id = R.id.post_tags_container;
      LinearLayout postTagsContainer = ViewBindings.findChildViewById(rootView, id);
      if (postTagsContainer == null) {
        break missingId;
      }

      id = R.id.publish_date;
      MaterialTextView publishDate = ViewBindings.findChildViewById(rootView, id);
      if (publishDate == null) {
        break missingId;
      }

      id = R.id.publish_date_container;
      LinearLayout publishDateContainer = ViewBindings.findChildViewById(rootView, id);
      if (publishDateContainer == null) {
        break missingId;
      }

      id = R.id.publish_date_title;
      MaterialTextView publishDateTitle = ViewBindings.findChildViewById(rootView, id);
      if (publishDateTitle == null) {
        break missingId;
      }

      NestedScrollView settingsFragmentRoot = (NestedScrollView) rootView;

      return new EditPostSettingsFragmentBinding((NestedScrollView) rootView,
          featuredImageProgressDesc, postAddFeaturedImageButton, postCategories,
          postCategoriesAndTagsCard, postCategoriesContainer, postExcerpt, postExcerptContainer,
          postFeaturedImage, postFeaturedImageContainer, postFeaturedImageLocal,
          postFeaturedImageProgressOverlay, postFeaturedImageRetryOverlay, postFormat,
          postFormatBottomSeparator, postFormatContainer, postPassword, postPasswordContainer,
          postSettingsCategoriesAndTagsHeader, postSettingsFeaturedImageHeader,
          postSettingsMarkAsStickyContainer, postSettingsMoreOptionsHeader, postSettingsPublish,
          postSettingsStickySwitch, postSlug, postSlugContainer, postStatus, postStatusContainer,
          postTags, postTagsContainer, publishDate, publishDateContainer, publishDateTitle,
          settingsFragmentRoot);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
