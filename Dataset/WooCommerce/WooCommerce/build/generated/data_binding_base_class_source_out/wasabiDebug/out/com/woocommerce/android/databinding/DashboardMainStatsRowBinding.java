// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DashboardMainStatsRowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialTextView conversionLabelTextView;

  @NonNull
  public final MaterialTextView conversionValueTextView;

  @NonNull
  public final View emptyConversionRateIndicator;

  @NonNull
  public final View emptyVisitorStatsIndicator;

  @NonNull
  public final Group emptyVisitorsStatsGroup;

  @NonNull
  public final AppCompatImageView jetpackIconImageView;

  @NonNull
  public final MaterialTextView ordersLabel;

  @NonNull
  public final LinearLayout ordersLayout;

  @NonNull
  public final MaterialTextView ordersValueTextView;

  @NonNull
  public final MaterialTextView statsDateTextView;

  @NonNull
  public final MaterialTextView totalRevenueTextView;

  @NonNull
  public final MaterialTextView visitorsLabelTextview;

  @NonNull
  public final MaterialTextView visitorsValueTextview;

  private DashboardMainStatsRowBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialTextView conversionLabelTextView,
      @NonNull MaterialTextView conversionValueTextView, @NonNull View emptyConversionRateIndicator,
      @NonNull View emptyVisitorStatsIndicator, @NonNull Group emptyVisitorsStatsGroup,
      @NonNull AppCompatImageView jetpackIconImageView, @NonNull MaterialTextView ordersLabel,
      @NonNull LinearLayout ordersLayout, @NonNull MaterialTextView ordersValueTextView,
      @NonNull MaterialTextView statsDateTextView, @NonNull MaterialTextView totalRevenueTextView,
      @NonNull MaterialTextView visitorsLabelTextview,
      @NonNull MaterialTextView visitorsValueTextview) {
    this.rootView = rootView;
    this.conversionLabelTextView = conversionLabelTextView;
    this.conversionValueTextView = conversionValueTextView;
    this.emptyConversionRateIndicator = emptyConversionRateIndicator;
    this.emptyVisitorStatsIndicator = emptyVisitorStatsIndicator;
    this.emptyVisitorsStatsGroup = emptyVisitorsStatsGroup;
    this.jetpackIconImageView = jetpackIconImageView;
    this.ordersLabel = ordersLabel;
    this.ordersLayout = ordersLayout;
    this.ordersValueTextView = ordersValueTextView;
    this.statsDateTextView = statsDateTextView;
    this.totalRevenueTextView = totalRevenueTextView;
    this.visitorsLabelTextview = visitorsLabelTextview;
    this.visitorsValueTextview = visitorsValueTextview;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DashboardMainStatsRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DashboardMainStatsRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dashboard_main_stats_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DashboardMainStatsRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.conversionLabelTextView;
      MaterialTextView conversionLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (conversionLabelTextView == null) {
        break missingId;
      }

      id = R.id.conversionValueTextView;
      MaterialTextView conversionValueTextView = ViewBindings.findChildViewById(rootView, id);
      if (conversionValueTextView == null) {
        break missingId;
      }

      id = R.id.emptyConversionRateIndicator;
      View emptyConversionRateIndicator = ViewBindings.findChildViewById(rootView, id);
      if (emptyConversionRateIndicator == null) {
        break missingId;
      }

      id = R.id.emptyVisitorStatsIndicator;
      View emptyVisitorStatsIndicator = ViewBindings.findChildViewById(rootView, id);
      if (emptyVisitorStatsIndicator == null) {
        break missingId;
      }

      id = R.id.emptyVisitorsStatsGroup;
      Group emptyVisitorsStatsGroup = ViewBindings.findChildViewById(rootView, id);
      if (emptyVisitorsStatsGroup == null) {
        break missingId;
      }

      id = R.id.jetpackIconImageView;
      AppCompatImageView jetpackIconImageView = ViewBindings.findChildViewById(rootView, id);
      if (jetpackIconImageView == null) {
        break missingId;
      }

      id = R.id.ordersLabel;
      MaterialTextView ordersLabel = ViewBindings.findChildViewById(rootView, id);
      if (ordersLabel == null) {
        break missingId;
      }

      id = R.id.orders_layout;
      LinearLayout ordersLayout = ViewBindings.findChildViewById(rootView, id);
      if (ordersLayout == null) {
        break missingId;
      }

      id = R.id.ordersValueTextView;
      MaterialTextView ordersValueTextView = ViewBindings.findChildViewById(rootView, id);
      if (ordersValueTextView == null) {
        break missingId;
      }

      id = R.id.statsDateTextView;
      MaterialTextView statsDateTextView = ViewBindings.findChildViewById(rootView, id);
      if (statsDateTextView == null) {
        break missingId;
      }

      id = R.id.totalRevenueTextView;
      MaterialTextView totalRevenueTextView = ViewBindings.findChildViewById(rootView, id);
      if (totalRevenueTextView == null) {
        break missingId;
      }

      id = R.id.visitorsLabelTextview;
      MaterialTextView visitorsLabelTextview = ViewBindings.findChildViewById(rootView, id);
      if (visitorsLabelTextview == null) {
        break missingId;
      }

      id = R.id.visitorsValueTextview;
      MaterialTextView visitorsValueTextview = ViewBindings.findChildViewById(rootView, id);
      if (visitorsValueTextview == null) {
        break missingId;
      }

      return new DashboardMainStatsRowBinding((LinearLayout) rootView, conversionLabelTextView,
          conversionValueTextView, emptyConversionRateIndicator, emptyVisitorStatsIndicator,
          emptyVisitorsStatsGroup, jetpackIconImageView, ordersLabel, ordersLayout,
          ordersValueTextView, statsDateTextView, totalRevenueTextView, visitorsLabelTextview,
          visitorsValueTextview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
