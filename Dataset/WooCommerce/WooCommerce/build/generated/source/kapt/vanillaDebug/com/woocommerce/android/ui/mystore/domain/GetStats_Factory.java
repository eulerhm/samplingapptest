// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.mystore.domain;

import com.woocommerce.android.AppPrefsWrapper;
import com.woocommerce.android.tools.SelectedSite;
import com.woocommerce.android.ui.mystore.data.StatsRepository;
import com.woocommerce.android.util.CoroutineDispatchers;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetStats_Factory implements Factory<GetStats> {
  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<StatsRepository> statsRepositoryProvider;

  private final Provider<AppPrefsWrapper> appPrefsWrapperProvider;

  private final Provider<CoroutineDispatchers> coroutineDispatchersProvider;

  public GetStats_Factory(Provider<SelectedSite> selectedSiteProvider,
      Provider<StatsRepository> statsRepositoryProvider,
      Provider<AppPrefsWrapper> appPrefsWrapperProvider,
      Provider<CoroutineDispatchers> coroutineDispatchersProvider) {
    this.selectedSiteProvider = selectedSiteProvider;
    this.statsRepositoryProvider = statsRepositoryProvider;
    this.appPrefsWrapperProvider = appPrefsWrapperProvider;
    this.coroutineDispatchersProvider = coroutineDispatchersProvider;
  }

  @Override
  public GetStats get() {
    return newInstance(selectedSiteProvider.get(), statsRepositoryProvider.get(), appPrefsWrapperProvider.get(), coroutineDispatchersProvider.get());
  }

  public static GetStats_Factory create(Provider<SelectedSite> selectedSiteProvider,
      Provider<StatsRepository> statsRepositoryProvider,
      Provider<AppPrefsWrapper> appPrefsWrapperProvider,
      Provider<CoroutineDispatchers> coroutineDispatchersProvider) {
    return new GetStats_Factory(selectedSiteProvider, statsRepositoryProvider, appPrefsWrapperProvider, coroutineDispatchersProvider);
  }

  public static GetStats newInstance(SelectedSite selectedSite, StatsRepository statsRepository,
      AppPrefsWrapper appPrefsWrapper, CoroutineDispatchers coroutineDispatchers) {
    return new GetStats(selectedSite, statsRepository, appPrefsWrapper, coroutineDispatchers);
  }
}
