// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class StatsWidgetMinifiedDarkBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView value;

  @NonNull
  public final LinearLayout widgetContainer;

  @NonNull
  public final LinearLayout widgetContent;

  @NonNull
  public final TextView widgetRetryButton;

  @NonNull
  public final ImageView widgetSiteIcon;

  private StatsWidgetMinifiedDarkBinding(@NonNull LinearLayout rootView, @NonNull TextView name,
      @NonNull TextView value, @NonNull LinearLayout widgetContainer,
      @NonNull LinearLayout widgetContent, @NonNull TextView widgetRetryButton,
      @NonNull ImageView widgetSiteIcon) {
    this.rootView = rootView;
    this.name = name;
    this.value = value;
    this.widgetContainer = widgetContainer;
    this.widgetContent = widgetContent;
    this.widgetRetryButton = widgetRetryButton;
    this.widgetSiteIcon = widgetSiteIcon;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StatsWidgetMinifiedDarkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StatsWidgetMinifiedDarkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.stats_widget_minified_dark, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StatsWidgetMinifiedDarkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.value;
      TextView value = ViewBindings.findChildViewById(rootView, id);
      if (value == null) {
        break missingId;
      }

      LinearLayout widgetContainer = (LinearLayout) rootView;

      id = R.id.widget_content;
      LinearLayout widgetContent = ViewBindings.findChildViewById(rootView, id);
      if (widgetContent == null) {
        break missingId;
      }

      id = R.id.widget_retry_button;
      TextView widgetRetryButton = ViewBindings.findChildViewById(rootView, id);
      if (widgetRetryButton == null) {
        break missingId;
      }

      id = R.id.widget_site_icon;
      ImageView widgetSiteIcon = ViewBindings.findChildViewById(rootView, id);
      if (widgetSiteIcon == null) {
        break missingId;
      }

      return new StatsWidgetMinifiedDarkBinding((LinearLayout) rootView, name, value,
          widgetContainer, widgetContent, widgetRetryButton, widgetSiteIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
