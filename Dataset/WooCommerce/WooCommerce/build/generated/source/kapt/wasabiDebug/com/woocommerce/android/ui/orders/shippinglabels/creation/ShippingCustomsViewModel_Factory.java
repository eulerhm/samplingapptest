// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.orders.shippinglabels.creation;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.tools.SelectedSite;
import com.woocommerce.android.ui.products.ParameterRepository;
import com.woocommerce.android.viewmodel.ResourceProvider;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.WCDataStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ShippingCustomsViewModel_Factory implements Factory<ShippingCustomsViewModel> {
  private final Provider<SavedStateHandle> savedStateHandleProvider;

  private final Provider<SelectedSite> selectedSideProvider;

  private final Provider<ParameterRepository> parameterRepositoryProvider;

  private final Provider<WCDataStore> dataStoreProvider;

  private final Provider<ResourceProvider> resourceProvider;

  public ShippingCustomsViewModel_Factory(Provider<SavedStateHandle> savedStateHandleProvider,
      Provider<SelectedSite> selectedSideProvider,
      Provider<ParameterRepository> parameterRepositoryProvider,
      Provider<WCDataStore> dataStoreProvider, Provider<ResourceProvider> resourceProvider) {
    this.savedStateHandleProvider = savedStateHandleProvider;
    this.selectedSideProvider = selectedSideProvider;
    this.parameterRepositoryProvider = parameterRepositoryProvider;
    this.dataStoreProvider = dataStoreProvider;
    this.resourceProvider = resourceProvider;
  }

  @Override
  public ShippingCustomsViewModel get() {
    return newInstance(savedStateHandleProvider.get(), selectedSideProvider.get(), parameterRepositoryProvider.get(), dataStoreProvider.get(), resourceProvider.get());
  }

  public static ShippingCustomsViewModel_Factory create(
      Provider<SavedStateHandle> savedStateHandleProvider,
      Provider<SelectedSite> selectedSideProvider,
      Provider<ParameterRepository> parameterRepositoryProvider,
      Provider<WCDataStore> dataStoreProvider, Provider<ResourceProvider> resourceProvider) {
    return new ShippingCustomsViewModel_Factory(savedStateHandleProvider, selectedSideProvider, parameterRepositoryProvider, dataStoreProvider, resourceProvider);
  }

  public static ShippingCustomsViewModel newInstance(SavedStateHandle savedStateHandle,
      SelectedSite selectedSide, ParameterRepository parameterRepository, WCDataStore dataStore,
      ResourceProvider resourceProvider) {
    return new ShippingCustomsViewModel(savedStateHandle, selectedSide, parameterRepository, dataStore, resourceProvider);
  }
}
