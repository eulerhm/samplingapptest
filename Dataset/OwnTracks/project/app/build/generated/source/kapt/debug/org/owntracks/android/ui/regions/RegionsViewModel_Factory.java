// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.ui.regions;

import dagger.internal.Factory;
import javax.inject.Provider;
import org.owntracks.android.data.repos.WaypointsRepo;
import org.owntracks.android.services.LocationProcessor;
import org.owntracks.android.ui.base.navigator.Navigator;
import org.owntracks.android.ui.base.viewmodel.BaseViewModel_MembersInjector;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RegionsViewModel_Factory implements Factory<RegionsViewModel> {
  private final Provider<WaypointsRepo> waypointsRepoProvider;

  private final Provider<LocationProcessor> locationProcessorProvider;

  private final Provider<Navigator> navigatorProvider;

  public RegionsViewModel_Factory(Provider<WaypointsRepo> waypointsRepoProvider,
      Provider<LocationProcessor> locationProcessorProvider,
      Provider<Navigator> navigatorProvider) {
    this.waypointsRepoProvider = waypointsRepoProvider;
    this.locationProcessorProvider = locationProcessorProvider;
    this.navigatorProvider = navigatorProvider;
  }

  @Override
  public RegionsViewModel get() {
    RegionsViewModel instance = newInstance(waypointsRepoProvider.get(), locationProcessorProvider.get());
    BaseViewModel_MembersInjector.injectNavigator(instance, navigatorProvider.get());
    return instance;
  }

  public static RegionsViewModel_Factory create(Provider<WaypointsRepo> waypointsRepoProvider,
      Provider<LocationProcessor> locationProcessorProvider,
      Provider<Navigator> navigatorProvider) {
    return new RegionsViewModel_Factory(waypointsRepoProvider, locationProcessorProvider, navigatorProvider);
  }

  public static RegionsViewModel newInstance(WaypointsRepo waypointsRepo,
      LocationProcessor locationProcessor) {
    return new RegionsViewModel(waypointsRepo, locationProcessor);
  }
}
