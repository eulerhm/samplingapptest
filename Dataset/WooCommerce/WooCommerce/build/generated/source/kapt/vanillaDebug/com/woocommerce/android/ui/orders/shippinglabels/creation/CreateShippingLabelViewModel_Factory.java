// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.orders.shippinglabels.creation;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.model.GetLocations;
import com.woocommerce.android.tools.SelectedSite;
import com.woocommerce.android.ui.orders.details.OrderDetailRepository;
import com.woocommerce.android.ui.orders.shippinglabels.ShippingLabelRepository;
import com.woocommerce.android.ui.products.ParameterRepository;
import com.woocommerce.android.util.CurrencyFormatter;
import com.woocommerce.android.viewmodel.ResourceProvider;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.AccountStore;
import org.wordpress.android.fluxc.store.WooCommerceStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CreateShippingLabelViewModel_Factory implements Factory<CreateShippingLabelViewModel> {
  private final Provider<SavedStateHandle> savedStateProvider;

  private final Provider<ParameterRepository> parameterRepositoryProvider;

  private final Provider<OrderDetailRepository> orderDetailRepositoryProvider;

  private final Provider<ShippingLabelRepository> shippingLabelRepositoryProvider;

  private final Provider<ShippingLabelsStateMachine> stateMachineProvider;

  private final Provider<ShippingLabelAddressValidator> addressValidatorProvider;

  private final Provider<SelectedSite> siteProvider;

  private final Provider<WooCommerceStore> wooStoreProvider;

  private final Provider<AccountStore> accountStoreProvider;

  private final Provider<ResourceProvider> resourceProvider;

  private final Provider<CurrencyFormatter> currencyFormatterProvider;

  private final Provider<GetLocations> getLocationsProvider;

  public CreateShippingLabelViewModel_Factory(Provider<SavedStateHandle> savedStateProvider,
      Provider<ParameterRepository> parameterRepositoryProvider,
      Provider<OrderDetailRepository> orderDetailRepositoryProvider,
      Provider<ShippingLabelRepository> shippingLabelRepositoryProvider,
      Provider<ShippingLabelsStateMachine> stateMachineProvider,
      Provider<ShippingLabelAddressValidator> addressValidatorProvider,
      Provider<SelectedSite> siteProvider, Provider<WooCommerceStore> wooStoreProvider,
      Provider<AccountStore> accountStoreProvider, Provider<ResourceProvider> resourceProvider,
      Provider<CurrencyFormatter> currencyFormatterProvider,
      Provider<GetLocations> getLocationsProvider) {
    this.savedStateProvider = savedStateProvider;
    this.parameterRepositoryProvider = parameterRepositoryProvider;
    this.orderDetailRepositoryProvider = orderDetailRepositoryProvider;
    this.shippingLabelRepositoryProvider = shippingLabelRepositoryProvider;
    this.stateMachineProvider = stateMachineProvider;
    this.addressValidatorProvider = addressValidatorProvider;
    this.siteProvider = siteProvider;
    this.wooStoreProvider = wooStoreProvider;
    this.accountStoreProvider = accountStoreProvider;
    this.resourceProvider = resourceProvider;
    this.currencyFormatterProvider = currencyFormatterProvider;
    this.getLocationsProvider = getLocationsProvider;
  }

  @Override
  public CreateShippingLabelViewModel get() {
    return newInstance(savedStateProvider.get(), parameterRepositoryProvider.get(), orderDetailRepositoryProvider.get(), shippingLabelRepositoryProvider.get(), stateMachineProvider.get(), addressValidatorProvider.get(), siteProvider.get(), wooStoreProvider.get(), accountStoreProvider.get(), resourceProvider.get(), currencyFormatterProvider.get(), getLocationsProvider.get());
  }

  public static CreateShippingLabelViewModel_Factory create(
      Provider<SavedStateHandle> savedStateProvider,
      Provider<ParameterRepository> parameterRepositoryProvider,
      Provider<OrderDetailRepository> orderDetailRepositoryProvider,
      Provider<ShippingLabelRepository> shippingLabelRepositoryProvider,
      Provider<ShippingLabelsStateMachine> stateMachineProvider,
      Provider<ShippingLabelAddressValidator> addressValidatorProvider,
      Provider<SelectedSite> siteProvider, Provider<WooCommerceStore> wooStoreProvider,
      Provider<AccountStore> accountStoreProvider, Provider<ResourceProvider> resourceProvider,
      Provider<CurrencyFormatter> currencyFormatterProvider,
      Provider<GetLocations> getLocationsProvider) {
    return new CreateShippingLabelViewModel_Factory(savedStateProvider, parameterRepositoryProvider, orderDetailRepositoryProvider, shippingLabelRepositoryProvider, stateMachineProvider, addressValidatorProvider, siteProvider, wooStoreProvider, accountStoreProvider, resourceProvider, currencyFormatterProvider, getLocationsProvider);
  }

  public static CreateShippingLabelViewModel newInstance(SavedStateHandle savedState,
      ParameterRepository parameterRepository, OrderDetailRepository orderDetailRepository,
      ShippingLabelRepository shippingLabelRepository, ShippingLabelsStateMachine stateMachine,
      ShippingLabelAddressValidator addressValidator, SelectedSite site, WooCommerceStore wooStore,
      AccountStore accountStore, ResourceProvider resourceProvider,
      CurrencyFormatter currencyFormatter, GetLocations getLocations) {
    return new CreateShippingLabelViewModel(savedState, parameterRepository, orderDetailRepository, shippingLabelRepository, stateMachine, addressValidator, site, wooStore, accountStore, resourceProvider, currencyFormatter, getLocations);
  }
}
