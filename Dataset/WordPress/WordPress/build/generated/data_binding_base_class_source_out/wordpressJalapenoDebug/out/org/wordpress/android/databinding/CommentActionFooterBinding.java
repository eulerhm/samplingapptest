// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.util.widgets.AutoResizeTextView;

public final class CommentActionFooterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView btnEditIcon;

  @NonNull
  public final LinearLayout btnLike;

  @NonNull
  public final ImageView btnLikeIcon;

  @NonNull
  public final AutoResizeTextView btnLikeText;

  @NonNull
  public final LinearLayout btnModerate;

  @NonNull
  public final ImageView btnModerateIcon;

  @NonNull
  public final AutoResizeTextView btnModerateText;

  @NonNull
  public final LinearLayout btnMore;

  @NonNull
  public final AutoResizeTextView btnMoreText;

  @NonNull
  public final LinearLayout btnSpam;

  @NonNull
  public final ImageView btnSpamIcon;

  @NonNull
  public final AutoResizeTextView btnSpamText;

  @NonNull
  public final LinearLayout layoutButtons;

  private CommentActionFooterBinding(@NonNull LinearLayout rootView, @NonNull ImageView btnEditIcon,
      @NonNull LinearLayout btnLike, @NonNull ImageView btnLikeIcon,
      @NonNull AutoResizeTextView btnLikeText, @NonNull LinearLayout btnModerate,
      @NonNull ImageView btnModerateIcon, @NonNull AutoResizeTextView btnModerateText,
      @NonNull LinearLayout btnMore, @NonNull AutoResizeTextView btnMoreText,
      @NonNull LinearLayout btnSpam, @NonNull ImageView btnSpamIcon,
      @NonNull AutoResizeTextView btnSpamText, @NonNull LinearLayout layoutButtons) {
    this.rootView = rootView;
    this.btnEditIcon = btnEditIcon;
    this.btnLike = btnLike;
    this.btnLikeIcon = btnLikeIcon;
    this.btnLikeText = btnLikeText;
    this.btnModerate = btnModerate;
    this.btnModerateIcon = btnModerateIcon;
    this.btnModerateText = btnModerateText;
    this.btnMore = btnMore;
    this.btnMoreText = btnMoreText;
    this.btnSpam = btnSpam;
    this.btnSpamIcon = btnSpamIcon;
    this.btnSpamText = btnSpamText;
    this.layoutButtons = layoutButtons;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CommentActionFooterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CommentActionFooterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.comment_action_footer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CommentActionFooterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_edit_icon;
      ImageView btnEditIcon = ViewBindings.findChildViewById(rootView, id);
      if (btnEditIcon == null) {
        break missingId;
      }

      id = R.id.btn_like;
      LinearLayout btnLike = ViewBindings.findChildViewById(rootView, id);
      if (btnLike == null) {
        break missingId;
      }

      id = R.id.btn_like_icon;
      ImageView btnLikeIcon = ViewBindings.findChildViewById(rootView, id);
      if (btnLikeIcon == null) {
        break missingId;
      }

      id = R.id.btn_like_text;
      AutoResizeTextView btnLikeText = ViewBindings.findChildViewById(rootView, id);
      if (btnLikeText == null) {
        break missingId;
      }

      id = R.id.btn_moderate;
      LinearLayout btnModerate = ViewBindings.findChildViewById(rootView, id);
      if (btnModerate == null) {
        break missingId;
      }

      id = R.id.btn_moderate_icon;
      ImageView btnModerateIcon = ViewBindings.findChildViewById(rootView, id);
      if (btnModerateIcon == null) {
        break missingId;
      }

      id = R.id.btn_moderate_text;
      AutoResizeTextView btnModerateText = ViewBindings.findChildViewById(rootView, id);
      if (btnModerateText == null) {
        break missingId;
      }

      id = R.id.btn_more;
      LinearLayout btnMore = ViewBindings.findChildViewById(rootView, id);
      if (btnMore == null) {
        break missingId;
      }

      id = R.id.btn_more_text;
      AutoResizeTextView btnMoreText = ViewBindings.findChildViewById(rootView, id);
      if (btnMoreText == null) {
        break missingId;
      }

      id = R.id.btn_spam;
      LinearLayout btnSpam = ViewBindings.findChildViewById(rootView, id);
      if (btnSpam == null) {
        break missingId;
      }

      id = R.id.btn_spam_icon;
      ImageView btnSpamIcon = ViewBindings.findChildViewById(rootView, id);
      if (btnSpamIcon == null) {
        break missingId;
      }

      id = R.id.btn_spam_text;
      AutoResizeTextView btnSpamText = ViewBindings.findChildViewById(rootView, id);
      if (btnSpamText == null) {
        break missingId;
      }

      LinearLayout layoutButtons = (LinearLayout) rootView;

      return new CommentActionFooterBinding((LinearLayout) rootView, btnEditIcon, btnLike,
          btnLikeIcon, btnLikeText, btnModerate, btnModerateIcon, btnModerateText, btnMore,
          btnMoreText, btnSpam, btnSpamIcon, btnSpamText, layoutButtons);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
