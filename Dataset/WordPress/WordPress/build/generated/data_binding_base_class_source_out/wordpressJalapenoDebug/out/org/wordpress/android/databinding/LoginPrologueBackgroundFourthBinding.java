// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class LoginPrologueBackgroundFourthBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guidelineOrangeCircleEnd;

  @NonNull
  public final Guideline guidelineOrangeCircleTop;

  @NonNull
  public final Guideline guidelinePinkCircleStart;

  @NonNull
  public final Guideline guidelinePinkCircleTop;

  @NonNull
  public final Guideline guidelinePurpleCircleBottom;

  @NonNull
  public final Guideline guidelinePurpleCircleEnd;

  @NonNull
  public final ImageView orangeCircle;

  @NonNull
  public final ImageView pinkCircle;

  @NonNull
  public final ImageView purpleCircle;

  private LoginPrologueBackgroundFourthBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline guidelineOrangeCircleEnd, @NonNull Guideline guidelineOrangeCircleTop,
      @NonNull Guideline guidelinePinkCircleStart, @NonNull Guideline guidelinePinkCircleTop,
      @NonNull Guideline guidelinePurpleCircleBottom, @NonNull Guideline guidelinePurpleCircleEnd,
      @NonNull ImageView orangeCircle, @NonNull ImageView pinkCircle,
      @NonNull ImageView purpleCircle) {
    this.rootView = rootView;
    this.guidelineOrangeCircleEnd = guidelineOrangeCircleEnd;
    this.guidelineOrangeCircleTop = guidelineOrangeCircleTop;
    this.guidelinePinkCircleStart = guidelinePinkCircleStart;
    this.guidelinePinkCircleTop = guidelinePinkCircleTop;
    this.guidelinePurpleCircleBottom = guidelinePurpleCircleBottom;
    this.guidelinePurpleCircleEnd = guidelinePurpleCircleEnd;
    this.orangeCircle = orangeCircle;
    this.pinkCircle = pinkCircle;
    this.purpleCircle = purpleCircle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginPrologueBackgroundFourthBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginPrologueBackgroundFourthBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.login_prologue_background_fourth, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginPrologueBackgroundFourthBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline_orange_circle_end;
      Guideline guidelineOrangeCircleEnd = ViewBindings.findChildViewById(rootView, id);
      if (guidelineOrangeCircleEnd == null) {
        break missingId;
      }

      id = R.id.guideline_orange_circle_top;
      Guideline guidelineOrangeCircleTop = ViewBindings.findChildViewById(rootView, id);
      if (guidelineOrangeCircleTop == null) {
        break missingId;
      }

      id = R.id.guideline_pink_circle_start;
      Guideline guidelinePinkCircleStart = ViewBindings.findChildViewById(rootView, id);
      if (guidelinePinkCircleStart == null) {
        break missingId;
      }

      id = R.id.guideline_pink_circle_top;
      Guideline guidelinePinkCircleTop = ViewBindings.findChildViewById(rootView, id);
      if (guidelinePinkCircleTop == null) {
        break missingId;
      }

      id = R.id.guideline_purple_circle_bottom;
      Guideline guidelinePurpleCircleBottom = ViewBindings.findChildViewById(rootView, id);
      if (guidelinePurpleCircleBottom == null) {
        break missingId;
      }

      id = R.id.guideline_purple_circle_end;
      Guideline guidelinePurpleCircleEnd = ViewBindings.findChildViewById(rootView, id);
      if (guidelinePurpleCircleEnd == null) {
        break missingId;
      }

      id = R.id.orange_circle;
      ImageView orangeCircle = ViewBindings.findChildViewById(rootView, id);
      if (orangeCircle == null) {
        break missingId;
      }

      id = R.id.pink_circle;
      ImageView pinkCircle = ViewBindings.findChildViewById(rootView, id);
      if (pinkCircle == null) {
        break missingId;
      }

      id = R.id.purple_circle;
      ImageView purpleCircle = ViewBindings.findChildViewById(rootView, id);
      if (purpleCircle == null) {
        break missingId;
      }

      return new LoginPrologueBackgroundFourthBinding((ConstraintLayout) rootView,
          guidelineOrangeCircleEnd, guidelineOrangeCircleTop, guidelinePinkCircleStart,
          guidelinePinkCircleTop, guidelinePurpleCircleBottom, guidelinePurpleCircleEnd,
          orangeCircle, pinkCircle, purpleCircle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
