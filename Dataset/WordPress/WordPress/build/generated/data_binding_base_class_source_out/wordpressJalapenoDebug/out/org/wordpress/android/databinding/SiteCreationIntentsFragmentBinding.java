// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class SiteCreationIntentsFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final TextInputEditText input;

  @NonNull
  public final TextInputLayout inputContainer;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final SiteCreationHeaderV2Binding siteCreationIntentsHeader;

  @NonNull
  public final SiteCreationIntentsTitlebarBinding siteCreationIntentsTitlebar;

  @NonNull
  public final MaterialToolbar toolbar;

  private SiteCreationIntentsFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull CollapsingToolbarLayout collapsingToolbar,
      @NonNull TextInputEditText input, @NonNull TextInputLayout inputContainer,
      @NonNull RecyclerView recyclerView,
      @NonNull SiteCreationHeaderV2Binding siteCreationIntentsHeader,
      @NonNull SiteCreationIntentsTitlebarBinding siteCreationIntentsTitlebar,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.collapsingToolbar = collapsingToolbar;
    this.input = input;
    this.inputContainer = inputContainer;
    this.recyclerView = recyclerView;
    this.siteCreationIntentsHeader = siteCreationIntentsHeader;
    this.siteCreationIntentsTitlebar = siteCreationIntentsTitlebar;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SiteCreationIntentsFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SiteCreationIntentsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.site_creation_intents_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SiteCreationIntentsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.input;
      TextInputEditText input = ViewBindings.findChildViewById(rootView, id);
      if (input == null) {
        break missingId;
      }

      id = R.id.input_container;
      TextInputLayout inputContainer = ViewBindings.findChildViewById(rootView, id);
      if (inputContainer == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.site_creation_intents_header;
      View siteCreationIntentsHeader = ViewBindings.findChildViewById(rootView, id);
      if (siteCreationIntentsHeader == null) {
        break missingId;
      }
      SiteCreationHeaderV2Binding binding_siteCreationIntentsHeader = SiteCreationHeaderV2Binding.bind(siteCreationIntentsHeader);

      id = R.id.site_creation_intents_titlebar;
      View siteCreationIntentsTitlebar = ViewBindings.findChildViewById(rootView, id);
      if (siteCreationIntentsTitlebar == null) {
        break missingId;
      }
      SiteCreationIntentsTitlebarBinding binding_siteCreationIntentsTitlebar = SiteCreationIntentsTitlebarBinding.bind(siteCreationIntentsTitlebar);

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new SiteCreationIntentsFragmentBinding((CoordinatorLayout) rootView, appBarLayout,
          collapsingToolbar, input, inputContainer, recyclerView, binding_siteCreationIntentsHeader,
          binding_siteCreationIntentsTitlebar, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
