// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.flexbox.FlexboxLayout;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class WpEditTextWithChipsOutlinedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final FlexboxLayout flexbox;

  @NonNull
  public final TextInputEditText flexboxEditor;

  @NonNull
  public final MaterialTextView flexboxHint;

  @NonNull
  public final MaterialTextView flexboxLabel;

  private WpEditTextWithChipsOutlinedBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout, @NonNull FlexboxLayout flexbox,
      @NonNull TextInputEditText flexboxEditor, @NonNull MaterialTextView flexboxHint,
      @NonNull MaterialTextView flexboxLabel) {
    this.rootView = rootView;
    this.constraintLayout = constraintLayout;
    this.flexbox = flexbox;
    this.flexboxEditor = flexboxEditor;
    this.flexboxHint = flexboxHint;
    this.flexboxLabel = flexboxLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WpEditTextWithChipsOutlinedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WpEditTextWithChipsOutlinedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.wp_edit_text_with_chips_outlined, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WpEditTextWithChipsOutlinedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout constraintLayout = (ConstraintLayout) rootView;

      id = R.id.flexbox;
      FlexboxLayout flexbox = ViewBindings.findChildViewById(rootView, id);
      if (flexbox == null) {
        break missingId;
      }

      id = R.id.flexbox_editor;
      TextInputEditText flexboxEditor = ViewBindings.findChildViewById(rootView, id);
      if (flexboxEditor == null) {
        break missingId;
      }

      id = R.id.flexbox_hint;
      MaterialTextView flexboxHint = ViewBindings.findChildViewById(rootView, id);
      if (flexboxHint == null) {
        break missingId;
      }

      id = R.id.flexbox_label;
      MaterialTextView flexboxLabel = ViewBindings.findChildViewById(rootView, id);
      if (flexboxLabel == null) {
        break missingId;
      }

      return new WpEditTextWithChipsOutlinedBinding((ConstraintLayout) rootView, constraintLayout,
          flexbox, flexboxEditor, flexboxHint, flexboxLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
