// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.push;

import com.woocommerce.android.AppPrefsWrapper;
import com.woocommerce.android.analytics.AnalyticsTrackerWrapper;
import com.woocommerce.android.tools.SelectedSite;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationAnalyticsTracker_Factory implements Factory<NotificationAnalyticsTracker> {
  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<AppPrefsWrapper> appPrefsWrapperProvider;

  private final Provider<AnalyticsTrackerWrapper> analyticsTrackerWrapperProvider;

  public NotificationAnalyticsTracker_Factory(Provider<SelectedSite> selectedSiteProvider,
      Provider<AppPrefsWrapper> appPrefsWrapperProvider,
      Provider<AnalyticsTrackerWrapper> analyticsTrackerWrapperProvider) {
    this.selectedSiteProvider = selectedSiteProvider;
    this.appPrefsWrapperProvider = appPrefsWrapperProvider;
    this.analyticsTrackerWrapperProvider = analyticsTrackerWrapperProvider;
  }

  @Override
  public NotificationAnalyticsTracker get() {
    return newInstance(selectedSiteProvider.get(), appPrefsWrapperProvider.get(), analyticsTrackerWrapperProvider.get());
  }

  public static NotificationAnalyticsTracker_Factory create(
      Provider<SelectedSite> selectedSiteProvider,
      Provider<AppPrefsWrapper> appPrefsWrapperProvider,
      Provider<AnalyticsTrackerWrapper> analyticsTrackerWrapperProvider) {
    return new NotificationAnalyticsTracker_Factory(selectedSiteProvider, appPrefsWrapperProvider, analyticsTrackerWrapperProvider);
  }

  public static NotificationAnalyticsTracker newInstance(SelectedSite selectedSite,
      AppPrefsWrapper appPrefsWrapper, AnalyticsTrackerWrapper analyticsTrackerWrapper) {
    return new NotificationAnalyticsTracker(selectedSite, appPrefsWrapper, analyticsTrackerWrapper);
  }
}
