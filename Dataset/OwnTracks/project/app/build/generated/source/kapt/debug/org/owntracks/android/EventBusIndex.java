package org.owntracks.android;

import org.greenrobot.eventbus.meta.SimpleSubscriberInfo;
import org.greenrobot.eventbus.meta.SubscriberMethodInfo;
import org.greenrobot.eventbus.meta.SubscriberInfo;
import org.greenrobot.eventbus.meta.SubscriberInfoIndex;

import org.greenrobot.eventbus.ThreadMode;

import java.util.HashMap;
import java.util.Map;

/** This class is generated by EventBus, do not edit. */
public class EventBusIndex implements SubscriberInfoIndex {
    private static final Map<Class<?>, SubscriberInfo> SUBSCRIBER_INDEX;

    static {
        SUBSCRIBER_INDEX = new HashMap<Class<?>, SubscriberInfo>();

        putIndex(new SimpleSubscriberInfo(org.owntracks.android.services.MessageProcessor.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.ModeChanged.class,
                    ThreadMode.ASYNC, 10, false),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.EndpointChanged.class,
                    ThreadMode.ASYNC, 10, false),
        }));

        putIndex(new SimpleSubscriberInfo(org.owntracks.android.ui.preferences.connection.ConnectionViewModel.class,
                true, new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.ModeChanged.class),
        }));

        putIndex(new SimpleSubscriberInfo(org.owntracks.android.ui.status.StatusViewModel.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onEvent", org.owntracks.android.services.MessageProcessor.EndpointState.class,
                    ThreadMode.POSTING, 0, true),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.ServiceStarted.class,
                    ThreadMode.POSTING, 0, true),
            new SubscriberMethodInfo("onEvent", android.location.Location.class, ThreadMode.POSTING, 0, true),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.QueueChanged.class,
                    ThreadMode.POSTING, 0, true),
        }));

        putIndex(new SimpleSubscriberInfo(org.owntracks.android.data.repos.MemoryContactsRepo.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onEventMainThread", org.owntracks.android.support.Events.ModeChanged.class,
                    ThreadMode.BACKGROUND),
            new SubscriberMethodInfo("onEventMainThread", org.owntracks.android.support.Events.EndpointChanged.class,
                    ThreadMode.BACKGROUND),
        }));

        putIndex(new SimpleSubscriberInfo(App.class, true, new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.RestartApp.class),
        }));

        putIndex(new SimpleSubscriberInfo(org.owntracks.android.ui.map.MapViewModel.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.FusedContactAdded.class,
                    ThreadMode.MAIN),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.FusedContactRemoved.class,
                    ThreadMode.MAIN),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.model.FusedContact.class, ThreadMode.MAIN),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.ModeChanged.class,
                    ThreadMode.MAIN),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.MonitoringChanged.class,
                    ThreadMode.MAIN),
            new SubscriberMethodInfo("onEvent", android.location.Location.class, ThreadMode.MAIN, 1, true),
        }));

        putIndex(new SimpleSubscriberInfo(org.owntracks.android.services.BackgroundService.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.WaypointAdded.class,
                    ThreadMode.BACKGROUND),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.WaypointUpdated.class,
                    ThreadMode.BACKGROUND),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.WaypointRemoved.class,
                    ThreadMode.BACKGROUND),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.ModeChanged.class,
                    ThreadMode.BACKGROUND),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.MonitoringChanged.class,
                    ThreadMode.BACKGROUND),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.model.messages.MessageTransition.class,
                    ThreadMode.BACKGROUND),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.model.messages.MessageLocation.class,
                    ThreadMode.BACKGROUND),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.services.MessageProcessor.EndpointState.class,
                    ThreadMode.POSTING, 0, true),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.QueueChanged.class,
                    ThreadMode.POSTING, 0, true),
            new SubscriberMethodInfo("onEvent", org.owntracks.android.support.Events.PermissionGranted.class,
                    ThreadMode.POSTING, 0, true),
        }));

    }

    private static void putIndex(SubscriberInfo info) {
        SUBSCRIBER_INDEX.put(info.getSubscriberClass(), info);
    }

    @Override
    public SubscriberInfo getSubscriberInfo(Class<?> subscriberClass) {
        SubscriberInfo info = SUBSCRIBER_INDEX.get(subscriberClass);
        if (info != null) {
            return info;
        } else {
            return null;
        }
    }
}
