// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.tabs.TabLayout;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.widgets.WPViewPager;

public final class NotificationsListFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final LinearLayout connectJetpack;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final MaterialButton jetpackFaq;

  @NonNull
  public final MaterialButton jetpackSetup;

  @NonNull
  public final MaterialTextView jetpackTermsAndConditions;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final MaterialToolbar toolbarMain;

  @NonNull
  public final WPViewPager viewPager;

  private NotificationsListFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBar, @NonNull CollapsingToolbarLayout collapsingToolbar,
      @NonNull LinearLayout connectJetpack, @NonNull CoordinatorLayout coordinatorLayout,
      @NonNull MaterialButton jetpackFaq, @NonNull MaterialButton jetpackSetup,
      @NonNull MaterialTextView jetpackTermsAndConditions, @NonNull TabLayout tabLayout,
      @NonNull MaterialToolbar toolbarMain, @NonNull WPViewPager viewPager) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.collapsingToolbar = collapsingToolbar;
    this.connectJetpack = connectJetpack;
    this.coordinatorLayout = coordinatorLayout;
    this.jetpackFaq = jetpackFaq;
    this.jetpackSetup = jetpackSetup;
    this.jetpackTermsAndConditions = jetpackTermsAndConditions;
    this.tabLayout = tabLayout;
    this.toolbarMain = toolbarMain;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationsListFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotificationsListFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notifications_list_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotificationsListFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.connect_jetpack;
      LinearLayout connectJetpack = ViewBindings.findChildViewById(rootView, id);
      if (connectJetpack == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.jetpack_faq;
      MaterialButton jetpackFaq = ViewBindings.findChildViewById(rootView, id);
      if (jetpackFaq == null) {
        break missingId;
      }

      id = R.id.jetpack_setup;
      MaterialButton jetpackSetup = ViewBindings.findChildViewById(rootView, id);
      if (jetpackSetup == null) {
        break missingId;
      }

      id = R.id.jetpack_terms_and_conditions;
      MaterialTextView jetpackTermsAndConditions = ViewBindings.findChildViewById(rootView, id);
      if (jetpackTermsAndConditions == null) {
        break missingId;
      }

      id = R.id.tab_layout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.toolbar_main;
      MaterialToolbar toolbarMain = ViewBindings.findChildViewById(rootView, id);
      if (toolbarMain == null) {
        break missingId;
      }

      id = R.id.view_pager;
      WPViewPager viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new NotificationsListFragmentBinding((CoordinatorLayout) rootView, appBar,
          collapsingToolbar, connectJetpack, coordinatorLayout, jetpackFaq, jetpackSetup,
          jetpackTermsAndConditions, tabLayout, toolbarMain, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
