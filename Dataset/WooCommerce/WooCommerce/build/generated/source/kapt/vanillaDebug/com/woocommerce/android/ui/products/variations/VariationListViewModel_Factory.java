// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.products.variations;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.tools.NetworkStatus;
import com.woocommerce.android.ui.products.ProductDetailRepository;
import com.woocommerce.android.util.CoroutineDispatchers;
import com.woocommerce.android.util.CurrencyFormatter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VariationListViewModel_Factory implements Factory<VariationListViewModel> {
  private final Provider<SavedStateHandle> savedStateProvider;

  private final Provider<VariationRepository> variationRepositoryProvider;

  private final Provider<ProductDetailRepository> productRepositoryProvider;

  private final Provider<NetworkStatus> networkStatusProvider;

  private final Provider<CurrencyFormatter> currencyFormatterProvider;

  private final Provider<CoroutineDispatchers> dispatchersProvider;

  public VariationListViewModel_Factory(Provider<SavedStateHandle> savedStateProvider,
      Provider<VariationRepository> variationRepositoryProvider,
      Provider<ProductDetailRepository> productRepositoryProvider,
      Provider<NetworkStatus> networkStatusProvider,
      Provider<CurrencyFormatter> currencyFormatterProvider,
      Provider<CoroutineDispatchers> dispatchersProvider) {
    this.savedStateProvider = savedStateProvider;
    this.variationRepositoryProvider = variationRepositoryProvider;
    this.productRepositoryProvider = productRepositoryProvider;
    this.networkStatusProvider = networkStatusProvider;
    this.currencyFormatterProvider = currencyFormatterProvider;
    this.dispatchersProvider = dispatchersProvider;
  }

  @Override
  public VariationListViewModel get() {
    return newInstance(savedStateProvider.get(), variationRepositoryProvider.get(), productRepositoryProvider.get(), networkStatusProvider.get(), currencyFormatterProvider.get(), dispatchersProvider.get());
  }

  public static VariationListViewModel_Factory create(Provider<SavedStateHandle> savedStateProvider,
      Provider<VariationRepository> variationRepositoryProvider,
      Provider<ProductDetailRepository> productRepositoryProvider,
      Provider<NetworkStatus> networkStatusProvider,
      Provider<CurrencyFormatter> currencyFormatterProvider,
      Provider<CoroutineDispatchers> dispatchersProvider) {
    return new VariationListViewModel_Factory(savedStateProvider, variationRepositoryProvider, productRepositoryProvider, networkStatusProvider, currencyFormatterProvider, dispatchersProvider);
  }

  public static VariationListViewModel newInstance(SavedStateHandle savedState,
      VariationRepository variationRepository, ProductDetailRepository productRepository,
      NetworkStatus networkStatus, CurrencyFormatter currencyFormatter,
      CoroutineDispatchers dispatchers) {
    return new VariationListViewModel(savedState, variationRepository, productRepository, networkStatus, currencyFormatter, dispatchers);
  }
}
