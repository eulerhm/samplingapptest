// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.login;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.Dispatcher;
import org.wordpress.android.fluxc.store.AccountStore;
import org.wordpress.android.fluxc.store.WooCommerceStore;
import org.wordpress.android.login.LoginAnalyticsListener;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MagicLinkInterceptRepository_Factory implements Factory<MagicLinkInterceptRepository> {
  private final Provider<Dispatcher> dispatcherProvider;

  private final Provider<AccountStore> accountStoreProvider;

  private final Provider<WooCommerceStore> wooCommerceStoreProvider;

  private final Provider<LoginAnalyticsListener> loginAnalyticsListenerProvider;

  public MagicLinkInterceptRepository_Factory(Provider<Dispatcher> dispatcherProvider,
      Provider<AccountStore> accountStoreProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider,
      Provider<LoginAnalyticsListener> loginAnalyticsListenerProvider) {
    this.dispatcherProvider = dispatcherProvider;
    this.accountStoreProvider = accountStoreProvider;
    this.wooCommerceStoreProvider = wooCommerceStoreProvider;
    this.loginAnalyticsListenerProvider = loginAnalyticsListenerProvider;
  }

  @Override
  public MagicLinkInterceptRepository get() {
    return newInstance(dispatcherProvider.get(), accountStoreProvider.get(), wooCommerceStoreProvider.get(), loginAnalyticsListenerProvider.get());
  }

  public static MagicLinkInterceptRepository_Factory create(Provider<Dispatcher> dispatcherProvider,
      Provider<AccountStore> accountStoreProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider,
      Provider<LoginAnalyticsListener> loginAnalyticsListenerProvider) {
    return new MagicLinkInterceptRepository_Factory(dispatcherProvider, accountStoreProvider, wooCommerceStoreProvider, loginAnalyticsListenerProvider);
  }

  public static MagicLinkInterceptRepository newInstance(Dispatcher dispatcher,
      AccountStore accountStore, WooCommerceStore wooCommerceStore,
      LoginAnalyticsListener loginAnalyticsListener) {
    return new MagicLinkInterceptRepository(dispatcher, accountStore, wooCommerceStore, loginAnalyticsListener);
  }
}
