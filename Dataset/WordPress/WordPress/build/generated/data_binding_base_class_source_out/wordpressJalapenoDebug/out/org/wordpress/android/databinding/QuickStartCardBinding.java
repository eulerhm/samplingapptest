// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class QuickStartCardBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MySiteCardToolbarBinding mySiteCardToolbar;

  @NonNull
  public final MaterialCardView quickStart;

  @NonNull
  public final QuickStartTaskTypeItemBinding quickStartCustomize;

  @NonNull
  public final NewQuickStartTaskTypeItemBinding quickStartGetToKnowApp;

  @NonNull
  public final QuickStartTaskTypeItemBinding quickStartGrow;

  private QuickStartCardBinding(@NonNull MaterialCardView rootView,
      @NonNull MySiteCardToolbarBinding mySiteCardToolbar, @NonNull MaterialCardView quickStart,
      @NonNull QuickStartTaskTypeItemBinding quickStartCustomize,
      @NonNull NewQuickStartTaskTypeItemBinding quickStartGetToKnowApp,
      @NonNull QuickStartTaskTypeItemBinding quickStartGrow) {
    this.rootView = rootView;
    this.mySiteCardToolbar = mySiteCardToolbar;
    this.quickStart = quickStart;
    this.quickStartCustomize = quickStartCustomize;
    this.quickStartGetToKnowApp = quickStartGetToKnowApp;
    this.quickStartGrow = quickStartGrow;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static QuickStartCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuickStartCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.quick_start_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuickStartCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.my_site_card_toolbar;
      View mySiteCardToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mySiteCardToolbar == null) {
        break missingId;
      }
      MySiteCardToolbarBinding binding_mySiteCardToolbar = MySiteCardToolbarBinding.bind(mySiteCardToolbar);

      MaterialCardView quickStart = (MaterialCardView) rootView;

      id = R.id.quick_start_customize;
      View quickStartCustomize = ViewBindings.findChildViewById(rootView, id);
      if (quickStartCustomize == null) {
        break missingId;
      }
      QuickStartTaskTypeItemBinding binding_quickStartCustomize = QuickStartTaskTypeItemBinding.bind(quickStartCustomize);

      id = R.id.quick_start_get_to_know_app;
      View quickStartGetToKnowApp = ViewBindings.findChildViewById(rootView, id);
      if (quickStartGetToKnowApp == null) {
        break missingId;
      }
      NewQuickStartTaskTypeItemBinding binding_quickStartGetToKnowApp = NewQuickStartTaskTypeItemBinding.bind(quickStartGetToKnowApp);

      id = R.id.quick_start_grow;
      View quickStartGrow = ViewBindings.findChildViewById(rootView, id);
      if (quickStartGrow == null) {
        break missingId;
      }
      QuickStartTaskTypeItemBinding binding_quickStartGrow = QuickStartTaskTypeItemBinding.bind(quickStartGrow);

      return new QuickStartCardBinding((MaterialCardView) rootView, binding_mySiteCardToolbar,
          quickStart, binding_quickStartCustomize, binding_quickStartGetToKnowApp,
          binding_quickStartGrow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
