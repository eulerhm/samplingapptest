// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class SiteCreationDomainsScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout contentLayout;

  @NonNull
  public final MaterialButton createSiteButton;

  @NonNull
  public final FrameLayout createSiteButtonContainer;

  @NonNull
  public final View createSiteButtonShaddow;

  @NonNull
  public final FrameLayout domainListEmptyView;

  @NonNull
  public final MaterialTextView domainListEmptyViewMessage;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final SiteCreationDomainsScreenExampleBinding siteCreationDomainsScreenExample;

  @NonNull
  public final SiteCreationHeaderItemBinding siteCreationHeaderItem;

  @NonNull
  public final SiteCreationSearchInputItemBinding siteCreationSearchInputItem;

  private SiteCreationDomainsScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout contentLayout, @NonNull MaterialButton createSiteButton,
      @NonNull FrameLayout createSiteButtonContainer, @NonNull View createSiteButtonShaddow,
      @NonNull FrameLayout domainListEmptyView,
      @NonNull MaterialTextView domainListEmptyViewMessage, @NonNull RecyclerView recyclerView,
      @NonNull SiteCreationDomainsScreenExampleBinding siteCreationDomainsScreenExample,
      @NonNull SiteCreationHeaderItemBinding siteCreationHeaderItem,
      @NonNull SiteCreationSearchInputItemBinding siteCreationSearchInputItem) {
    this.rootView = rootView;
    this.contentLayout = contentLayout;
    this.createSiteButton = createSiteButton;
    this.createSiteButtonContainer = createSiteButtonContainer;
    this.createSiteButtonShaddow = createSiteButtonShaddow;
    this.domainListEmptyView = domainListEmptyView;
    this.domainListEmptyViewMessage = domainListEmptyViewMessage;
    this.recyclerView = recyclerView;
    this.siteCreationDomainsScreenExample = siteCreationDomainsScreenExample;
    this.siteCreationHeaderItem = siteCreationHeaderItem;
    this.siteCreationSearchInputItem = siteCreationSearchInputItem;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SiteCreationDomainsScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SiteCreationDomainsScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.site_creation_domains_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SiteCreationDomainsScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout contentLayout = (ConstraintLayout) rootView;

      id = R.id.create_site_button;
      MaterialButton createSiteButton = ViewBindings.findChildViewById(rootView, id);
      if (createSiteButton == null) {
        break missingId;
      }

      id = R.id.create_site_button_container;
      FrameLayout createSiteButtonContainer = ViewBindings.findChildViewById(rootView, id);
      if (createSiteButtonContainer == null) {
        break missingId;
      }

      id = R.id.create_site_button_shaddow;
      View createSiteButtonShaddow = ViewBindings.findChildViewById(rootView, id);
      if (createSiteButtonShaddow == null) {
        break missingId;
      }

      id = R.id.domain_list_empty_view;
      FrameLayout domainListEmptyView = ViewBindings.findChildViewById(rootView, id);
      if (domainListEmptyView == null) {
        break missingId;
      }

      id = R.id.domain_list_empty_view_message;
      MaterialTextView domainListEmptyViewMessage = ViewBindings.findChildViewById(rootView, id);
      if (domainListEmptyViewMessage == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.site_creation_domains_screen_example;
      View siteCreationDomainsScreenExample = ViewBindings.findChildViewById(rootView, id);
      if (siteCreationDomainsScreenExample == null) {
        break missingId;
      }
      SiteCreationDomainsScreenExampleBinding binding_siteCreationDomainsScreenExample = SiteCreationDomainsScreenExampleBinding.bind(siteCreationDomainsScreenExample);

      id = R.id.site_creation_header_item;
      View siteCreationHeaderItem = ViewBindings.findChildViewById(rootView, id);
      if (siteCreationHeaderItem == null) {
        break missingId;
      }
      SiteCreationHeaderItemBinding binding_siteCreationHeaderItem = SiteCreationHeaderItemBinding.bind(siteCreationHeaderItem);

      id = R.id.site_creation_search_input_item;
      View siteCreationSearchInputItem = ViewBindings.findChildViewById(rootView, id);
      if (siteCreationSearchInputItem == null) {
        break missingId;
      }
      SiteCreationSearchInputItemBinding binding_siteCreationSearchInputItem = SiteCreationSearchInputItemBinding.bind(siteCreationSearchInputItem);

      return new SiteCreationDomainsScreenBinding((ConstraintLayout) rootView, contentLayout,
          createSiteButton, createSiteButtonContainer, createSiteButtonShaddow, domainListEmptyView,
          domainListEmptyViewMessage, recyclerView, binding_siteCreationDomainsScreenExample,
          binding_siteCreationHeaderItem, binding_siteCreationSearchInputItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
