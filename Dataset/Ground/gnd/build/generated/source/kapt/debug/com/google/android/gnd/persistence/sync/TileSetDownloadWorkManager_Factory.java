// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.persistence.sync;

import androidx.work.WorkManager;
import com.google.android.gnd.persistence.local.LocalValueStore;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TileSetDownloadWorkManager_Factory implements Factory<TileSetDownloadWorkManager> {
  private final Provider<WorkManager> workManagerProvider;

  private final Provider<LocalValueStore> localValueStoreProvider;

  public TileSetDownloadWorkManager_Factory(Provider<WorkManager> workManagerProvider,
      Provider<LocalValueStore> localValueStoreProvider) {
    this.workManagerProvider = workManagerProvider;
    this.localValueStoreProvider = localValueStoreProvider;
  }

  @Override
  public TileSetDownloadWorkManager get() {
    return newInstance(workManagerProvider.get(), localValueStoreProvider.get());
  }

  public static TileSetDownloadWorkManager_Factory create(Provider<WorkManager> workManagerProvider,
      Provider<LocalValueStore> localValueStoreProvider) {
    return new TileSetDownloadWorkManager_Factory(workManagerProvider, localValueStoreProvider);
  }

  public static TileSetDownloadWorkManager newInstance(WorkManager workManager,
      LocalValueStore localValueStore) {
    return new TileSetDownloadWorkManager(workManager, localValueStore);
  }
}
