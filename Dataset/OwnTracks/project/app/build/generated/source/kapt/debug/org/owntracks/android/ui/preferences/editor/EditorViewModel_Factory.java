// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.ui.preferences.editor;

import dagger.internal.Factory;
import javax.inject.Provider;
import org.owntracks.android.data.repos.WaypointsRepo;
import org.owntracks.android.support.Parser;
import org.owntracks.android.support.Preferences;
import org.owntracks.android.ui.base.navigator.Navigator;
import org.owntracks.android.ui.base.viewmodel.BaseViewModel_MembersInjector;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EditorViewModel_Factory implements Factory<EditorViewModel> {
  private final Provider<Preferences> preferencesProvider;

  private final Provider<Parser> parserProvider;

  private final Provider<Navigator> navigatorProvider;

  private final Provider<WaypointsRepo> waypointsRepoProvider;

  public EditorViewModel_Factory(Provider<Preferences> preferencesProvider,
      Provider<Parser> parserProvider, Provider<Navigator> navigatorProvider,
      Provider<WaypointsRepo> waypointsRepoProvider) {
    this.preferencesProvider = preferencesProvider;
    this.parserProvider = parserProvider;
    this.navigatorProvider = navigatorProvider;
    this.waypointsRepoProvider = waypointsRepoProvider;
  }

  @Override
  public EditorViewModel get() {
    EditorViewModel instance = newInstance(preferencesProvider.get(), parserProvider.get());
    BaseViewModel_MembersInjector.injectNavigator(instance, navigatorProvider.get());
    EditorViewModel_MembersInjector.injectWaypointsRepo(instance, waypointsRepoProvider.get());
    return instance;
  }

  public static EditorViewModel_Factory create(Provider<Preferences> preferencesProvider,
      Provider<Parser> parserProvider, Provider<Navigator> navigatorProvider,
      Provider<WaypointsRepo> waypointsRepoProvider) {
    return new EditorViewModel_Factory(preferencesProvider, parserProvider, navigatorProvider, waypointsRepoProvider);
  }

  public static EditorViewModel newInstance(Preferences preferences, Parser parser) {
    return new EditorViewModel(preferences, parser);
  }
}
