// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.woocommerce.android.R;
import com.woocommerce.android.ui.orders.OrderDetailShippingMethodNoticeCard;
import com.woocommerce.android.ui.orders.details.views.OrderDetailCustomerInfoView;
import com.woocommerce.android.ui.orders.details.views.OrderDetailInstallWcShippingBanner;
import com.woocommerce.android.ui.orders.details.views.OrderDetailOrderNotesView;
import com.woocommerce.android.ui.orders.details.views.OrderDetailOrderStatusView;
import com.woocommerce.android.ui.orders.details.views.OrderDetailPaymentInfoView;
import com.woocommerce.android.ui.orders.details.views.OrderDetailProductListView;
import com.woocommerce.android.ui.orders.details.views.OrderDetailRefundsView;
import com.woocommerce.android.ui.orders.details.views.OrderDetailShipmentTrackingListView;
import com.woocommerce.android.ui.orders.details.views.OrderDetailShippingLabelsView;
import com.woocommerce.android.ui.products.FeatureWIPNoticeCard;
import com.woocommerce.android.widgets.ScrollChildSwipeRefreshLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOrderDetailBinding implements ViewBinding {
  @NonNull
  private final ScrollChildSwipeRefreshLayout rootView;

  @NonNull
  public final LinearLayout orderDetailContainer;

  @NonNull
  public final OrderDetailCustomerInfoView orderDetailCustomerInfo;

  @NonNull
  public final OrderDetailInstallWcShippingBanner orderDetailInstallWcShippingBanner;

  @NonNull
  public final OrderDetailOrderNotesView orderDetailNoteList;

  @NonNull
  public final OrderDetailOrderStatusView orderDetailOrderStatus;

  @NonNull
  public final OrderDetailPaymentInfoView orderDetailPaymentInfo;

  @NonNull
  public final OrderDetailProductListView orderDetailProductList;

  @NonNull
  public final OrderDetailRefundsView orderDetailRefundsInfo;

  @NonNull
  public final OrderDetailShipmentTrackingListView orderDetailShipmentList;

  @NonNull
  public final OrderDetailShippingLabelsView orderDetailShippingLabelList;

  @NonNull
  public final FeatureWIPNoticeCard orderDetailShippingLabelsWipCard;

  @NonNull
  public final OrderDetailShippingMethodNoticeCard orderDetailShippingMethodNotice;

  @NonNull
  public final ScrollChildSwipeRefreshLayout orderRefreshLayout;

  @NonNull
  public final NestedScrollView scrollView;

  private FragmentOrderDetailBinding(@NonNull ScrollChildSwipeRefreshLayout rootView,
      @NonNull LinearLayout orderDetailContainer,
      @NonNull OrderDetailCustomerInfoView orderDetailCustomerInfo,
      @NonNull OrderDetailInstallWcShippingBanner orderDetailInstallWcShippingBanner,
      @NonNull OrderDetailOrderNotesView orderDetailNoteList,
      @NonNull OrderDetailOrderStatusView orderDetailOrderStatus,
      @NonNull OrderDetailPaymentInfoView orderDetailPaymentInfo,
      @NonNull OrderDetailProductListView orderDetailProductList,
      @NonNull OrderDetailRefundsView orderDetailRefundsInfo,
      @NonNull OrderDetailShipmentTrackingListView orderDetailShipmentList,
      @NonNull OrderDetailShippingLabelsView orderDetailShippingLabelList,
      @NonNull FeatureWIPNoticeCard orderDetailShippingLabelsWipCard,
      @NonNull OrderDetailShippingMethodNoticeCard orderDetailShippingMethodNotice,
      @NonNull ScrollChildSwipeRefreshLayout orderRefreshLayout,
      @NonNull NestedScrollView scrollView) {
    this.rootView = rootView;
    this.orderDetailContainer = orderDetailContainer;
    this.orderDetailCustomerInfo = orderDetailCustomerInfo;
    this.orderDetailInstallWcShippingBanner = orderDetailInstallWcShippingBanner;
    this.orderDetailNoteList = orderDetailNoteList;
    this.orderDetailOrderStatus = orderDetailOrderStatus;
    this.orderDetailPaymentInfo = orderDetailPaymentInfo;
    this.orderDetailProductList = orderDetailProductList;
    this.orderDetailRefundsInfo = orderDetailRefundsInfo;
    this.orderDetailShipmentList = orderDetailShipmentList;
    this.orderDetailShippingLabelList = orderDetailShippingLabelList;
    this.orderDetailShippingLabelsWipCard = orderDetailShippingLabelsWipCard;
    this.orderDetailShippingMethodNotice = orderDetailShippingMethodNotice;
    this.orderRefreshLayout = orderRefreshLayout;
    this.scrollView = scrollView;
  }

  @Override
  @NonNull
  public ScrollChildSwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOrderDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOrderDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_order_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOrderDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.orderDetail_container;
      LinearLayout orderDetailContainer = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailContainer == null) {
        break missingId;
      }

      id = R.id.orderDetail_customerInfo;
      OrderDetailCustomerInfoView orderDetailCustomerInfo = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailCustomerInfo == null) {
        break missingId;
      }

      id = R.id.orderDetail_installWcShippingBanner;
      OrderDetailInstallWcShippingBanner orderDetailInstallWcShippingBanner = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailInstallWcShippingBanner == null) {
        break missingId;
      }

      id = R.id.orderDetail_noteList;
      OrderDetailOrderNotesView orderDetailNoteList = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailNoteList == null) {
        break missingId;
      }

      id = R.id.orderDetail_orderStatus;
      OrderDetailOrderStatusView orderDetailOrderStatus = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailOrderStatus == null) {
        break missingId;
      }

      id = R.id.orderDetail_paymentInfo;
      OrderDetailPaymentInfoView orderDetailPaymentInfo = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailPaymentInfo == null) {
        break missingId;
      }

      id = R.id.orderDetail_productList;
      OrderDetailProductListView orderDetailProductList = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailProductList == null) {
        break missingId;
      }

      id = R.id.orderDetail_refundsInfo;
      OrderDetailRefundsView orderDetailRefundsInfo = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailRefundsInfo == null) {
        break missingId;
      }

      id = R.id.orderDetail_shipmentList;
      OrderDetailShipmentTrackingListView orderDetailShipmentList = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailShipmentList == null) {
        break missingId;
      }

      id = R.id.orderDetail_shippingLabelList;
      OrderDetailShippingLabelsView orderDetailShippingLabelList = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailShippingLabelList == null) {
        break missingId;
      }

      id = R.id.orderDetail_shippingLabelsWipCard;
      FeatureWIPNoticeCard orderDetailShippingLabelsWipCard = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailShippingLabelsWipCard == null) {
        break missingId;
      }

      id = R.id.orderDetail_shippingMethodNotice;
      OrderDetailShippingMethodNoticeCard orderDetailShippingMethodNotice = ViewBindings.findChildViewById(rootView, id);
      if (orderDetailShippingMethodNotice == null) {
        break missingId;
      }

      ScrollChildSwipeRefreshLayout orderRefreshLayout = (ScrollChildSwipeRefreshLayout) rootView;

      id = R.id.scrollView;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      return new FragmentOrderDetailBinding((ScrollChildSwipeRefreshLayout) rootView,
          orderDetailContainer, orderDetailCustomerInfo, orderDetailInstallWcShippingBanner,
          orderDetailNoteList, orderDetailOrderStatus, orderDetailPaymentInfo,
          orderDetailProductList, orderDetailRefundsInfo, orderDetailShipmentList,
          orderDetailShippingLabelList, orderDetailShippingLabelsWipCard,
          orderDetailShippingMethodNotice, orderRefreshLayout, scrollView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
