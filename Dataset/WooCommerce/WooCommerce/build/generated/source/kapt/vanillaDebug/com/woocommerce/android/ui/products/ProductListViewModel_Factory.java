// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.products;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.tools.NetworkStatus;
import com.woocommerce.android.ui.media.MediaFileUploadHandler;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductListViewModel_Factory implements Factory<ProductListViewModel> {
  private final Provider<SavedStateHandle> savedStateProvider;

  private final Provider<ProductListRepository> productRepositoryProvider;

  private final Provider<NetworkStatus> networkStatusProvider;

  private final Provider<MediaFileUploadHandler> mediaFileUploadHandlerProvider;

  public ProductListViewModel_Factory(Provider<SavedStateHandle> savedStateProvider,
      Provider<ProductListRepository> productRepositoryProvider,
      Provider<NetworkStatus> networkStatusProvider,
      Provider<MediaFileUploadHandler> mediaFileUploadHandlerProvider) {
    this.savedStateProvider = savedStateProvider;
    this.productRepositoryProvider = productRepositoryProvider;
    this.networkStatusProvider = networkStatusProvider;
    this.mediaFileUploadHandlerProvider = mediaFileUploadHandlerProvider;
  }

  @Override
  public ProductListViewModel get() {
    return newInstance(savedStateProvider.get(), productRepositoryProvider.get(), networkStatusProvider.get(), mediaFileUploadHandlerProvider.get());
  }

  public static ProductListViewModel_Factory create(Provider<SavedStateHandle> savedStateProvider,
      Provider<ProductListRepository> productRepositoryProvider,
      Provider<NetworkStatus> networkStatusProvider,
      Provider<MediaFileUploadHandler> mediaFileUploadHandlerProvider) {
    return new ProductListViewModel_Factory(savedStateProvider, productRepositoryProvider, networkStatusProvider, mediaFileUploadHandlerProvider);
  }

  public static ProductListViewModel newInstance(SavedStateHandle savedState,
      ProductListRepository productRepository, NetworkStatus networkStatus,
      MediaFileUploadHandler mediaFileUploadHandler) {
    return new ProductListViewModel(savedState, productRepository, networkStatus, mediaFileUploadHandler);
  }
}
