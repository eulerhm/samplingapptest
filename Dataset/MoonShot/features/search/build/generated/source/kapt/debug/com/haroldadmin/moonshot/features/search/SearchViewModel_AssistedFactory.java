// Generated by @AssistedInject. Do not modify!
package com.haroldadmin.moonshot.features.search;

import com.haroldadmin.moonshotRepository.search.SearchLaunchesUseCase;
import com.haroldadmin.moonshotRepository.search.SearchLaunchpadsUseCase;
import com.haroldadmin.moonshotRepository.search.SearchRocketsUseCase;
import java.lang.Override;
import javax.inject.Inject;
import javax.inject.Provider;

public final class SearchViewModel_AssistedFactory implements SearchViewModel.Factory {
  private final Provider<SearchLaunchesUseCase> searchLaunchesUseCase;

  private final Provider<SearchRocketsUseCase> searchRocketsUseCase;

  private final Provider<SearchLaunchpadsUseCase> searchLaunchpadsUseCase;

  @Inject
  public SearchViewModel_AssistedFactory(Provider<SearchLaunchesUseCase> searchLaunchesUseCase,
      Provider<SearchRocketsUseCase> searchRocketsUseCase,
      Provider<SearchLaunchpadsUseCase> searchLaunchpadsUseCase) {
    this.searchLaunchesUseCase = searchLaunchesUseCase;
    this.searchRocketsUseCase = searchRocketsUseCase;
    this.searchLaunchpadsUseCase = searchLaunchpadsUseCase;
  }

  @Override
  public SearchViewModel create(SearchState initState) {
    return new SearchViewModel(
        initState,
        searchLaunchesUseCase.get(),
        searchRocketsUseCase.get(),
        searchLaunchpadsUseCase.get());
  }
}
