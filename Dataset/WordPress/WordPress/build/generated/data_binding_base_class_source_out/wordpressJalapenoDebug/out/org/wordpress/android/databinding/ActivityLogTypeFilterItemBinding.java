// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;

public final class ActivityLogTypeFilterItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialTextView activityType;

  @NonNull
  public final MaterialCheckBox checkbox;

  @NonNull
  public final ConstraintLayout container;

  private ActivityLogTypeFilterItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialTextView activityType, @NonNull MaterialCheckBox checkbox,
      @NonNull ConstraintLayout container) {
    this.rootView = rootView;
    this.activityType = activityType;
    this.checkbox = checkbox;
    this.container = container;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLogTypeFilterItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLogTypeFilterItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_log_type_filter_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLogTypeFilterItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_type;
      MaterialTextView activityType = ViewBindings.findChildViewById(rootView, id);
      if (activityType == null) {
        break missingId;
      }

      id = R.id.checkbox;
      MaterialCheckBox checkbox = ViewBindings.findChildViewById(rootView, id);
      if (checkbox == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      return new ActivityLogTypeFilterItemBinding((ConstraintLayout) rootView, activityType,
          checkbox, container);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
