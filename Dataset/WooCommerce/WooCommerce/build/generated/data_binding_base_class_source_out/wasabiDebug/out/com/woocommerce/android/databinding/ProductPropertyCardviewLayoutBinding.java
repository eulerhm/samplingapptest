// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductPropertyCardviewLayoutBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final View cardCaptionDivider;

  @NonNull
  public final MaterialTextView cardCaptionText;

  @NonNull
  public final LinearLayout cardContainerView;

  @NonNull
  public final RecyclerView propertiesRecyclerView;

  private ProductPropertyCardviewLayoutBinding(@NonNull View rootView,
      @NonNull View cardCaptionDivider, @NonNull MaterialTextView cardCaptionText,
      @NonNull LinearLayout cardContainerView, @NonNull RecyclerView propertiesRecyclerView) {
    this.rootView = rootView;
    this.cardCaptionDivider = cardCaptionDivider;
    this.cardCaptionText = cardCaptionText;
    this.cardContainerView = cardContainerView;
    this.propertiesRecyclerView = propertiesRecyclerView;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductPropertyCardviewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.product_property_cardview_layout, parent);
    return bind(parent);
  }

  @NonNull
  public static ProductPropertyCardviewLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardCaptionDivider;
      View cardCaptionDivider = ViewBindings.findChildViewById(rootView, id);
      if (cardCaptionDivider == null) {
        break missingId;
      }

      id = R.id.cardCaptionText;
      MaterialTextView cardCaptionText = ViewBindings.findChildViewById(rootView, id);
      if (cardCaptionText == null) {
        break missingId;
      }

      id = R.id.cardContainerView;
      LinearLayout cardContainerView = ViewBindings.findChildViewById(rootView, id);
      if (cardContainerView == null) {
        break missingId;
      }

      id = R.id.propertiesRecyclerView;
      RecyclerView propertiesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (propertiesRecyclerView == null) {
        break missingId;
      }

      return new ProductPropertyCardviewLayoutBinding(rootView, cardCaptionDivider, cardCaptionText,
          cardContainerView, propertiesRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
