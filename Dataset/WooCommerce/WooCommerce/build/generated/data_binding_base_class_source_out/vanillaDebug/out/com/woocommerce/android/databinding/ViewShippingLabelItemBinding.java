// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.WCSelectableTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewShippingLabelItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView shippingLabelIcon;

  @NonNull
  public final ImageButton shippingLabelItemBtnTrack;

  @NonNull
  public final MaterialTextView shippingLabelTitle;

  @NonNull
  public final WCSelectableTextView shippingLabelValue;

  private ViewShippingLabelItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView shippingLabelIcon, @NonNull ImageButton shippingLabelItemBtnTrack,
      @NonNull MaterialTextView shippingLabelTitle,
      @NonNull WCSelectableTextView shippingLabelValue) {
    this.rootView = rootView;
    this.shippingLabelIcon = shippingLabelIcon;
    this.shippingLabelItemBtnTrack = shippingLabelItemBtnTrack;
    this.shippingLabelTitle = shippingLabelTitle;
    this.shippingLabelValue = shippingLabelValue;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewShippingLabelItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewShippingLabelItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_shipping_label_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewShippingLabelItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.shippingLabelIcon;
      ImageView shippingLabelIcon = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelIcon == null) {
        break missingId;
      }

      id = R.id.shippingLabelItem_btnTrack;
      ImageButton shippingLabelItemBtnTrack = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelItemBtnTrack == null) {
        break missingId;
      }

      id = R.id.shippingLabelTitle;
      MaterialTextView shippingLabelTitle = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelTitle == null) {
        break missingId;
      }

      id = R.id.shippingLabelValue;
      WCSelectableTextView shippingLabelValue = ViewBindings.findChildViewById(rootView, id);
      if (shippingLabelValue == null) {
        break missingId;
      }

      return new ViewShippingLabelItemBinding((ConstraintLayout) rootView, shippingLabelIcon,
          shippingLabelItemBtnTrack, shippingLabelTitle, shippingLabelValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
