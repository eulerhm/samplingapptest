// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.orders.simplepayments;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.tools.NetworkStatus;
import com.woocommerce.android.tools.SelectedSite;
import com.woocommerce.android.util.CoroutineDispatchers;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.WCOrderStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TakePaymentViewModel_Factory implements Factory<TakePaymentViewModel> {
  private final Provider<SavedStateHandle> savedStateProvider;

  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<WCOrderStore> orderStoreProvider;

  private final Provider<CoroutineDispatchers> dispatchersProvider;

  private final Provider<NetworkStatus> networkStatusProvider;

  public TakePaymentViewModel_Factory(Provider<SavedStateHandle> savedStateProvider,
      Provider<SelectedSite> selectedSiteProvider, Provider<WCOrderStore> orderStoreProvider,
      Provider<CoroutineDispatchers> dispatchersProvider,
      Provider<NetworkStatus> networkStatusProvider) {
    this.savedStateProvider = savedStateProvider;
    this.selectedSiteProvider = selectedSiteProvider;
    this.orderStoreProvider = orderStoreProvider;
    this.dispatchersProvider = dispatchersProvider;
    this.networkStatusProvider = networkStatusProvider;
  }

  @Override
  public TakePaymentViewModel get() {
    return newInstance(savedStateProvider.get(), selectedSiteProvider.get(), orderStoreProvider.get(), dispatchersProvider.get(), networkStatusProvider.get());
  }

  public static TakePaymentViewModel_Factory create(Provider<SavedStateHandle> savedStateProvider,
      Provider<SelectedSite> selectedSiteProvider, Provider<WCOrderStore> orderStoreProvider,
      Provider<CoroutineDispatchers> dispatchersProvider,
      Provider<NetworkStatus> networkStatusProvider) {
    return new TakePaymentViewModel_Factory(savedStateProvider, selectedSiteProvider, orderStoreProvider, dispatchersProvider, networkStatusProvider);
  }

  public static TakePaymentViewModel newInstance(SavedStateHandle savedState,
      SelectedSite selectedSite, WCOrderStore orderStore, CoroutineDispatchers dispatchers,
      NetworkStatus networkStatus) {
    return new TakePaymentViewModel(savedState, selectedSite, orderStore, dispatchers, networkStatus);
  }
}
