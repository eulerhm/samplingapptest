// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.people.WPEditTextWithChipsOutlined;
import org.wordpress.android.widgets.WPTextView;

public final class PeopleInviteFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appbarMain;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final MaterialButton disableButton;

  @NonNull
  public final View divider;

  @NonNull
  public final MaterialTextView expireDate;

  @NonNull
  public final MaterialButton generateLinks;

  @NonNull
  public final ProgressBar getLinksStatusProgress;

  @NonNull
  public final MaterialButton getStatusRetry;

  @NonNull
  public final LinearLayout inviteLinksContainer;

  @NonNull
  public final LinearLayout invitePeopleContainer;

  @NonNull
  public final MaterialTextView learnMore;

  @NonNull
  public final AutoCompleteTextView linksRole;

  @NonNull
  public final TextInputLayout linksRoleContainer;

  @NonNull
  public final FrameLayout loadAndRetryContainer;

  @NonNull
  public final RelativeLayout manageLinksContainer;

  @NonNull
  public final TextInputEditText message;

  @NonNull
  public final TextInputLayout messageContainer;

  @NonNull
  public final WPTextView messageInfo;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final AutoCompleteTextView role;

  @NonNull
  public final TextInputLayout roleContainer;

  @NonNull
  public final MaterialButton shareLinks;

  @NonNull
  public final ShimmerFrameLayout shimmerViewContainer;

  @NonNull
  public final MaterialToolbar toolbarMain;

  @NonNull
  public final WPEditTextWithChipsOutlined userNamesEmails;

  @NonNull
  public final LinearLayout usernameErrorsContainer;

  @NonNull
  public final LinearLayout usernamesContainer;

  private PeopleInviteFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appbarMain, @NonNull CoordinatorLayout coordinatorLayout,
      @NonNull MaterialButton disableButton, @NonNull View divider,
      @NonNull MaterialTextView expireDate, @NonNull MaterialButton generateLinks,
      @NonNull ProgressBar getLinksStatusProgress, @NonNull MaterialButton getStatusRetry,
      @NonNull LinearLayout inviteLinksContainer, @NonNull LinearLayout invitePeopleContainer,
      @NonNull MaterialTextView learnMore, @NonNull AutoCompleteTextView linksRole,
      @NonNull TextInputLayout linksRoleContainer, @NonNull FrameLayout loadAndRetryContainer,
      @NonNull RelativeLayout manageLinksContainer, @NonNull TextInputEditText message,
      @NonNull TextInputLayout messageContainer, @NonNull WPTextView messageInfo,
      @NonNull NestedScrollView nestedScrollView, @NonNull AutoCompleteTextView role,
      @NonNull TextInputLayout roleContainer, @NonNull MaterialButton shareLinks,
      @NonNull ShimmerFrameLayout shimmerViewContainer, @NonNull MaterialToolbar toolbarMain,
      @NonNull WPEditTextWithChipsOutlined userNamesEmails,
      @NonNull LinearLayout usernameErrorsContainer, @NonNull LinearLayout usernamesContainer) {
    this.rootView = rootView;
    this.appbarMain = appbarMain;
    this.coordinatorLayout = coordinatorLayout;
    this.disableButton = disableButton;
    this.divider = divider;
    this.expireDate = expireDate;
    this.generateLinks = generateLinks;
    this.getLinksStatusProgress = getLinksStatusProgress;
    this.getStatusRetry = getStatusRetry;
    this.inviteLinksContainer = inviteLinksContainer;
    this.invitePeopleContainer = invitePeopleContainer;
    this.learnMore = learnMore;
    this.linksRole = linksRole;
    this.linksRoleContainer = linksRoleContainer;
    this.loadAndRetryContainer = loadAndRetryContainer;
    this.manageLinksContainer = manageLinksContainer;
    this.message = message;
    this.messageContainer = messageContainer;
    this.messageInfo = messageInfo;
    this.nestedScrollView = nestedScrollView;
    this.role = role;
    this.roleContainer = roleContainer;
    this.shareLinks = shareLinks;
    this.shimmerViewContainer = shimmerViewContainer;
    this.toolbarMain = toolbarMain;
    this.userNamesEmails = userNamesEmails;
    this.usernameErrorsContainer = usernameErrorsContainer;
    this.usernamesContainer = usernamesContainer;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PeopleInviteFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PeopleInviteFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.people_invite_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PeopleInviteFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar_main;
      AppBarLayout appbarMain = ViewBindings.findChildViewById(rootView, id);
      if (appbarMain == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.disable_button;
      MaterialButton disableButton = ViewBindings.findChildViewById(rootView, id);
      if (disableButton == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.expire_date;
      MaterialTextView expireDate = ViewBindings.findChildViewById(rootView, id);
      if (expireDate == null) {
        break missingId;
      }

      id = R.id.generate_links;
      MaterialButton generateLinks = ViewBindings.findChildViewById(rootView, id);
      if (generateLinks == null) {
        break missingId;
      }

      id = R.id.get_links_status_progress;
      ProgressBar getLinksStatusProgress = ViewBindings.findChildViewById(rootView, id);
      if (getLinksStatusProgress == null) {
        break missingId;
      }

      id = R.id.get_status_retry;
      MaterialButton getStatusRetry = ViewBindings.findChildViewById(rootView, id);
      if (getStatusRetry == null) {
        break missingId;
      }

      id = R.id.invite_links_container;
      LinearLayout inviteLinksContainer = ViewBindings.findChildViewById(rootView, id);
      if (inviteLinksContainer == null) {
        break missingId;
      }

      id = R.id.invite_people_container;
      LinearLayout invitePeopleContainer = ViewBindings.findChildViewById(rootView, id);
      if (invitePeopleContainer == null) {
        break missingId;
      }

      id = R.id.learn_more;
      MaterialTextView learnMore = ViewBindings.findChildViewById(rootView, id);
      if (learnMore == null) {
        break missingId;
      }

      id = R.id.links_role;
      AutoCompleteTextView linksRole = ViewBindings.findChildViewById(rootView, id);
      if (linksRole == null) {
        break missingId;
      }

      id = R.id.links_role_container;
      TextInputLayout linksRoleContainer = ViewBindings.findChildViewById(rootView, id);
      if (linksRoleContainer == null) {
        break missingId;
      }

      id = R.id.load_and_retry_container;
      FrameLayout loadAndRetryContainer = ViewBindings.findChildViewById(rootView, id);
      if (loadAndRetryContainer == null) {
        break missingId;
      }

      id = R.id.manage_links_container;
      RelativeLayout manageLinksContainer = ViewBindings.findChildViewById(rootView, id);
      if (manageLinksContainer == null) {
        break missingId;
      }

      id = R.id.message;
      TextInputEditText message = ViewBindings.findChildViewById(rootView, id);
      if (message == null) {
        break missingId;
      }

      id = R.id.message_container;
      TextInputLayout messageContainer = ViewBindings.findChildViewById(rootView, id);
      if (messageContainer == null) {
        break missingId;
      }

      id = R.id.message_info;
      WPTextView messageInfo = ViewBindings.findChildViewById(rootView, id);
      if (messageInfo == null) {
        break missingId;
      }

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.role;
      AutoCompleteTextView role = ViewBindings.findChildViewById(rootView, id);
      if (role == null) {
        break missingId;
      }

      id = R.id.role_container;
      TextInputLayout roleContainer = ViewBindings.findChildViewById(rootView, id);
      if (roleContainer == null) {
        break missingId;
      }

      id = R.id.share_links;
      MaterialButton shareLinks = ViewBindings.findChildViewById(rootView, id);
      if (shareLinks == null) {
        break missingId;
      }

      id = R.id.shimmer_view_container;
      ShimmerFrameLayout shimmerViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (shimmerViewContainer == null) {
        break missingId;
      }

      id = R.id.toolbar_main;
      MaterialToolbar toolbarMain = ViewBindings.findChildViewById(rootView, id);
      if (toolbarMain == null) {
        break missingId;
      }

      id = R.id.user_names_emails;
      WPEditTextWithChipsOutlined userNamesEmails = ViewBindings.findChildViewById(rootView, id);
      if (userNamesEmails == null) {
        break missingId;
      }

      id = R.id.username_errors_container;
      LinearLayout usernameErrorsContainer = ViewBindings.findChildViewById(rootView, id);
      if (usernameErrorsContainer == null) {
        break missingId;
      }

      id = R.id.usernames_container;
      LinearLayout usernamesContainer = ViewBindings.findChildViewById(rootView, id);
      if (usernamesContainer == null) {
        break missingId;
      }

      return new PeopleInviteFragmentBinding((CoordinatorLayout) rootView, appbarMain,
          coordinatorLayout, disableButton, divider, expireDate, generateLinks,
          getLinksStatusProgress, getStatusRetry, inviteLinksContainer, invitePeopleContainer,
          learnMore, linksRole, linksRoleContainer, loadAndRetryContainer, manageLinksContainer,
          message, messageContainer, messageInfo, nestedScrollView, role, roleContainer, shareLinks,
          shimmerViewContainer, toolbarMain, userNamesEmails, usernameErrorsContainer,
          usernamesContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
