// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.ui.reader.views.ReaderExpandableTagsView;
import org.wordpress.android.ui.reader.views.ReaderFollowButton;

public final class ReaderPostDetailHeaderViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ReaderExpandableTagsView expandableTagsView;

  @NonNull
  public final ReaderFollowButton headerFollowButton;

  @NonNull
  public final ReaderBlogSectionViewBinding layoutBlogSection;

  @NonNull
  public final MaterialTextView postDetailDotSeparator;

  @NonNull
  public final MaterialTextView postDetailTextDateline;

  @NonNull
  public final MaterialTextView textAuthor;

  @NonNull
  public final MaterialTextView textBy;

  @NonNull
  public final MaterialTextView textTitle;

  private ReaderPostDetailHeaderViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ReaderExpandableTagsView expandableTagsView,
      @NonNull ReaderFollowButton headerFollowButton,
      @NonNull ReaderBlogSectionViewBinding layoutBlogSection,
      @NonNull MaterialTextView postDetailDotSeparator,
      @NonNull MaterialTextView postDetailTextDateline, @NonNull MaterialTextView textAuthor,
      @NonNull MaterialTextView textBy, @NonNull MaterialTextView textTitle) {
    this.rootView = rootView;
    this.expandableTagsView = expandableTagsView;
    this.headerFollowButton = headerFollowButton;
    this.layoutBlogSection = layoutBlogSection;
    this.postDetailDotSeparator = postDetailDotSeparator;
    this.postDetailTextDateline = postDetailTextDateline;
    this.textAuthor = textAuthor;
    this.textBy = textBy;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReaderPostDetailHeaderViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReaderPostDetailHeaderViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reader_post_detail_header_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReaderPostDetailHeaderViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expandable_tags_view;
      ReaderExpandableTagsView expandableTagsView = ViewBindings.findChildViewById(rootView, id);
      if (expandableTagsView == null) {
        break missingId;
      }

      id = R.id.header_follow_button;
      ReaderFollowButton headerFollowButton = ViewBindings.findChildViewById(rootView, id);
      if (headerFollowButton == null) {
        break missingId;
      }

      id = R.id.layout_blog_section;
      View layoutBlogSection = ViewBindings.findChildViewById(rootView, id);
      if (layoutBlogSection == null) {
        break missingId;
      }
      ReaderBlogSectionViewBinding binding_layoutBlogSection = ReaderBlogSectionViewBinding.bind(layoutBlogSection);

      id = R.id.post_detail_dot_separator;
      MaterialTextView postDetailDotSeparator = ViewBindings.findChildViewById(rootView, id);
      if (postDetailDotSeparator == null) {
        break missingId;
      }

      id = R.id.post_detail_text_dateline;
      MaterialTextView postDetailTextDateline = ViewBindings.findChildViewById(rootView, id);
      if (postDetailTextDateline == null) {
        break missingId;
      }

      id = R.id.text_author;
      MaterialTextView textAuthor = ViewBindings.findChildViewById(rootView, id);
      if (textAuthor == null) {
        break missingId;
      }

      id = R.id.text_by;
      MaterialTextView textBy = ViewBindings.findChildViewById(rootView, id);
      if (textBy == null) {
        break missingId;
      }

      id = R.id.text_title;
      MaterialTextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new ReaderPostDetailHeaderViewBinding((ConstraintLayout) rootView, expandableTagsView,
          headerFollowButton, binding_layoutBlogSection, postDetailDotSeparator,
          postDetailTextDateline, textAuthor, textBy, textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
