package com.google.android.gnd.persistence.local.room.models;

import androidx.room.ColumnInfo;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_Coordinates extends Coordinates {

  @ColumnInfo(name = "lat")
  private final double latitude;

  @ColumnInfo(name = "lng")
  private final double longitude;

  private AutoValue_Coordinates(
      double latitude,
      double longitude) {
    this.latitude = latitude;
    this.longitude = longitude;
  }

  @ColumnInfo(name = "lat")
  @Override
  public double getLatitude() {
    return latitude;
  }

  @ColumnInfo(name = "lng")
  @Override
  public double getLongitude() {
    return longitude;
  }

  @Override
  public String toString() {
    return "Coordinates{"
        + "latitude=" + latitude + ", "
        + "longitude=" + longitude
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof Coordinates) {
      Coordinates that = (Coordinates) o;
      return Double.doubleToLongBits(this.latitude) == Double.doubleToLongBits(that.getLatitude())
          && Double.doubleToLongBits(this.longitude) == Double.doubleToLongBits(that.getLongitude());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= (int) ((Double.doubleToLongBits(latitude) >>> 32) ^ Double.doubleToLongBits(latitude));
    h$ *= 1000003;
    h$ ^= (int) ((Double.doubleToLongBits(longitude) >>> 32) ^ Double.doubleToLongBits(longitude));
    return h$;
  }

  static final class Builder extends Coordinates.Builder {
    private Double latitude;
    private Double longitude;
    Builder() {
    }
    @Override
    public Coordinates.Builder setLatitude(double latitude) {
      this.latitude = latitude;
      return this;
    }
    @Override
    public Coordinates.Builder setLongitude(double longitude) {
      this.longitude = longitude;
      return this;
    }
    @Override
    public Coordinates build() {
      String missing = "";
      if (this.latitude == null) {
        missing += " latitude";
      }
      if (this.longitude == null) {
        missing += " longitude";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_Coordinates(
          this.latitude,
          this.longitude);
    }
  }

}
