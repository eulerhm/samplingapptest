// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.products.variations.selector;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.tools.SelectedSite;
import com.woocommerce.android.util.CurrencyFormatter;
import com.woocommerce.android.viewmodel.ResourceProvider;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.WooCommerceStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VariationSelectorViewModel_Factory implements Factory<VariationSelectorViewModel> {
  private final Provider<SavedStateHandle> savedStateProvider;

  private final Provider<VariationSelectorRepository> repositoryProvider;

  private final Provider<CurrencyFormatter> currencyFormatterProvider;

  private final Provider<WooCommerceStore> wooCommerceStoreProvider;

  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<VariationListHandler> variationListHandlerProvider;

  private final Provider<ResourceProvider> resourceProvider;

  public VariationSelectorViewModel_Factory(Provider<SavedStateHandle> savedStateProvider,
      Provider<VariationSelectorRepository> repositoryProvider,
      Provider<CurrencyFormatter> currencyFormatterProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider,
      Provider<SelectedSite> selectedSiteProvider,
      Provider<VariationListHandler> variationListHandlerProvider,
      Provider<ResourceProvider> resourceProvider) {
    this.savedStateProvider = savedStateProvider;
    this.repositoryProvider = repositoryProvider;
    this.currencyFormatterProvider = currencyFormatterProvider;
    this.wooCommerceStoreProvider = wooCommerceStoreProvider;
    this.selectedSiteProvider = selectedSiteProvider;
    this.variationListHandlerProvider = variationListHandlerProvider;
    this.resourceProvider = resourceProvider;
  }

  @Override
  public VariationSelectorViewModel get() {
    return newInstance(savedStateProvider.get(), repositoryProvider.get(), currencyFormatterProvider.get(), wooCommerceStoreProvider.get(), selectedSiteProvider.get(), variationListHandlerProvider.get(), resourceProvider.get());
  }

  public static VariationSelectorViewModel_Factory create(
      Provider<SavedStateHandle> savedStateProvider,
      Provider<VariationSelectorRepository> repositoryProvider,
      Provider<CurrencyFormatter> currencyFormatterProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider,
      Provider<SelectedSite> selectedSiteProvider,
      Provider<VariationListHandler> variationListHandlerProvider,
      Provider<ResourceProvider> resourceProvider) {
    return new VariationSelectorViewModel_Factory(savedStateProvider, repositoryProvider, currencyFormatterProvider, wooCommerceStoreProvider, selectedSiteProvider, variationListHandlerProvider, resourceProvider);
  }

  public static VariationSelectorViewModel newInstance(SavedStateHandle savedState,
      VariationSelectorRepository repository, CurrencyFormatter currencyFormatter,
      WooCommerceStore wooCommerceStore, SelectedSite selectedSite,
      VariationListHandler variationListHandler, ResourceProvider resourceProvider) {
    return new VariationSelectorViewModel(savedState, repository, currencyFormatter, wooCommerceStore, selectedSite, variationListHandler, resourceProvider);
  }
}
