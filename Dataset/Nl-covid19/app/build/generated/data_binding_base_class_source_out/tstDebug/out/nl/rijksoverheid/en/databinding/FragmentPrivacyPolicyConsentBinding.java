// Generated by data binding compiler. Do not edit!
package nl.rijksoverheid.en.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.Deprecated;
import java.lang.Object;
import nl.rijksoverheid.en.R;
import nl.rijksoverheid.en.onboarding.OnboardingViewModel;

public abstract class FragmentPrivacyPolicyConsentBinding extends ViewDataBinding {
  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final IncludeEnableApiStepBinding check1;

  @NonNull
  public final IncludeEnableApiStepBinding check2;

  @NonNull
  public final IncludeEnableApiStepBinding check3;

  @NonNull
  public final IncludeEnableApiStepBinding check4;

  @NonNull
  public final IncludeEnableApiStepBinding check5;

  @NonNull
  public final IncludeEnableApiStepBinding check6;

  @NonNull
  public final CheckBox consentCheckbox;

  @NonNull
  public final ConstraintLayout consentContainer;

  @NonNull
  public final TextView consentLabel;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView headline;

  @NonNull
  public final Button next;

  @NonNull
  public final NestedScrollView scrollContainer;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final IncludeEnableApiStepBinding voluntary;

  @Bindable
  protected OnboardingViewModel mOnboardingViewModel;

  @Bindable
  protected View.OnClickListener mNextButtonClickListener;

  protected FragmentPrivacyPolicyConsentBinding(Object _bindingComponent, View _root,
      int _localFieldCount, AppBarLayout appbar, IncludeEnableApiStepBinding check1,
      IncludeEnableApiStepBinding check2, IncludeEnableApiStepBinding check3,
      IncludeEnableApiStepBinding check4, IncludeEnableApiStepBinding check5,
      IncludeEnableApiStepBinding check6, CheckBox consentCheckbox,
      ConstraintLayout consentContainer, TextView consentLabel, TextView description,
      TextView headline, Button next, NestedScrollView scrollContainer, Toolbar toolbar,
      IncludeEnableApiStepBinding voluntary) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appbar = appbar;
    this.check1 = check1;
    this.check2 = check2;
    this.check3 = check3;
    this.check4 = check4;
    this.check5 = check5;
    this.check6 = check6;
    this.consentCheckbox = consentCheckbox;
    this.consentContainer = consentContainer;
    this.consentLabel = consentLabel;
    this.description = description;
    this.headline = headline;
    this.next = next;
    this.scrollContainer = scrollContainer;
    this.toolbar = toolbar;
    this.voluntary = voluntary;
  }

  public abstract void setOnboardingViewModel(@Nullable OnboardingViewModel onboardingViewModel);

  @Nullable
  public OnboardingViewModel getOnboardingViewModel() {
    return mOnboardingViewModel;
  }

  public abstract void setNextButtonClickListener(
      @Nullable View.OnClickListener nextButtonClickListener);

  @Nullable
  public View.OnClickListener getNextButtonClickListener() {
    return mNextButtonClickListener;
  }

  @NonNull
  public static FragmentPrivacyPolicyConsentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_privacy_policy_consent, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPrivacyPolicyConsentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentPrivacyPolicyConsentBinding>inflateInternal(inflater, R.layout.fragment_privacy_policy_consent, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentPrivacyPolicyConsentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_privacy_policy_consent, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPrivacyPolicyConsentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentPrivacyPolicyConsentBinding>inflateInternal(inflater, R.layout.fragment_privacy_policy_consent, null, false, component);
  }

  public static FragmentPrivacyPolicyConsentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentPrivacyPolicyConsentBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (FragmentPrivacyPolicyConsentBinding)bind(component, view, R.layout.fragment_privacy_policy_consent);
  }
}
