// Generated by view binder compiler. Do not edit!
package com.woocommerce.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.woocommerce.android.R;
import com.woocommerce.android.widgets.WCElevatedLinearLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductFilterListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View bottomDivider;

  @NonNull
  public final RecyclerView filterList;

  @NonNull
  public final MaterialButton filterListBtnShowProducts;

  @NonNull
  public final WCElevatedLinearLayout showOrdersButtonFrameLinearLayout;

  private FragmentProductFilterListBinding(@NonNull ConstraintLayout rootView,
      @NonNull View bottomDivider, @NonNull RecyclerView filterList,
      @NonNull MaterialButton filterListBtnShowProducts,
      @NonNull WCElevatedLinearLayout showOrdersButtonFrameLinearLayout) {
    this.rootView = rootView;
    this.bottomDivider = bottomDivider;
    this.filterList = filterList;
    this.filterListBtnShowProducts = filterListBtnShowProducts;
    this.showOrdersButtonFrameLinearLayout = showOrdersButtonFrameLinearLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductFilterListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductFilterListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_product_filter_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductFilterListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomDivider;
      View bottomDivider = ViewBindings.findChildViewById(rootView, id);
      if (bottomDivider == null) {
        break missingId;
      }

      id = R.id.filterList;
      RecyclerView filterList = ViewBindings.findChildViewById(rootView, id);
      if (filterList == null) {
        break missingId;
      }

      id = R.id.filterList_btnShowProducts;
      MaterialButton filterListBtnShowProducts = ViewBindings.findChildViewById(rootView, id);
      if (filterListBtnShowProducts == null) {
        break missingId;
      }

      id = R.id.showOrdersButtonFrameLinearLayout;
      WCElevatedLinearLayout showOrdersButtonFrameLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (showOrdersButtonFrameLinearLayout == null) {
        break missingId;
      }

      return new FragmentProductFilterListBinding((ConstraintLayout) rootView, bottomDivider,
          filterList, filterListBtnShowProducts, showOrdersButtonFrameLinearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
