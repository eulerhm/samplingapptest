// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.ui.editsubmission;

import androidx.fragment.app.Fragment;
import com.google.android.gnd.ui.common.ViewModelFactory;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FieldViewFactory_Factory implements Factory<FieldViewFactory> {
  private final Provider<Fragment> fragmentProvider;

  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  public FieldViewFactory_Factory(Provider<Fragment> fragmentProvider,
      Provider<ViewModelFactory> viewModelFactoryProvider) {
    this.fragmentProvider = fragmentProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  @Override
  public FieldViewFactory get() {
    FieldViewFactory instance = newInstance();
    FieldViewFactory_MembersInjector.injectFragment(instance, fragmentProvider.get());
    FieldViewFactory_MembersInjector.injectViewModelFactory(instance, viewModelFactoryProvider.get());
    return instance;
  }

  public static FieldViewFactory_Factory create(Provider<Fragment> fragmentProvider,
      Provider<ViewModelFactory> viewModelFactoryProvider) {
    return new FieldViewFactory_Factory(fragmentProvider, viewModelFactoryProvider);
  }

  public static FieldViewFactory newInstance() {
    return new FieldViewFactory();
  }
}
