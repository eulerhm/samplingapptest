// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.persistence.sync;

import android.content.Context;
import androidx.work.WorkerParameters;
import com.google.android.gnd.persistence.remote.RemoteStorageManager;
import com.google.android.gnd.system.NotificationManager;
import dagger.internal.DaggerGenerated;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PhotoSyncWorker_Factory {
  private final Provider<RemoteStorageManager> remoteStorageManagerProvider;

  private final Provider<NotificationManager> notificationManagerProvider;

  public PhotoSyncWorker_Factory(Provider<RemoteStorageManager> remoteStorageManagerProvider,
      Provider<NotificationManager> notificationManagerProvider) {
    this.remoteStorageManagerProvider = remoteStorageManagerProvider;
    this.notificationManagerProvider = notificationManagerProvider;
  }

  public PhotoSyncWorker get(Context context, WorkerParameters workerParams) {
    return newInstance(context, workerParams, remoteStorageManagerProvider.get(), notificationManagerProvider.get());
  }

  public static PhotoSyncWorker_Factory create(
      Provider<RemoteStorageManager> remoteStorageManagerProvider,
      Provider<NotificationManager> notificationManagerProvider) {
    return new PhotoSyncWorker_Factory(remoteStorageManagerProvider, notificationManagerProvider);
  }

  public static PhotoSyncWorker newInstance(Context context, WorkerParameters workerParams,
      RemoteStorageManager remoteStorageManager, NotificationManager notificationManager) {
    return new PhotoSyncWorker(context, workerParams, remoteStorageManager, notificationManager);
  }
}
