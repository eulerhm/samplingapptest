// Generated by Dagger (https://dagger.dev).
package com.google.android.gnd.persistence.sync;

import android.content.Context;
import androidx.work.WorkerParameters;
import com.google.android.gnd.persistence.local.LocalDataStore;
import com.google.android.gnd.system.NotificationManager;
import dagger.internal.DaggerGenerated;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TileSetDownloadWorker_Factory {
  private final Provider<LocalDataStore> localDataStoreProvider;

  private final Provider<NotificationManager> notificationManagerProvider;

  public TileSetDownloadWorker_Factory(Provider<LocalDataStore> localDataStoreProvider,
      Provider<NotificationManager> notificationManagerProvider) {
    this.localDataStoreProvider = localDataStoreProvider;
    this.notificationManagerProvider = notificationManagerProvider;
  }

  public TileSetDownloadWorker get(Context context, WorkerParameters params) {
    return newInstance(context, params, localDataStoreProvider.get(), notificationManagerProvider.get());
  }

  public static TileSetDownloadWorker_Factory create(
      Provider<LocalDataStore> localDataStoreProvider,
      Provider<NotificationManager> notificationManagerProvider) {
    return new TileSetDownloadWorker_Factory(localDataStoreProvider, notificationManagerProvider);
  }

  public static TileSetDownloadWorker newInstance(Context context, WorkerParameters params,
      LocalDataStore localDataStore, NotificationManager notificationManager) {
    return new TileSetDownloadWorker(context, params, localDataStore, notificationManager);
  }
}
