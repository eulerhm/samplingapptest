// Generated by view binder compiler. Do not edit!
package org.wordpress.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wordpress.android.R;
import org.wordpress.android.util.widgets.CustomSwipeRefreshLayout;
import org.wordpress.android.widgets.AppBarFadingEdgeView;

public final class PagesFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appbarMain;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final FrameLayout fabContainer;

  @NonNull
  public final FloatingActionButton newPageButton;

  @NonNull
  public final AppCompatSpinner pagesAuthorSelection;

  @NonNull
  public final ViewPager pagesPager;

  @NonNull
  public final AppBarFadingEdgeView pagesTabLayoutFadingEdge;

  @NonNull
  public final CustomSwipeRefreshLayout pullToRefresh;

  @NonNull
  public final FrameLayout searchFrame;

  @NonNull
  public final RelativeLayout tabContainer;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  private PagesFragmentBinding(@NonNull ConstraintLayout rootView, @NonNull AppBarLayout appbarMain,
      @NonNull ConstraintLayout constraintLayout, @NonNull CoordinatorLayout coordinatorLayout,
      @NonNull FrameLayout fabContainer, @NonNull FloatingActionButton newPageButton,
      @NonNull AppCompatSpinner pagesAuthorSelection, @NonNull ViewPager pagesPager,
      @NonNull AppBarFadingEdgeView pagesTabLayoutFadingEdge,
      @NonNull CustomSwipeRefreshLayout pullToRefresh, @NonNull FrameLayout searchFrame,
      @NonNull RelativeLayout tabContainer, @NonNull TabLayout tabLayout,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appbarMain = appbarMain;
    this.constraintLayout = constraintLayout;
    this.coordinatorLayout = coordinatorLayout;
    this.fabContainer = fabContainer;
    this.newPageButton = newPageButton;
    this.pagesAuthorSelection = pagesAuthorSelection;
    this.pagesPager = pagesPager;
    this.pagesTabLayoutFadingEdge = pagesTabLayoutFadingEdge;
    this.pullToRefresh = pullToRefresh;
    this.searchFrame = searchFrame;
    this.tabContainer = tabContainer;
    this.tabLayout = tabLayout;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PagesFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PagesFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pages_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PagesFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar_main;
      AppBarLayout appbarMain = ViewBindings.findChildViewById(rootView, id);
      if (appbarMain == null) {
        break missingId;
      }

      ConstraintLayout constraintLayout = (ConstraintLayout) rootView;

      id = R.id.coordinatorLayout;
      CoordinatorLayout coordinatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (coordinatorLayout == null) {
        break missingId;
      }

      id = R.id.fab_container;
      FrameLayout fabContainer = ViewBindings.findChildViewById(rootView, id);
      if (fabContainer == null) {
        break missingId;
      }

      id = R.id.newPageButton;
      FloatingActionButton newPageButton = ViewBindings.findChildViewById(rootView, id);
      if (newPageButton == null) {
        break missingId;
      }

      id = R.id.pages_author_selection;
      AppCompatSpinner pagesAuthorSelection = ViewBindings.findChildViewById(rootView, id);
      if (pagesAuthorSelection == null) {
        break missingId;
      }

      id = R.id.pagesPager;
      ViewPager pagesPager = ViewBindings.findChildViewById(rootView, id);
      if (pagesPager == null) {
        break missingId;
      }

      id = R.id.pages_tab_layout_fading_edge;
      AppBarFadingEdgeView pagesTabLayoutFadingEdge = ViewBindings.findChildViewById(rootView, id);
      if (pagesTabLayoutFadingEdge == null) {
        break missingId;
      }

      id = R.id.pullToRefresh;
      CustomSwipeRefreshLayout pullToRefresh = ViewBindings.findChildViewById(rootView, id);
      if (pullToRefresh == null) {
        break missingId;
      }

      id = R.id.searchFrame;
      FrameLayout searchFrame = ViewBindings.findChildViewById(rootView, id);
      if (searchFrame == null) {
        break missingId;
      }

      id = R.id.tabContainer;
      RelativeLayout tabContainer = ViewBindings.findChildViewById(rootView, id);
      if (tabContainer == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new PagesFragmentBinding((ConstraintLayout) rootView, appbarMain, constraintLayout,
          coordinatorLayout, fabContainer, newPageButton, pagesAuthorSelection, pagesPager,
          pagesTabLayoutFadingEdge, pullToRefresh, searchFrame, tabContainer, tabLayout, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
