// Generated by Dagger (https://dagger.dev).
package com.woocommerce.android.ui.products;

import androidx.lifecycle.SavedStateHandle;
import com.woocommerce.android.tools.SelectedSite;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.wordpress.android.fluxc.store.WooCommerceStore;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductPricingViewModel_Factory implements Factory<ProductPricingViewModel> {
  private final Provider<SavedStateHandle> savedStateProvider;

  private final Provider<ProductDetailRepository> productRepositoryProvider;

  private final Provider<WooCommerceStore> wooCommerceStoreProvider;

  private final Provider<SelectedSite> selectedSiteProvider;

  private final Provider<ParameterRepository> parameterRepositoryProvider;

  public ProductPricingViewModel_Factory(Provider<SavedStateHandle> savedStateProvider,
      Provider<ProductDetailRepository> productRepositoryProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider,
      Provider<SelectedSite> selectedSiteProvider,
      Provider<ParameterRepository> parameterRepositoryProvider) {
    this.savedStateProvider = savedStateProvider;
    this.productRepositoryProvider = productRepositoryProvider;
    this.wooCommerceStoreProvider = wooCommerceStoreProvider;
    this.selectedSiteProvider = selectedSiteProvider;
    this.parameterRepositoryProvider = parameterRepositoryProvider;
  }

  @Override
  public ProductPricingViewModel get() {
    return newInstance(savedStateProvider.get(), productRepositoryProvider.get(), wooCommerceStoreProvider.get(), selectedSiteProvider.get(), parameterRepositoryProvider.get());
  }

  public static ProductPricingViewModel_Factory create(
      Provider<SavedStateHandle> savedStateProvider,
      Provider<ProductDetailRepository> productRepositoryProvider,
      Provider<WooCommerceStore> wooCommerceStoreProvider,
      Provider<SelectedSite> selectedSiteProvider,
      Provider<ParameterRepository> parameterRepositoryProvider) {
    return new ProductPricingViewModel_Factory(savedStateProvider, productRepositoryProvider, wooCommerceStoreProvider, selectedSiteProvider, parameterRepositoryProvider);
  }

  public static ProductPricingViewModel newInstance(SavedStateHandle savedState,
      ProductDetailRepository productRepository, WooCommerceStore wooCommerceStore,
      SelectedSite selectedSite, ParameterRepository parameterRepository) {
    return new ProductPricingViewModel(savedState, productRepository, wooCommerceStore, selectedSite, parameterRepository);
  }
}
